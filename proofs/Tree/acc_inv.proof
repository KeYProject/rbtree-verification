\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Jul 16 22:37:07 CEST 2023
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off, Strings-Strings\\:on, assertions-assertions\\:safe, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:treatAsAxiom, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=4000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\include "../../iSet.key";

\proofObligation "#Proof Obligation Settings
#Sun Jul 16 22:37:07 CEST 2023
contract=Tree[java.lang.Object\\:\\:<inv>()].JML accessible clause.0
name=Tree[java.lang.Object\\:\\:<inv>()].JML accessible clause.0
class=de.uka.ilkd.key.proof.init.DependencyContractPO
";

\proof {
(keyLog "0" (keyUser "johanna" ) (keyVersion "167932a84464f61ce5aea5172abb98fb7bad2121"))
(keyLog "1" (keyUser "johanna" ) (keyVersion "167932a84464f61ce5aea5172abb98fb7bad2121"))
(keyLog "2" (keyUser "johanna" ) (keyVersion "167932a84464f61ce5aea5172abb98fb7bad2121"))
(keyLog "3" (keyUser "johanna" ) (keyVersion "167932a84464f61ce5aea5172abb98fb7bad2121"))
(keyLog "4" (keyUser "johanna" ) (keyVersion "167932a84464f61ce5aea5172abb98fb7bad2121"))

(autoModeTime "1821264")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "self,anon_heap"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "equiv_right" (formula "8") (userinteraction))
(branch "Case '->'"
   (rule "Definition_axiom_for_footprint_in_Tree" (formula "8") (term "0,1,1,0") (ifseqformula "7") (userinteraction))
   (rule "Class_invariant_axiom_for_Tree" (formula "8") (inst "k_0=k_0") (inst "k=k") (ifseqformula "7") (userinteraction))
   (rule "Class_invariant_axiom_for_Tree" (formula "6") (inst "k_0=k_0") (inst "k=k") (ifseqformula "7") (userinteraction))
   (rule "eqTermCut" (formula "8") (term "0,0,0,0,0,0,0,0,0,0") (inst "s=Tree::select(heap, self, Tree::$left)") (userinteraction))
   (branch "Assume self.left@heap[anon( allLocs ∖ self.* ∪ if (self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if (self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if (self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if (self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.left"
      (rule "applyEq" (formula "9") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "1") (userinteraction))
      (rule "eqTermCut" (formula "9") (term "1,0,0,0,0,0,0,0,0,0") (inst "s=Tree::select(heap, self, Tree::$right)") (userinteraction))
      (branch "Assume self.right@heap[anon( allLocs ∖ self.* ∪ if (self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if (self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if (self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if (self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.right"
         (rule "applyEq" (formula "10") (term "1,0,0,0,0,0,0,0,0,0") (ifseqformula "1") (userinteraction))
         (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "2") (userinteraction))
         (rule "applyEq" (formula "10") (term "0,1,0,0,0,0,0,0") (ifseqformula "1") (userinteraction))
         (rule "eqTermCut" (formula "10") (term "1,1,0,0,0,0,0") (inst "s=int::select(heap, self, Tree::$heightVariant)") (userinteraction))
         (branch "Assume self.heightVariant@heap[anon( allLocs ∖ self.* ∪ if ( self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if ( self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if ( self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if ( self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.heightVariant"
            (rule "applyEq" (formula "11") (term "1,1,0,0,0,0,0") (ifseqformula "1") (userinteraction))
            (rule "applyEq" (formula "11") (term "0,0,1,0,0,0,0") (ifseqformula "3") (userinteraction))
            (rule "applyEq" (formula "11") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "1") (userinteraction))
            (rule "applyEq" (formula "11") (term "1,1,1,0,1,1,0,0,0,0") (ifseqformula "3") (userinteraction))
            (rule "applyEq" (formula "11") (term "1,1,1,1,0,0,0,0") (ifseqformula "3") (userinteraction))
            (rule "applyEq" (formula "11") (term "0,0,1,0,0,0") (ifseqformula "2") (userinteraction))
            (rule "applyEq" (formula "11") (term "1,0,0,1,1,0,0,0") (ifseqformula "1") (userinteraction))
            (rule "applyEq" (formula "11") (term "0,0,0,1") (ifseqformula "3") (userinteraction))
            (rule "applyEq" (formula "11") (term "0,1,0,1") (ifseqformula "2") (userinteraction))
            (rule "applyEq" (formula "11") (term "1,0,1,1") (ifseqformula "3") (userinteraction))
            (rule "applyEq" (formula "11") (term "1,1,1,1") (ifseqformula "2") (userinteraction))
            (rule "cut" (inst "cutFormula=(  (Tree::select(heap, self, Tree::$left) = null)<<origin(\"User_Interaction @ node 4349 (cut)\",\"[]\")>>
 | (  Tree::footprint(anon(heap,
                           setMinus(allLocs,
                                    setMinus(union(allFields(self),
                                                   union(\\if (  Tree::select(heap,
                                                                             self,
                                                                             Tree::$left)
                                                              = null)
                                                             \\then (empty)
                                                             \\else (Tree::footprint$lmtd(heap,
                                                                                         Tree::select(heap,
                                                                                                      self,
                                                                                                      Tree::$left))),
                                                         \\if (  Tree::select(heap,
                                                                             self,
                                                                             Tree::$right)
                                                              = null)
                                                             \\then (empty)
                                                             \\else (Tree::footprint$lmtd(heap,
                                                                                         Tree::select(heap,
                                                                                                      self,
                                                                                                      Tree::$right))))),
                                             union(union(singleton(self,
                                                                   Tree::$isRed),
                                                         \\if (  Tree::select(heap,
                                                                             self,
                                                                             Tree::$left)
                                                              = null)
                                                             \\then (empty)
                                                             \\else (singleton(Tree::select(heap,
                                                                                           self,
                                                                                           Tree::$left),
                                                                              Tree::$isRed))),
                                                   \\if (  Tree::select(heap,
                                                                       self,
                                                                       Tree::$right)
                                                        = null)
                                                       \\then (empty)
                                                       \\else (singleton(Tree::select(heap,
                                                                                     self,
                                                                                     Tree::$right),
                                                                        Tree::$isRed))))),
                           anon_heap<<anonHeapFunction>>),
                      Tree::select(heap,
                                   self,
                                   Tree::$left))
    = Tree::footprint(heap,
                      Tree::select(heap,
                                   self,
                                   Tree::$left)))<<origin(\"User_Interaction @ node 4349 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 4349 (cut)\",\"[]\")>>") (userinteraction))
            (branch "CUT: self.left = null ∨ (self.left@heap).footprint() @heap[anon( allLocs ∖ self.* ∪ if (self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if (self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if (self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if (self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.left.footprint() TRUE"
               (rule "applyEq" (formula "12") (term "1,1,1,0,1,1,0,0,0") (ifseqformula "3") (userinteraction))
               (rule "cut" (inst "cutFormula=(  (Tree::select(heap, self, Tree::$right) = null)<<origin(\"User_Interaction @ node 14952 (cut)\",\"[]\")>>
 | (  Tree::footprint(anon(heap,
                           setMinus(allLocs,
                                    setMinus(union(allFields(self),
                                                   union(\\if (  Tree::select(heap,
                                                                             self,
                                                                             Tree::$left)
                                                              = null)
                                                             \\then (empty)
                                                             \\else (Tree::footprint$lmtd(heap,
                                                                                         Tree::select(heap,
                                                                                                      self,
                                                                                                      Tree::$left))),
                                                         \\if (  Tree::select(heap,
                                                                             self,
                                                                             Tree::$right)
                                                              = null)
                                                             \\then (empty)
                                                             \\else (Tree::footprint$lmtd(heap,
                                                                                         Tree::select(heap,
                                                                                                      self,
                                                                                                      Tree::$right))))),
                                             union(union(singleton(self,
                                                                   Tree::$isRed),
                                                         \\if (  Tree::select(heap,
                                                                             self,
                                                                             Tree::$left)
                                                              = null)
                                                             \\then (empty)
                                                             \\else (singleton(Tree::select(heap,
                                                                                           self,
                                                                                           Tree::$left),
                                                                              Tree::$isRed))),
                                                   \\if (  Tree::select(heap,
                                                                       self,
                                                                       Tree::$right)
                                                        = null)
                                                       \\then (empty)
                                                       \\else (singleton(Tree::select(heap,
                                                                                     self,
                                                                                     Tree::$right),
                                                                        Tree::$isRed))))),
                           anon_heap<<anonHeapFunction>>),
                      Tree::select(heap,
                                   self,
                                   Tree::$right))
    = Tree::footprint(heap,
                      Tree::select(heap,
                                   self,
                                   Tree::$right)))<<origin(\"User_Interaction @ node 14952 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 14952 (cut)\",\"[]\")>>") (userinteraction))
               (branch "CUT: self.right = null ∨ (self.right@heap).footprint() @heap[anon( allLocs ∖ self.* ∪ if (self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if (self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if (self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if (self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.right.footprint() TRUE"
                   (builtin "One Step Simplification" (formula "13") (userinteraction))
                  (rule "cut" (inst "cutFormula=(  (Tree::select(heap, self, Tree::$left) = null)<<origin(\"User_Interaction @ node 17551 (cut)\",\"[]\")>>
 | (  int::select(anon(heap,
                       setMinus(allLocs,
                                setMinus(union(allFields(self),
                                               union(\\if (  Tree::select(heap,
                                                                         self,
                                                                         Tree::$left)
                                                          = null)
                                                         \\then (empty)
                                                         \\else (Tree::footprint$lmtd(heap,
                                                                                     Tree::select(heap,
                                                                                                  self,
                                                                                                  Tree::$left))),
                                                     \\if (  Tree::select(heap,
                                                                         self,
                                                                         Tree::$right)
                                                          = null)
                                                         \\then (empty)
                                                         \\else (Tree::footprint$lmtd(heap,
                                                                                     Tree::select(heap,
                                                                                                  self,
                                                                                                  Tree::$right))))),
                                         union(union(singleton(self,
                                                               Tree::$isRed),
                                                     \\if (  Tree::select(heap,
                                                                         self,
                                                                         Tree::$left)
                                                          = null)
                                                         \\then (empty)
                                                         \\else (singleton(Tree::select(heap,
                                                                                       self,
                                                                                       Tree::$left),
                                                                          Tree::$isRed))),
                                               \\if (  Tree::select(heap,
                                                                   self,
                                                                   Tree::$right)
                                                    = null)
                                                   \\then (empty)
                                                   \\else (singleton(Tree::select(heap,
                                                                                 self,
                                                                                 Tree::$right),
                                                                    Tree::$isRed))))),
                       anon_heap<<anonHeapFunction>>),
                  Tree::select(anon(heap,
                                    setMinus(allLocs,
                                             setMinus(union(allFields(self),
                                                            union(\\if (  Tree::select(heap,
                                                                                      self,
                                                                                      Tree::$left)
                                                                       = null)
                                                                      \\then (empty)
                                                                      \\else (Tree::footprint$lmtd(heap,
                                                                                                  Tree::select(heap,
                                                                                                               self,
                                                                                                               Tree::$left))),
                                                                  \\if (  Tree::select(heap,
                                                                                      self,
                                                                                      Tree::$right)
                                                                       = null)
                                                                      \\then (empty)
                                                                      \\else (Tree::footprint$lmtd(heap,
                                                                                                  Tree::select(heap,
                                                                                                               self,
                                                                                                               Tree::$right))))),
                                                      union(union(singleton(self,
                                                                            Tree::$isRed),
                                                                  \\if (  Tree::select(heap,
                                                                                      self,
                                                                                      Tree::$left)
                                                                       = null)
                                                                      \\then (empty)
                                                                      \\else (singleton(Tree::select(heap,
                                                                                                    self,
                                                                                                    Tree::$left),
                                                                                       Tree::$isRed))),
                                                            \\if (  Tree::select(heap,
                                                                                self,
                                                                                Tree::$right)
                                                                 = null)
                                                                \\then (empty)
                                                                \\else (singleton(Tree::select(heap,
                                                                                              self,
                                                                                              Tree::$right),
                                                                                 Tree::$isRed))))),
                                    anon_heap<<anonHeapFunction>>),
                               self,
                               Tree::$left),
                  Tree::$heightVariant)
    = int::select(heap,
                  Tree::select(heap, self, Tree::$left),
                  Tree::$heightVariant))<<origin(\"User_Interaction @ node 17551 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 17551 (cut)\",\"[]\")>>") (userinteraction))
                  (branch "CUT: self.left = null ∨ self.left.heightVariant@heap[anon( allLocs ∖ self.* ∪ if ( self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if ( self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if ( self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if ( self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.left.heightVariant TRUE"
                     (rule "cut" (inst "cutFormula=(  (Tree::select(heap, self, Tree::$right) = null)<<origin(\"User_Interaction @ node 21565 (cut)\",\"[]\")>>
 | (  int::select(anon(heap,
                       setMinus(allLocs,
                                setMinus(union(allFields(self),
                                               union(\\if (  Tree::select(heap,
                                                                         self,
                                                                         Tree::$left)
                                                          = null)
                                                         \\then (empty)
                                                         \\else (Tree::footprint$lmtd(heap,
                                                                                     Tree::select(heap,
                                                                                                  self,
                                                                                                  Tree::$left))),
                                                     \\if (  Tree::select(heap,
                                                                         self,
                                                                         Tree::$right)
                                                          = null)
                                                         \\then (empty)
                                                         \\else (Tree::footprint$lmtd(heap,
                                                                                     Tree::select(heap,
                                                                                                  self,
                                                                                                  Tree::$right))))),
                                         union(union(singleton(self,
                                                               Tree::$isRed),
                                                     \\if (  Tree::select(heap,
                                                                         self,
                                                                         Tree::$left)
                                                          = null)
                                                         \\then (empty)
                                                         \\else (singleton(Tree::select(heap,
                                                                                       self,
                                                                                       Tree::$left),
                                                                          Tree::$isRed))),
                                               \\if (  Tree::select(heap,
                                                                   self,
                                                                   Tree::$right)
                                                    = null)
                                                   \\then (empty)
                                                   \\else (singleton(Tree::select(heap,
                                                                                 self,
                                                                                 Tree::$right),
                                                                    Tree::$isRed))))),
                       anon_heap<<anonHeapFunction>>),
                  Tree::select(anon(heap,
                                    setMinus(allLocs,
                                             setMinus(union(allFields(self),
                                                            union(\\if (  Tree::select(heap,
                                                                                      self,
                                                                                      Tree::$left)
                                                                       = null)
                                                                      \\then (empty)
                                                                      \\else (Tree::footprint$lmtd(heap,
                                                                                                  Tree::select(heap,
                                                                                                               self,
                                                                                                               Tree::$left))),
                                                                  \\if (  Tree::select(heap,
                                                                                      self,
                                                                                      Tree::$right)
                                                                       = null)
                                                                      \\then (empty)
                                                                      \\else (Tree::footprint$lmtd(heap,
                                                                                                  Tree::select(heap,
                                                                                                               self,
                                                                                                               Tree::$right))))),
                                                      union(union(singleton(self,
                                                                            Tree::$isRed),
                                                                  \\if (  Tree::select(heap,
                                                                                      self,
                                                                                      Tree::$left)
                                                                       = null)
                                                                      \\then (empty)
                                                                      \\else (singleton(Tree::select(heap,
                                                                                                    self,
                                                                                                    Tree::$left),
                                                                                       Tree::$isRed))),
                                                            \\if (  Tree::select(heap,
                                                                                self,
                                                                                Tree::$right)
                                                                 = null)
                                                                \\then (empty)
                                                                \\else (singleton(Tree::select(heap,
                                                                                              self,
                                                                                              Tree::$right),
                                                                                 Tree::$isRed))))),
                                    anon_heap<<anonHeapFunction>>),
                               self,
                               Tree::$right),
                  Tree::$heightVariant)
    = int::select(heap,
                  Tree::select(heap,
                               self,
                               Tree::$right),
                  Tree::$heightVariant))<<origin(\"User_Interaction @ node 21565 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 21565 (cut)\",\"[]\")>>") (userinteraction))
                     (branch "CUT: self.right = null ∨ self.right.heightVariant@heap[anon( allLocs ∖ self.* ∪ if ( self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if ( self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if ( self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if ( self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.right.heightVariant TRUE"
                        (rule "applyEq" (formula "15") (term "1,1,1,1,0,0,0") (ifseqformula "6") (userinteraction))
                        (rule "unlimit_java_lang_Object__inv_" (formula "15") (term "1,1,1,0,0,0") (userinteraction))
                        (rule "unlimit_java_lang_Object__inv_" (formula "13") (term "1,1,1,0,0,0") (userinteraction))
                        (rule "unlimit_java_lang_Object__inv_" (formula "13") (term "1,1,1,0,0,0,0") (userinteraction))
                        (rule "unlimit_java_lang_Object__inv_" (formula "15") (term "1,1,1,0,0,0,0") (userinteraction))
                        (rule "andRight" (formula "15"))
                        (branch "Case 1"
                           (rule "andRight" (formula "15"))
                           (branch "Case 1"
                              (rule "andRight" (formula "15"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "15"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "15"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "15"))
                                       (branch "Case 1"
                                          (rule "orRight" (formula "15"))
                                          (rule "orRight" (formula "15"))
                                          (rule "notRight" (formula "15"))
                                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                                          (rule "closeFalse" (formula "14"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")))
                                          (rule "closeFalse" (formula "13"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "orRight" (formula "15"))
                                       (rule "andRight" (formula "16"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "16"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "eqSymm" (formula "13") (term "0,0"))
                                             (rule "replace_known_right" (formula "24") (term "0,0,1,0,1,1,0,1,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "5") (term "0,1,0,1,1,1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "6") (term "0,0,1,0,1,1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "7") (term "0,0,1,0,1,1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                             (rule "disjointDefinition" (formula "21") (term "1"))
                                             (rule "disjointDefinition" (formula "18") (term "1,0,1"))
                                             (rule "disjointDefinition" (formula "16"))
                                             (rule "inEqSimp_ltRight" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "15"))
                                             (rule "add_zero_right" (formula "15") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1"))
                                             (rule "mul_literals" (formula "16") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                             (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "8") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0,1"))
                                             (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0,1"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,0,1,0,1"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "6") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "7") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "8") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0,1"))
                                             (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0,1"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,1,0,1"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                             (rule "simplifySelectOfAnon" (formula "6"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")) (ifInst ""  (formula "12")))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfUnion" (formula "6") (term "0"))
                                             (rule "elementOfUnion" (formula "6") (term "1,0"))
                                             (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSetMinus" (formula "6") (term "1,1,0"))
                                             (rule "elementOfSetMinus" (formula "6") (term "0,1,0"))
                                             (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                                             (rule "elementOfUnion" (formula "6") (term "0,1,1,1,0"))
                                             (rule "elementOfUnion" (formula "6") (term "0,1,0,1,0"))
                                             (rule "elementOfUnion" (formula "6") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSingleton" (formula "6") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfUnion" (formula "6") (term "0,0,1,0,1,0"))
                                             (rule "elementOfSingleton" (formula "6") (term "1,0,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSingleton" (formula "6") (term "0,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfUnion" (formula "6") (term "0,0,1,1,1,0"))
                                             (rule "elementOfSingleton" (formula "6") (term "1,0,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSingleton" (formula "6") (term "0,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=Tree_right_0"))
                                             (rule "applyEq" (formula "2") (term "1,0,1") (ifseqformula "7"))
                                             (rule "simplifySelectOfAnon" (formula "7"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")) (ifInst ""  (formula "12")))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,1") (ifseqformula "8"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "1,0"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,1,0"))
                                             (rule "elementOfSetMinus" (formula "7") (term "1,1,0"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0,1,0,1,0"))
                                             (rule "elementOfUnion" (formula "7") (term "0,1,1,1,0"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,1,0,1,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,1,1,1,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=Tree_left_0"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "8"))
                                             (rule "simplifySelectOfAnon" (formula "8"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "24")) (ifInst ""  (formula "12")))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "9"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "9"))
                                             (rule "hideAuxiliaryEq" (formula "9"))
                                             (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfUnion" (formula "8") (term "0"))
                                             (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfUnion" (formula "8") (term "1,0"))
                                             (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                             (rule "elementOfSetMinus" (formula "8") (term "0,1,0"))
                                             (rule "elementOfSetMinus" (formula "8") (term "1,1,0"))
                                             (rule "elementOfUnion" (formula "8") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfSingleton" (formula "8") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfUnion" (formula "8") (term "0,1,1,1,0"))
                                             (rule "elementOfUnion" (formula "8") (term "0,1,0,1,0"))
                                             (rule "elementOfUnion" (formula "8") (term "0,0,1,1,1,0"))
                                             (rule "elementOfSingleton" (formula "8") (term "0,0,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfSingleton" (formula "8") (term "0,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfUnion" (formula "8") (term "0,0,1,0,1,0"))
                                             (rule "elementOfSingleton" (formula "8") (term "0,0,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfSingleton" (formula "8") (term "0,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "pullOutSelect" (formula "2") (term "0,1") (inst "selectSK=Tree_heightVariant_1"))
                                             (rule "simplifySelectOfAnon" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "eqSymm" (formula "3") (term "1"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                             (rule "elementOfUnion" (formula "2") (term "1,0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "2") (term "1,1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "1,0,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Tree_heightVariant_2"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                             (rule "simplifySelectOfAnon" (formula "4"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "26")))
                                             (rule "eqSymm" (formula "5"))
                                             (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "1"))
                                             (rule "andLeft" (formula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "17"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0"))
                                             (rule "leq_literals" (formula "17"))
                                             (rule "closeFalse" (formula "17"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "eqSymm" (formula "13") (term "0,0"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,1,0,1,1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "24") (term "0,0,1,0,1,1,0,1") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "7") (term "0,0,1,0,1,1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "6") (term "0,1,0,1,1,1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "2") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                             (rule "disjointDefinition" (formula "21") (term "1"))
                                             (rule "disjointDefinition" (formula "18") (term "1,0,1"))
                                             (rule "disjointDefinition" (formula "16"))
                                             (rule "disjointDefinition" (formula "24"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "14"))
                                             (rule "add_zero_right" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                             (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "4"))
                                             (rule "close" (formula "24") (ifseqformula "16"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "Use Dependency Contract" (formula "16") (ifInst ""  (formula "13") (term "1,1,1,0,0,0,0")) (contract "Tree[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
                                          (rule "impLeft" (formula "14"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "14"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "14"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "14"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "14"))
                                                         (branch "Case 1"
                                                            (rule "notRight" (formula "14"))
                                                            (rule "close" (formula "16") (ifseqformula "1"))
                                                         )
                                                         (branch "Case 2"
                                                             (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                            (rule "referencedObjectIsCreatedRight" (formula "14") (ifseqformula "16"))
                                                            (rule "close" (formula "14") (ifseqformula "8"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "14"))
                                                         (branch "Case 1"
                                                            (rule "close" (formula "14") (ifseqformula "8"))
                                                         )
                                                         (branch "Case 2"
                                                             (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                            (rule "wellFormedAnon" (formula "14"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "andLeft" (formula "15"))
                                                            (rule "andLeft" (formula "15"))
                                                            (rule "eqSymm" (formula "13") (term "0,0"))
                                                            (rule "replace_known_right" (formula "25") (term "0,1,0,1,1,1,0") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
                                                            (rule "replace_known_right" (formula "6") (term "0,0,1,0,1,1,0,0") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")))
                                                            (rule "replace_known_right" (formula "7") (term "0,1,0,1,1,1,0,0") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")))
                                                            (rule "replace_known_right" (formula "5") (term "0,1,0,1,1,1,0,0") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "24")))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,1,0,1,1,0,1,0,1") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                            (rule "replace_known_right" (formula "4") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                            (rule "replace_known_right" (formula "3") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "24"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                            (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "8"))
                                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "9")))
                                                            (rule "closeTrue" (formula "22"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")))
                                                      (rule "closeFalse" (formula "13"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "cut_direct" (formula "13") (term "1,0,1") (userinteraction))
                                                   (branch "CUT: self.right = null TRUE"
                                                       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "replace_known_left" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "13"))
                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")))
                                                      (rule "replace_known_right" (formula "5") (term "0,0,1,0,1,1,0,0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")))
                                                      (rule "replace_known_right" (formula "6") (term "0,0,1,0,1,1,0,0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")))
                                                      (rule "replace_known_right" (formula "20") (term "0,0,1,0,1,0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")))
                                                      (rule "replace_known_right" (formula "23") (term "0,0,1,0,1,1,0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")))
                                                      (rule "replace_known_left" (formula "3") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "13"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "replace_known_left" (formula "2") (term "0,1,1,1,1,0,0,1") (ifseqformula "12"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "replace_known_right" (formula "2") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "20"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                                      (rule "disjointDefinition" (formula "14"))
                                                      (rule "disjointDefinition" (formula "18"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12"))
                                                      (rule "add_zero_right" (formula "12") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "11"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                      (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "21") (term "1,1,0"))
                                                      (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1,0"))
                                                      (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "18") (term "1,0,0"))
                                                      (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_left_0"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                      (rule "simplifySelectOfAnon" (formula "5"))
                                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")) (ifInst ""  (formula "9")))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "elementOfUnion" (formula "5") (term "0"))
                                                      (rule "elementOfSetMinus" (formula "5") (term "1,0"))
                                                      (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "elementOfUnion" (formula "5") (term "0,1,1,0"))
                                                      (rule "elementOfSingleton" (formula "5") (term "1,0,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "elementOfSingleton" (formula "5") (term "0,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                                      (rule "simplifySelectOfAnon" (formula "3"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")) (ifInst ""  (formula "8")))
                                                      (rule "eqSymm" (formula "4"))
                                                      (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfUnion" (formula "3") (term "0"))
                                                      (rule "elementOfSetMinus" (formula "3") (term "1,0"))
                                                      (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfUnion" (formula "3") (term "0,1,1,0"))
                                                      (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfSingleton" (formula "3") (term "0,1,1,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_right_0"))
                                                      (rule "simplifySelectOfAnon" (formula "3"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "18")) (ifInst ""  (formula "7")))
                                                      (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "10"))
                                                      (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfUnion" (formula "3") (term "0"))
                                                      (rule "elementOfSetMinus" (formula "3") (term "1,0"))
                                                      (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                      (rule "elementOfSetMinus" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,1,1,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,1,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "limit_java_lang_Object__inv_" (formula "13"))
                                                      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "limit_Tree_footprint" (formula "2") (term "1"))
                                                      (rule "applyEq" (formula "3") (term "0,1,1,1,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "1") (term "2,1,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "21") (term "0,1,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0,0") (ifseqformula "2"))
                                                      (rule "limit_Tree_footprint" (formula "3") (term "0"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                      (rule "limit_java_lang_Object__inv_" (formula "22"))
                                                      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "equalityToElementOfRight" (formula "20") (inst "ov=ov") (inst "fv=fv"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "allRight" (formula "20") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "20") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "20"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSetMinus" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfSetMinus" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "elementOfUnion" (formula "21"))
                                                      (rule "orRight" (formula "21"))
                                                      (rule "elementOfUnion" (formula "20"))
                                                      (rule "orRight" (formula "20"))
                                                      (rule "elementOfSetMinus" (formula "22"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "elementOfSetMinus" (formula "23"))
                                                      (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "notRight" (formula "23"))
                                                      (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "false_right" (formula "23"))
                                                      (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "16"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "elementOfUnion" (formula "22"))
                                                      (rule "orRight" (formula "22"))
                                                      (rule "elementOfSingleton" (formula "22"))
                                                      (rule "elementOfUnion" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1"))
                                                      (rule "close" (formula "22") (ifseqformula "1"))
                                                   )
                                                   (branch "CUT: self.right = null FALSE"
                                                      (rule "Definition_axiom_for_footprint_in_Tree" (formula "13") (term "1,1,1") (ifseqformula "14") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")) (ifInst ""  (formula "14")) (ifInst ""  (formula "17")) (ifInst ""  (formula "14")) (ifInst ""  (formula "17")))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "andLeft" (formula "15"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "eqSymm" (formula "23"))
                                                      (rule "replace_known_right" (formula "6") (term "0,1,1,0,1,1,0,0") (ifseqformula "24"))
                                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")))
                                                      (rule "replace_known_right" (formula "28") (term "0,1,0,1,1,1,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                      (rule "replace_known_right" (formula "25") (term "0,0,1,0,1,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")))
                                                      (rule "replace_known_right" (formula "7") (term "0,0,1,0,1,1,0,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")))
                                                      (rule "replace_known_right" (formula "5") (term "0,0,1,0,1,1,0,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")))
                                                      (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")))
                                                      (rule "replace_known_right" (formula "3") (term "0,1,1,1,1,0,0,1") (ifseqformula "24"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                                      (rule "replace_known_right" (formula "2") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,1,0,1,1,0,1,0,1") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")))
                                                      (rule "disjointDefinition" (formula "22"))
                                                      (rule "disjointDefinition" (formula "18"))
                                                      (rule "disjointDefinition" (formula "15"))
                                                      (rule "disjointDefinition" (formula "25"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13"))
                                                      (rule "add_zero_right" (formula "13") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                      (rule "mul_literals" (formula "14") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                      (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "28") (term "1,1,0"))
                                                      (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "2") (term "1,1,0,1,0"))
                                                      (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "0"))
                                                      (rule "setMinusOfUnion" (formula "25") (term "1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "6") (term "1,1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "28") (term "1,1,1,0"))
                                                      (rule "setMinusOfUnion" (formula "7") (term "1,1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,1,0"))
                                                      (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0"))
                                                      (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,1,0"))
                                                      (rule "distributeIntersection" (formula "22") (term "1,0"))
                                                      (rule "setMinusOfUnion" (formula "25") (term "1,1,0,0"))
                                                      (rule "unionEqualsEmpty" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "unionEqualsEmpty" (formula "23"))
                                                      (rule "andLeft" (formula "23"))
                                                      (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=Tree_right_0"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
                                                      (rule "simplifySelectOfAnon" (formula "6"))
                                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "29")) (ifInst ""  (formula "11")))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elementOfUnion" (formula "6") (term "0"))
                                                      (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elementOfUnion" (formula "6") (term "1,0"))
                                                      (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "6") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=Tree_left_0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                      (rule "simplifySelectOfAnon" (formula "6"))
                                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")) (ifInst ""  (formula "10")))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elementOfUnion" (formula "6") (term "0"))
                                                      (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elementOfUnion" (formula "6") (term "1,0"))
                                                      (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "6") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                                      (rule "simplifySelectOfAnon" (formula "5"))
                                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "elementOfUnion" (formula "5") (term "0"))
                                                      (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                                      (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                      (rule "eqSymm" (formula "2"))
                                                      (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                      (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                                                      (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                      (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_heightVariant_2"))
                                                      (rule "simplifySelectOfAnon" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")))
                                                      (rule "eqSymm" (formula "3"))
                                                      (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                                      (rule "elementOfSetMinus" (formula "2") (term "0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfUnion" (formula "2") (term "0,1,0,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfUnion" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "elementOfUnion" (formula "2") (term "0,1,0,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0,0,0"))
                                                      (rule "elementOfSetMinus" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfSingleton" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                      (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "elementOfSingleton" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "commuteIntersection" (formula "19") (term "0"))
                                                      (rule "limit_java_lang_Object__inv_" (formula "16"))
                                                      (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "17"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "limit_java_lang_Object__inv_" (formula "13"))
                                                      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "limit_Tree_footprint" (formula "4") (term "1"))
                                                      (rule "applyEq" (formula "3") (term "0,0,1,1,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "2,0,1,0,0,0,0") (ifseqformula "4"))
                                                      (rule "disjointAllFields" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEq" (formula "5") (term "0,0,1,1,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "2") (term "2,0,1,0,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "27") (term "0,0,1,1,0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "30") (term "0,0,1,1,1,0") (ifseqformula "4"))
                                                      (rule "limit_Tree_footprint" (formula "3") (term "1"))
                                                      (rule "applyEq" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "2") (term "2,1,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "1") (term "2,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "31") (term "0,1,1,1,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "3"))
                                                      (rule "limit_Tree_footprint" (formula "4") (term "0"))
                                                      (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                                      (rule "limit_java_lang_Object__inv_" (formula "32"))
                                                      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "limit_Tree_footprint" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                                      (rule "ifthenelse_split" (formula "31") (term "1,1,1,0"))
                                                      (branch "self.left.right = null TRUE"
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                                                         (rule "ifthenelse_split" (formula "28") (term "1,0"))
                                                         (branch "self.right.right = null TRUE"
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "true_left" (formula "29"))
                                                            (rule "ifthenelse_split" (formula "27") (term "1,0"))
                                                            (branch "self.right.left = null TRUE"
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "associativeLawUnion" (formula "35") (term "1,1,0"))
                                                               (rule "limit_java_lang_Object__inv_" (formula "35"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "36"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "equalityToElementOfRight" (formula "33") (inst "ov=ov") (inst "fv=fv"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "allRight" (formula "33") (inst "sk=ov_0"))
                                                               (rule "allRight" (formula "33") (inst "sk=fv_0"))
                                                               (rule "notRight" (formula "33"))
                                                               (rule "elementOfIntersect" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "2"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "notLeft" (formula "3"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "elementOfUnion" (formula "31"))
                                                               (rule "orRight" (formula "31"))
                                                               (rule "elementOfSingleton" (formula "31"))
                                                               (rule "elementOfUnion" (formula "30"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "18"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "elementOfUnion" (formula "33"))
                                                               (rule "orRight" (formula "33"))
                                                               (rule "elementOfSetMinus" (formula "32"))
                                                                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                                                               (rule "false_right" (formula "32"))
                                                               (rule "elementOfSetMinus" (formula "33"))
                                                               (rule "elementOfSetMinus" (formula "32"))
                                                               (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "notRight" (formula "32"))
                                                               (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "false_right" (formula "33"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "32"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1"))
                                                               (rule "close" (formula "33") (ifseqformula "1"))
                                                            )
                                                            (branch "self.right.left = null FALSE"
                                                               (rule "associativeLawUnion" (formula "36") (term "1,1,0"))
                                                               (rule "limit_java_lang_Object__inv_" (formula "36"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "37"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "equalityToElementOfRight" (formula "34") (inst "ov=ov") (inst "fv=fv"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "allRight" (formula "34") (inst "sk=ov_0"))
                                                               (rule "allRight" (formula "34") (inst "sk=fv_0"))
                                                               (rule "notRight" (formula "34"))
                                                               (rule "elementOfIntersect" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "2"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "notLeft" (formula "3"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "elementOfUnion" (formula "31"))
                                                               (rule "orRight" (formula "31"))
                                                               (rule "elementOfSingleton" (formula "31"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "18"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "elementOfUnion" (formula "31"))
                                                               (rule "orRight" (formula "31"))
                                                               (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "28"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "elementOfSetMinus" (formula "33"))
                                                                (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")))
                                                               (rule "false_right" (formula "33"))
                                                               (rule "elementOfUnion" (formula "33"))
                                                               (rule "orRight" (formula "33"))
                                                               (rule "elementOfSetMinus" (formula "34"))
                                                               (rule "elementOfSetMinus" (formula "33"))
                                                               (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "notRight" (formula "33"))
                                                               (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "false_right" (formula "34"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "close" (formula "34") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch "self.right.right = null FALSE"
                                                            (rule "ifthenelse_split" (formula "27") (term "1,0"))
                                                            (branch "self.right.left = null TRUE"
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "associativeLawUnion" (formula "36") (term "1,1,0"))
                                                               (rule "limit_java_lang_Object__inv_" (formula "36"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "37"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "equalityToElementOfRight" (formula "34") (inst "ov=ov") (inst "fv=fv"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "allRight" (formula "34") (inst "sk=ov_0"))
                                                               (rule "allRight" (formula "34") (inst "sk=fv_0"))
                                                               (rule "notRight" (formula "34"))
                                                               (rule "elementOfIntersect" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "2"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "notLeft" (formula "3"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "elementOfUnion" (formula "31"))
                                                               (rule "orRight" (formula "31"))
                                                               (rule "elementOfSingleton" (formula "31"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "18"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "elementOfUnion" (formula "31"))
                                                               (rule "orRight" (formula "31"))
                                                               (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "29"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "elementOfSetMinus" (formula "33"))
                                                                (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")))
                                                               (rule "false_right" (formula "33"))
                                                               (rule "elementOfUnion" (formula "33"))
                                                               (rule "orRight" (formula "33"))
                                                               (rule "elementOfSetMinus" (formula "34"))
                                                               (rule "elementOfSetMinus" (formula "33"))
                                                               (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "33"))
                                                               (rule "notRight" (formula "33"))
                                                               (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "false_right" (formula "34"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "close" (formula "34") (ifseqformula "1"))
                                                            )
                                                            (branch "self.right.left = null FALSE"
                                                               (rule "associativeLawUnion" (formula "37") (term "1,1,0"))
                                                               (rule "limit_java_lang_Object__inv_" (formula "37"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "38"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "equalityToElementOfRight" (formula "35") (inst "ov=ov") (inst "fv=fv"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "allRight" (formula "35") (inst "sk=ov_0"))
                                                               (rule "allRight" (formula "35") (inst "sk=fv_0"))
                                                               (rule "notRight" (formula "35"))
                                                               (rule "elementOfIntersect" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "elementOfUnion" (formula "31"))
                                                               (rule "orRight" (formula "31"))
                                                               (rule "elementOfUnion" (formula "30"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "elementOfSingleton" (formula "30"))
                                                               (rule "elementOfUnion" (formula "33"))
                                                               (rule "orRight" (formula "33"))
                                                               (rule "elementOfSetMinus" (formula "32"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "28"))
                                                               (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "29"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "18"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "false_right" (formula "36"))
                                                               (rule "elementOfSetMinus" (formula "37"))
                                                               (rule "elementOfSetMinus" (formula "36"))
                                                               (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "notRight" (formula "36"))
                                                               (rule "replace_known_left" (formula "37") (term "0,1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "false_right" (formula "37"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "32"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1"))
                                                               (rule "close" (formula "35") (ifseqformula "1"))
                                                            )
                                                         )
                                                      )
                                                      (branch "self.left.right = null FALSE"
                                                         (rule "commuteUnion_2" (formula "32") (term "1,1,0"))
                                                         (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                                                         (rule "ifthenelse_split" (formula "26") (term "1,0"))
                                                         (branch "self.right.left = null TRUE"
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "ifthenelse_split" (formula "27") (term "1,0"))
                                                            (branch "self.right.right = null TRUE"
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "associativeLawUnion" (formula "32") (term "1,0,0"))
                                                               (rule "associativeLawUnion" (formula "35") (term "1,1,0"))
                                                               (rule "limit_java_lang_Object__inv_" (formula "35"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "36"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "associativeLawUnion" (formula "29") (term "1,1,0"))
                                                               (rule "equalityToElementOfRight" (formula "32") (inst "ov=ov") (inst "fv=fv"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allRight" (formula "32") (inst "sk=ov_0"))
                                                               (rule "allRight" (formula "32") (inst "sk=fv_0"))
                                                               (rule "notRight" (formula "32"))
                                                               (rule "elementOfIntersect" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "elementOfUnion" (formula "30"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "elementOfUnion" (formula "29"))
                                                               (rule "orRight" (formula "29"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "17"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "elementOfSetMinus" (formula "33"))
                                                               (rule "elementOfUnion" (formula "32"))
                                                               (rule "orRight" (formula "32"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "26"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "elementOfUnion" (formula "31"))
                                                               (rule "orRight" (formula "31"))
                                                               (rule "elementOfSingleton" (formula "31"))
                                                               (rule "elementOfSingleton" (formula "32"))
                                                               (rule "elementOfUnion" (formula "36") (term "0,1"))
                                                               (rule "elementOfSingleton" (formula "36") (term "1,0,1"))
                                                               (rule "replace_known_right" (formula "36") (term "0,1,0,1") (ifseqformula "29"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "elementOfSetMinus" (formula "34"))
                                                                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "30")))
                                                               (rule "false_right" (formula "34"))
                                                               (rule "elementOfSetMinus" (formula "34"))
                                                               (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "notRight" (formula "34"))
                                                               (rule "elementOfUnion" (formula "35") (term "0,1"))
                                                               (rule "elementOfSingleton" (formula "35") (term "1,0,1"))
                                                               (rule "replace_known_right" (formula "35") (term "1,0,1") (ifseqformula "32"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "elementOfSingleton" (formula "35") (term "0,1"))
                                                               (rule "replace_known_right" (formula "35") (term "0,0,1") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1"))
                                                               (rule "close" (formula "32") (ifseqformula "1"))
                                                            )
                                                            (branch "self.right.right = null FALSE"
                                                               (rule "associativeLawUnion" (formula "33") (term "1,0,0"))
                                                               (rule "associativeLawUnion" (formula "36") (term "1,1,0"))
                                                               (rule "limit_java_lang_Object__inv_" (formula "36"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "37"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "equalityToElementOfRight" (formula "34") (inst "ov=ov") (inst "fv=fv"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "allRight" (formula "34") (inst "sk=ov_0"))
                                                               (rule "allRight" (formula "34") (inst "sk=fv_0"))
                                                               (rule "notRight" (formula "34"))
                                                               (rule "elementOfIntersect" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "elementOfUnion" (formula "30"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "elementOfUnion" (formula "29"))
                                                               (rule "orRight" (formula "29"))
                                                               (rule "elementOfSetMinus" (formula "32"))
                                                               (rule "elementOfUnion" (formula "31"))
                                                               (rule "orRight" (formula "31"))
                                                               (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "28"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "17"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "26"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "elementOfUnion" (formula "32"))
                                                               (rule "orRight" (formula "32"))
                                                               (rule "elementOfSingleton" (formula "33"))
                                                               (rule "elementOfSingleton" (formula "32"))
                                                               (rule "elementOfUnion" (formula "37") (term "0,1"))
                                                               (rule "elementOfSingleton" (formula "37") (term "1,0,1"))
                                                               (rule "replace_known_right" (formula "37") (term "0,1,0,1") (ifseqformula "29"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "elementOfSetMinus" (formula "35"))
                                                                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "30")))
                                                               (rule "false_right" (formula "35"))
                                                               (rule "elementOfSetMinus" (formula "35"))
                                                               (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "notRight" (formula "35"))
                                                               (rule "elementOfUnion" (formula "36") (term "0,1"))
                                                               (rule "elementOfSingleton" (formula "36") (term "0,0,1"))
                                                               (rule "replace_known_right" (formula "36") (term "0,0,0,1") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "elementOfSingleton" (formula "36") (term "0,1"))
                                                               (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1"))
                                                               (rule "close" (formula "33") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch "self.right.left = null FALSE"
                                                            (rule "ifthenelse_split" (formula "27") (term "1,0"))
                                                            (branch "self.right.right = null TRUE"
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "associativeLawUnion" (formula "33") (term "1,0,0"))
                                                               (rule "associativeLawUnion" (formula "36") (term "1,1,0"))
                                                               (rule "limit_java_lang_Object__inv_" (formula "36"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "37"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "equalityToElementOfRight" (formula "34") (inst "ov=ov") (inst "fv=fv"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "allRight" (formula "34") (inst "sk=ov_0"))
                                                               (rule "allRight" (formula "34") (inst "sk=fv_0"))
                                                               (rule "notRight" (formula "34"))
                                                               (rule "elementOfIntersect" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "elementOfUnion" (formula "30"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "elementOfUnion" (formula "29"))
                                                               (rule "orRight" (formula "29"))
                                                               (rule "elementOfSetMinus" (formula "32"))
                                                               (rule "elementOfUnion" (formula "31"))
                                                               (rule "orRight" (formula "31"))
                                                               (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "27"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "17"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "26"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "elementOfUnion" (formula "32"))
                                                               (rule "orRight" (formula "32"))
                                                               (rule "elementOfSingleton" (formula "33"))
                                                               (rule "elementOfSingleton" (formula "32"))
                                                               (rule "elementOfUnion" (formula "37") (term "0,1"))
                                                               (rule "elementOfSingleton" (formula "37") (term "1,0,1"))
                                                               (rule "replace_known_right" (formula "37") (term "0,1,0,1") (ifseqformula "29"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "elementOfSetMinus" (formula "35"))
                                                                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "30")))
                                                               (rule "false_right" (formula "35"))
                                                               (rule "elementOfSetMinus" (formula "35"))
                                                               (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "notRight" (formula "35"))
                                                               (rule "elementOfUnion" (formula "36") (term "0,1"))
                                                               (rule "elementOfSingleton" (formula "36") (term "0,0,1"))
                                                               (rule "replace_known_right" (formula "36") (term "0,0,0,1") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "elementOfSingleton" (formula "36") (term "0,1"))
                                                               (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1"))
                                                               (rule "close" (formula "33") (ifseqformula "1"))
                                                            )
                                                            (branch "self.right.right = null FALSE"
                                                               (rule "associativeLawUnion" (formula "34") (term "1,0,0"))
                                                               (rule "associativeLawUnion" (formula "37") (term "1,1,0"))
                                                               (rule "limit_java_lang_Object__inv_" (formula "37"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "38"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "equalityToElementOfRight" (formula "35") (inst "ov=ov") (inst "fv=fv"))
                                                                (builtin "One Step Simplification" (formula "35"))
                                                               (rule "allRight" (formula "35") (inst "sk=ov_0"))
                                                               (rule "allRight" (formula "35") (inst "sk=fv_0"))
                                                               (rule "notRight" (formula "35"))
                                                               (rule "elementOfIntersect" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "elementOfUnion" (formula "30"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "elementOfUnion" (formula "29"))
                                                               (rule "orRight" (formula "29"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "17"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "elementOfUnion" (formula "32"))
                                                               (rule "orRight" (formula "32"))
                                                               (rule "elementOfSetMinus" (formula "34"))
                                                               (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "27"))
                                                               (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "28"))
                                                               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "26"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "elementOfUnion" (formula "33"))
                                                               (rule "orRight" (formula "33"))
                                                               (rule "elementOfSingleton" (formula "33"))
                                                               (rule "elementOfSingleton" (formula "34"))
                                                               (rule "elementOfSetMinus" (formula "36"))
                                                                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "32")))
                                                               (rule "false_right" (formula "36"))
                                                               (rule "elementOfSetMinus" (formula "36"))
                                                               (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "36"))
                                                               (rule "notRight" (formula "36"))
                                                               (rule "replace_known_left" (formula "37") (term "0,1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "false_right" (formula "37"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfUnion" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1"))
                                                               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "close" (formula "34") (ifseqformula "1"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "Class_invariant_axiom_for_Tree" (formula "13") (term "1,1,1,0,0,0,0") (inst "k=k") (inst "k_0=k_0") (ifseqformula "16") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "andLeft" (formula "17"))
                                                (rule "eqSymm" (formula "13") (term "0,0"))
                                                (rule "eqSymm" (formula "17") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "6") (term "0,1,0,1,1,1,0,0") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "30")))
                                                (rule "replace_known_right" (formula "31") (term "0,1,0,1,1,1,0") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                                                (rule "replace_known_right" (formula "7") (term "0,0,1,0,1,1,0,0") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "30")))
                                                (rule "replace_known_right" (formula "5") (term "0,0,1,0,1,1,0,0") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "30")))
                                                (rule "replace_known_right" (formula "1") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                                (rule "replace_known_right" (formula "3") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                (rule "replace_known_right" (formula "2") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                                (rule "replace_known_right" (formula "4") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                                (rule "disjointDefinition" (formula "27") (term "1"))
                                                (rule "disjointDefinition" (formula "24") (term "1,0,1"))
                                                (rule "disjointDefinition" (formula "16"))
                                                (rule "disjointDefinition" (formula "23") (term "1"))
                                                (rule "disjointDefinition" (formula "20") (term "1,0,1"))
                                                (rule "disjointDefinition" (formula "19") (term "1,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "14"))
                                                (rule "add_zero_right" (formula "14") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1"))
                                                (rule "measuredByCheck" (formula "28") (ifseqformula "12"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "18"))
                                                (rule "add_zero_right" (formula "18") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                (rule "precOfInt" (formula "28"))
                                                (rule "inEqSimp_ltToLeq" (formula "28") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                                (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "15"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_leqRight" (formula "28"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                (rule "mul_literals" (formula "16") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "eqSymm" (formula "13") (term "0,0"))
                                             (rule "replace_known_right" (formula "5") (term "0,1,0,1,1,1,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "25") (term "0,0,1,0,1,1,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "6") (term "0,1,0,1,1,1,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "7") (term "0,0,1,0,1,1,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "1") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "22") (term "0,1,0,1,1,1,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")) (ifInst ""  (formula "17")) (ifInst ""  (formula "25")))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "orRight" (formula "15"))
                                    (rule "andRight" (formula "16"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "16"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "14"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "eqSymm" (formula "13") (term "0,0"))
                                          (rule "replace_known_right" (formula "7") (term "0,1,1,1,1,0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "24") (term "0,1,1,1,1,0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "5") (term "0,1,1,1,1,0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "6") (term "0,1,1,0,1,1,0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "4") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "1") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "3") (term "0,1,1,1,1,0,0,1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,1,0,1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                          (rule "disjointDefinition" (formula "21") (term "1"))
                                          (rule "disjointDefinition" (formula "15") (term "1,0,1"))
                                          (rule "disjointDefinition" (formula "17"))
                                          (rule "inEqSimp_ltRight" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15"))
                                          (rule "add_zero_right" (formula "15") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1"))
                                          (rule "mul_literals" (formula "17") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                          (rule "setMinusOfUnion" (formula "8") (term "1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0,1"))
                                          (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "2") (term "1,1,0,1,0"))
                                          (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "3") (term "1,1,0,1,0,1"))
                                          (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0,1"))
                                          (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1,0"))
                                          (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "8") (term "1,1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "6") (term "1,1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "7") (term "1,1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0,1"))
                                          (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,1,0"))
                                          (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                                          (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,1,0,1"))
                                          (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0,1"))
                                          (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,1,0"))
                                          (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=Tree_left_0"))
                                          (rule "applyEq" (formula "3") (term "1,0,1") (ifseqformula "8"))
                                          (rule "simplifySelectOfAnon" (formula "8"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "24")) (ifInst ""  (formula "12")))
                                          (rule "eqSymm" (formula "9"))
                                          (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0,1") (ifseqformula "9"))
                                          (rule "hideAuxiliaryEq" (formula "9"))
                                          (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "elementOfUnion" (formula "8") (term "0"))
                                          (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "8") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "elementOfUnion" (formula "8") (term "1,0"))
                                          (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "8") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "elementOfSetMinus" (formula "8") (term "1,1,0"))
                                          (rule "elementOfSetMinus" (formula "8") (term "0,1,0"))
                                          (rule "elementOfUnion" (formula "8") (term "0,1,1,1,0"))
                                          (rule "elementOfSingleton" (formula "8") (term "1,0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "elementOfUnion" (formula "8") (term "0,1,1,1,0"))
                                          (rule "elementOfSingleton" (formula "8") (term "0,0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "elementOfUnion" (formula "8") (term "0,1,0,1,0"))
                                          (rule "elementOfSingleton" (formula "8") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "elementOfUnion" (formula "8") (term "0,1,0,1,0"))
                                          (rule "elementOfSingleton" (formula "8") (term "0,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                          (rule "simplifySelectOfAnon" (formula "6"))
                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")) (ifInst ""  (formula "12")))
                                          (rule "eqSymm" (formula "7"))
                                          (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "elementOfUnion" (formula "6") (term "0"))
                                          (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "elementOfUnion" (formula "6") (term "1,0"))
                                          (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "6") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "elementOfSetMinus" (formula "6") (term "1,1,0"))
                                          (rule "elementOfSetMinus" (formula "6") (term "0,1,0"))
                                          (rule "elementOfUnion" (formula "6") (term "0,1,1,1,0"))
                                          (rule "elementOfSingleton" (formula "6") (term "1,0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "elementOfUnion" (formula "6") (term "0,1,0,1,0"))
                                          (rule "elementOfSingleton" (formula "6") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "elementOfUnion" (formula "6") (term "0,1,0,1,0"))
                                          (rule "elementOfSingleton" (formula "6") (term "0,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "elementOfUnion" (formula "6") (term "0,1,1,1,0"))
                                          (rule "elementOfSingleton" (formula "6") (term "0,0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=Tree_right_0"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "7"))
                                          (rule "simplifySelectOfAnon" (formula "7"))
                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")) (ifInst ""  (formula "12")))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "8"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "elementOfUnion" (formula "7") (term "0"))
                                          (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "elementOfUnion" (formula "7") (term "1,0"))
                                          (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "elementOfSetMinus" (formula "7") (term "1,1,0"))
                                          (rule "elementOfSetMinus" (formula "7") (term "0,1,0"))
                                          (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "7") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "elementOfUnion" (formula "7") (term "0,1,0,1,0"))
                                          (rule "elementOfSingleton" (formula "7") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "elementOfUnion" (formula "7") (term "0,1,0,1,0"))
                                          (rule "elementOfSingleton" (formula "7") (term "0,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "elementOfUnion" (formula "7") (term "0,1,1,1,0"))
                                          (rule "elementOfSingleton" (formula "7") (term "1,0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "elementOfUnion" (formula "7") (term "0,1,1,1,0"))
                                          (rule "elementOfSingleton" (formula "7") (term "0,0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=Tree_heightVariant_1"))
                                          (rule "simplifySelectOfAnon" (formula "3"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "eqSymm" (formula "4") (term "1"))
                                          (rule "elementOfSetMinus" (formula "3") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                          (rule "elementOfUnion" (formula "3") (term "1,0,0,0,0"))
                                          (rule "elementOfSetMinus" (formula "3") (term "0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSetMinus" (formula "3") (term "0,1,0,0,0,0"))
                                          (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfSetMinus" (formula "3") (term "1,1,0,0,0,0"))
                                          (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "3") (term "1,0,1,1,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,1,0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_heightVariant_2"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                          (rule "simplifySelectOfAnon" (formula "2"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "1"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0"))
                                          (rule "leq_literals" (formula "18"))
                                          (rule "closeFalse" (formula "18"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "eqSymm" (formula "13") (term "0,0"))
                                          (rule "replace_known_right" (formula "5") (term "0,1,1,0,1,1,0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "7") (term "0,1,1,1,1,0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "24") (term "0,1,1,0,1,1,0,1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "3") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "1") (term "0,1,1,1,1,0,1,0,1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "2") (term "0,1,1,0,1,1,0,1,0,1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                          (rule "replace_known_right" (formula "4") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                                          (rule "disjointDefinition" (formula "21") (term "1"))
                                          (rule "disjointDefinition" (formula "15") (term "1,0,1"))
                                          (rule "disjointDefinition" (formula "17"))
                                          (rule "disjointDefinition" (formula "24"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "14"))
                                          (rule "add_zero_right" (formula "14") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                          (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "24") (ifseqformula "17"))
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "Use Dependency Contract" (formula "16") (ifInst ""  (formula "13") (term "1,1,1,0,0,0")) (contract "Tree[java.lang.Object::<inv>()].JML accessible clause.0") (userinteraction))
                                       (rule "impLeft" (formula "14"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "14"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "14"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "14"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "14"))
                                                      (branch "Case 1"
                                                         (rule "notRight" (formula "14"))
                                                         (rule "close" (formula "16") (ifseqformula "1"))
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                         (rule "referencedObjectIsCreatedRight" (formula "14") (ifseqformula "16"))
                                                         (rule "close" (formula "14") (ifseqformula "8"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "14"))
                                                      (branch "Case 1"
                                                         (rule "close" (formula "14") (ifseqformula "8"))
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                         (rule "wellFormedAnon" (formula "14"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "andLeft" (formula "15"))
                                                         (rule "andLeft" (formula "13"))
                                                         (rule "eqSymm" (formula "13") (term "0,0"))
                                                         (rule "replace_known_right" (formula "7") (term "0,1,1,1,1,0,0") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")))
                                                         (rule "replace_known_right" (formula "25") (term "0,1,1,1,1,0") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
                                                         (rule "replace_known_right" (formula "5") (term "0,1,1,0,1,1,0,0") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "24")))
                                                         (rule "replace_known_right" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")))
                                                         (rule "replace_known_right" (formula "4") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")))
                                                         (rule "replace_known_right" (formula "3") (term "0,1,1,1,1,0,0,1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                         (rule "replace_known_right" (formula "2") (term "0,1,1,0,1,1,0,1,0,1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                         (rule "replace_known_right" (formula "1") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                         (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "8")))
                                                         (rule "closeTrue" (formula "22"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")))
                                                   (rule "closeFalse" (formula "13"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "cut_direct" (formula "13") (term "0,0,1") (userinteraction))
                                                (branch "CUT: self.left = null TRUE"
                                                    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "17")) (ifInst ""  (formula "13")) (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "replace_known_right" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")))
                                                   (rule "replace_known_left" (formula "6") (term "0,0,1,0,1,1,0,0") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")))
                                                   (rule "replace_known_left" (formula "20") (term "0,0,1,0,1,0") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")))
                                                   (rule "replace_known_left" (formula "5") (term "0,0,1,0,1,1,0,0") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")))
                                                   (rule "replace_known_left" (formula "23") (term "0,0,1,0,1,1,0") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")))
                                                   (rule "replace_known_right" (formula "2") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "22")))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,0,1") (ifseqformula "21"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                                                   (rule "replace_known_right" (formula "1") (term "0,1,1,0,1,1,0,1,0,1") (ifseqformula "21"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")))
                                                   (rule "replace_known_right" (formula "3") (term "0,1,1,1,1,0,0,1") (ifseqformula "21"))
                                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "disjointDefinition" (formula "14"))
                                                   (rule "disjointDefinition" (formula "18"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12"))
                                                   (rule "add_zero_right" (formula "12") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                   (rule "applyEq" (formula "5") (term "1") (ifseqformula "11"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                   (rule "mul_literals" (formula "13") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                   (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "21") (term "1,1,0"))
                                                   (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1,0"))
                                                   (rule "setMinusOfUnion" (formula "18") (term "1,0,0"))
                                                   (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_left_0"))
                                                   (rule "simplifySelectOfAnon" (formula "5"))
                                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "6"))
                                                   (rule "ifEqualsNull" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,1") (ifseqformula "12"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfUnion" (formula "5") (term "1"))
                                                   (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "1,1"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfUnion" (formula "5") (term "0,0,1"))
                                                   (rule "elementOfSingleton" (formula "5") (term "0,0,0,1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfSingleton" (formula "5") (term "0,0,1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Tree_right_0"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "simplifySelectOfAnon" (formula "4"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")) (ifInst ""  (formula "9")))
                                                   (rule "eqSymm" (formula "5"))
                                                   (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "elementOfSetMinus" (formula "4") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "elementOfUnion" (formula "4") (term "0"))
                                                   (rule "elementOfSetMinus" (formula "4") (term "1,0"))
                                                   (rule "elementOfSetMinus" (formula "4") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                                   (rule "simplifySelectOfAnon" (formula "3"))
                                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")) (ifInst ""  (formula "8")))
                                                   (rule "eqSymm" (formula "4"))
                                                   (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "elementOfUnion" (formula "3") (term "0"))
                                                   (rule "elementOfSetMinus" (formula "3") (term "1,0"))
                                                   (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                   (rule "elementOfSetMinus" (formula "1") (term "1,0,0,0,0"))
                                                   (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,1,1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,1,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "limit_java_lang_Object__inv_" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "limit_Tree_footprint" (formula "2") (term "1"))
                                                   (rule "applyEq" (formula "18") (term "0,1,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "21") (term "0,1,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "2,1,0,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "0,1,1,1,0,0") (ifseqformula "2"))
                                                   (rule "limit_java_lang_Object__inv_" (formula "21"))
                                                   (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "22"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "limit_Tree_footprint" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                   (rule "equalityToElementOfRight" (formula "20") (inst "ov=ov") (inst "fv=fv"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "allRight" (formula "20") (inst "sk=ov_0"))
                                                   (rule "allRight" (formula "20") (inst "sk=fv_0"))
                                                   (rule "notRight" (formula "20"))
                                                   (rule "elementOfIntersect" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "elementOfSetMinus" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "elementOfSetMinus" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "elementOfUnion" (formula "21"))
                                                   (rule "orRight" (formula "21"))
                                                   (rule "elementOfUnion" (formula "20"))
                                                   (rule "orRight" (formula "20"))
                                                   (rule "elementOfSetMinus" (formula "22"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "elementOfSetMinus" (formula "23"))
                                                   (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "notRight" (formula "23"))
                                                   (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "16"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "elementOfUnion" (formula "22"))
                                                   (rule "orRight" (formula "22"))
                                                   (rule "elementOfSingleton" (formula "22"))
                                                   (rule "elementOfUnion" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1"))
                                                   (rule "close" (formula "22") (ifseqformula "1"))
                                                )
                                                (branch "CUT: self.left = null FALSE"
                                                   (rule "Definition_axiom_for_footprint_in_Tree" (formula "13") (term "0,1,1") (ifseqformula "14") (userinteraction))
                                                    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")) (ifInst ""  (formula "17")) (ifInst ""  (formula "14")) (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "eqSymm" (formula "23"))
                                                   (rule "replace_known_right" (formula "7") (term "0,1,1,1,1,0,0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")))
                                                   (rule "replace_known_right" (formula "28") (term "0,1,1,0,1,1,0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                                   (rule "replace_known_right" (formula "5") (term "0,1,1,0,1,1,0,0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                                   (rule "replace_known_right" (formula "25") (term "0,1,0,1,1,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                                   (rule "replace_known_right" (formula "6") (term "0,1,1,0,1,1,0,0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                                   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                                   (rule "replace_known_right" (formula "1") (term "0,1,1,1,1,0,0,1") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                                   (rule "replace_known_right" (formula "4") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                                   (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "27"))
                                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                                   (rule "disjointDefinition" (formula "22"))
                                                   (rule "disjointDefinition" (formula "18"))
                                                   (rule "disjointDefinition" (formula "15"))
                                                   (rule "disjointDefinition" (formula "25"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13"))
                                                   (rule "add_zero_right" (formula "13") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                   (rule "mul_literals" (formula "14") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                   (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "28") (term "1,1,0"))
                                                   (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "2") (term "1,1,0,1,0"))
                                                   (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1,0"))
                                                   (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                                   (rule "distributeIntersection_2" (formula "22") (term "0"))
                                                   (rule "setMinusOfUnion" (formula "25") (term "1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "7") (term "1,1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "28") (term "1,1,1,0"))
                                                   (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "6") (term "1,1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,1,0"))
                                                   (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,1,0"))
                                                   (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                                                   (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                                                   (rule "distributeIntersection_2" (formula "22") (term "1,0"))
                                                   (rule "setMinusOfUnion" (formula "25") (term "1,1,0,0"))
                                                   (rule "unionEqualsEmpty" (formula "22"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "unionEqualsEmpty" (formula "23"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=Tree_left_0"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "7"))
                                                   (rule "simplifySelectOfAnon" (formula "7"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "29")) (ifInst ""  (formula "11")))
                                                   (rule "eqSymm" (formula "8"))
                                                   (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "elementOfUnion" (formula "7") (term "0"))
                                                   (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "elementOfUnion" (formula "7") (term "1,0"))
                                                   (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "7") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                                   (rule "simplifySelectOfAnon" (formula "5"))
                                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "28")) (ifInst ""  (formula "10")))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfUnion" (formula "5") (term "0"))
                                                   (rule "elementOfUnion" (formula "5") (term "1,0"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "0,1,0"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "1,1,0"))
                                                   (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_right_0"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                   (rule "simplifySelectOfAnon" (formula "5"))
                                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfUnion" (formula "5") (term "0"))
                                                   (rule "elementOfUnion" (formula "5") (term "1,0"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "1,1,0"))
                                                   (rule "elementOfSetMinus" (formula "5") (term "0,1,0"))
                                                   (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfUnion" (formula "5") (term "0,1,1,1,0"))
                                                   (rule "elementOfSingleton" (formula "5") (term "1,0,1,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                                   (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                                                   (rule "simplifySelectOfAnon" (formula "2"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                                   (rule "elementOfSetMinus" (formula "2") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfUnion" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,1,0,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0,0,0"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,1,0,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfSetMinus" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfSingleton" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfSingleton" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_2"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                   (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                                                   (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                   (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                   (rule "commuteIntersection" (formula "21") (term "0"))
                                                   (rule "commuteIntersection" (formula "20") (term "0"))
                                                   (rule "limit_java_lang_Object__inv_" (formula "16"))
                                                   (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "17"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "limit_java_lang_Object__inv_" (formula "13"))
                                                   (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "limit_Tree_footprint" (formula "4") (term "1"))
                                                   (rule "applyEq" (formula "30") (term "0,0,1,1,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0,0,1,1,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "3") (term "0,0,1,1,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "2,0,1,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "2,0,1,0,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "27") (term "0,0,1,1,0,0") (ifseqformula "4"))
                                                   (rule "limit_Tree_footprint" (formula "3") (term "1"))
                                                   (rule "applyEq" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "31") (term "0,1,1,1,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "1") (term "2,1,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "2") (term "2,1,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "disjointAllFields" (formula "2") (term "1,1,0,0,0,0") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEq" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                                   (rule "limit_Tree_footprint" (formula "6") (term "0"))
                                                   (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                                   (rule "limit_java_lang_Object__inv_" (formula "32"))
                                                   (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "limit_Tree_footprint" (formula "4") (term "0"))
                                                   (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                                   (rule "ifthenelse_split" (formula "31") (term "1,1,1,0"))
                                                   (branch "self.right.right = null TRUE"
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                                                      (rule "associativeLawUnion" (formula "35") (term "1,1,0"))
                                                      (rule "limit_java_lang_Object__inv_" (formula "35"))
                                                      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "equalityToElementOfRight" (formula "33") (inst "ov=ov") (inst "fv=fv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "allRight" (formula "33") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "33") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "33"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSetMinus" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "notLeft" (formula "3"))
                                                      (rule "elementOfSetMinus" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfUnion" (formula "31"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "elementOfSingleton" (formula "31"))
                                                      (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "29"))
                                                      (rule "elementOfUnion" (formula "31"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "28"))
                                                      (rule "elementOfSetMinus" (formula "34"))
                                                       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")))
                                                      (rule "false_right" (formula "34"))
                                                      (rule "elementOfUnion" (formula "34"))
                                                      (rule "orRight" (formula "34"))
                                                      (rule "elementOfSetMinus" (formula "35"))
                                                      (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "notRight" (formula "35"))
                                                      (rule "elementOfSetMinus" (formula "35"))
                                                      (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "35"))
                                                      (rule "false_right" (formula "35"))
                                                      (rule "elementOfUnion" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "1"))
                                                      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "32"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "close" (formula "34") (ifseqformula "1"))
                                                   )
                                                   (branch "self.right.right = null FALSE"
                                                      (rule "commuteUnion_2" (formula "32") (term "1,1,0"))
                                                      (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                                                      (rule "associativeLawUnion" (formula "35") (term "1,1,0"))
                                                      (rule "limit_java_lang_Object__inv_" (formula "35"))
                                                      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "equalityToElementOfRight" (formula "33") (inst "ov=ov") (inst "fv=fv"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "allRight" (formula "33") (inst "sk=ov_0"))
                                                      (rule "allRight" (formula "33") (inst "sk=fv_0"))
                                                      (rule "notRight" (formula "33"))
                                                      (rule "elementOfIntersect" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "elementOfSetMinus" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "elementOfSetMinus" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "elementOfUnion" (formula "30"))
                                                      (rule "orRight" (formula "30"))
                                                      (rule "elementOfUnion" (formula "29"))
                                                      (rule "orRight" (formula "29"))
                                                      (rule "elementOfSetMinus" (formula "31"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "27"))
                                                      (rule "elementOfUnion" (formula "33"))
                                                      (rule "orRight" (formula "33"))
                                                      (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "28"))
                                                      (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "false_right" (formula "34"))
                                                      (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "elementOfUnion" (formula "33"))
                                                      (rule "orRight" (formula "33"))
                                                      (rule "elementOfSingleton" (formula "33"))
                                                      (rule "elementOfSingleton" (formula "34"))
                                                      (rule "elementOfSetMinus" (formula "36"))
                                                      (rule "elementOfSetMinus" (formula "37"))
                                                      (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "notRight" (formula "37"))
                                                      (rule "replace_known_left" (formula "37") (term "0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "false_right" (formula "37"))
                                                      (rule "elementOfUnion" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "1"))
                                                      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "34"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "close" (formula "31") (ifseqformula "1"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "Class_invariant_axiom_for_Tree" (formula "13") (term "1,1,1,0,0,0") (inst "k=k") (inst "k_0=k_0") (ifseqformula "16") (userinteraction))
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "eqSymm" (formula "13") (term "0,0"))
                                             (rule "eqSymm" (formula "18") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "5") (term "0,1,1,1,1,0,0") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "30")))
                                             (rule "replace_known_right" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "30")))
                                             (rule "replace_known_right" (formula "6") (term "0,1,1,0,1,1,0,0") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "30")))
                                             (rule "replace_known_right" (formula "31") (term "0,1,1,0,1,1,0") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                                             (rule "replace_known_right" (formula "1") (term "0,1,1,1,1,0,0,1") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                             (rule "replace_known_right" (formula "4") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "30")))
                                             (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,0,1") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                             (rule "replace_known_right" (formula "3") (term "0,1,1,1,1,0,0,1") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                             (rule "disjointDefinition" (formula "27") (term "1"))
                                             (rule "disjointDefinition" (formula "15") (term "1,0,1"))
                                             (rule "disjointDefinition" (formula "24") (term "1"))
                                             (rule "disjointDefinition" (formula "17"))
                                             (rule "disjointDefinition" (formula "21") (term "1,0,1"))
                                             (rule "disjointDefinition" (formula "20") (term "1,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14"))
                                             (rule "add_zero_right" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                             (rule "measuredByCheck" (formula "28") (ifseqformula "12"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "19"))
                                             (rule "add_zero_right" (formula "19") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                             (rule "precOfInt" (formula "28"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                             (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_leqRight" (formula "28"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1"))
                                             (rule "mul_literals" (formula "17") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "14"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "eqSymm" (formula "13") (term "0,0"))
                                          (rule "replace_known_right" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")))
                                          (rule "replace_known_right" (formula "6") (term "0,1,1,0,1,1,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")))
                                          (rule "replace_known_right" (formula "5") (term "0,1,1,0,1,1,0,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "24")))
                                          (rule "replace_known_right" (formula "25") (term "0,1,1,1,1,0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
                                          (rule "replace_known_right" (formula "4") (term "0,1,1,1,1,0,0,1") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")))
                                          (rule "replace_known_right" (formula "2") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                          (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "15") (term "0,0") (ifseqformula "14") (userinteraction))
                                 (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "13") (term "0,1,0,1,0,0") (ifseqformula "14") (userinteraction))
                                 (rule "applyEq" (formula "15") (term "0,0,1,0,0,0") (ifseqformula "6") (userinteraction))
                                 (rule "applyEq" (formula "15") (term "1,1,0,1,1,0,0,0") (ifseqformula "6") (userinteraction))
                                  (builtin "Use Dependency Contract" (formula "15") (term "1,0,1,1,0,0,0") (ifInst ""  (formula "13") (term "1,0,1,1,0,0,1,0,1,0,0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0") (userinteraction))
                                 (rule "impLeft" (formula "14"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "14"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "14"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "14"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "14"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "notRight" (formula "14"))
                                                    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                   (rule "closeTrue" (formula "16"))
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "13"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "allRight" (formula "22") (inst "sk=k_0_0"))
                                                   (rule "impRight" (formula "22"))
                                                   (rule "orRight" (formula "23"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "23"))
                                                   (rule "close" (formula "21") (ifseqformula "9"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "close" (formula "14") (ifseqformula "8"))
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "13"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "wellFormedAnon" (formula "14"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "allRight" (formula "22") (inst "sk=k_0_0"))
                                                   (rule "impRight" (formula "22"))
                                                   (rule "orRight" (formula "23"))
                                                   (rule "notRight" (formula "24"))
                                                   (rule "eqSymm" (formula "15") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")))
                                                   (rule "replace_known_right" (formula "1") (term "0,1,1,0,1,1,0,1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                   (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                   (rule "replace_known_right" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "24")))
                                                   (rule "replace_known_right" (formula "9") (term "0,1,1,1,1,0,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "24")))
                                                   (rule "replace_known_right" (formula "19") (term "0,1,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "replace_known_right" (formula "3") (term "0,1,1,1,1,0,1,0,1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                   (rule "replace_known_right" (formula "6") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")))
                                                   (rule "replace_known_right" (formula "4") (term "0,1,1,1,1,0,0,1") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                                   (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "11")))
                                                   (rule "closeTrue" (formula "22"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "allRight" (formula "22") (inst "sk=k_0_0"))
                                             (rule "impRight" (formula "22"))
                                             (rule "orRight" (formula "23"))
                                             (rule "close" (formula "23") (ifseqformula "17"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "cut_direct" (formula "13") (term "0,0,1") (userinteraction))
                                          (branch "CUT: self.left = null TRUE"
                                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                                              (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "allRight" (formula "20") (inst "sk=k_0_0"))
                                             (rule "impRight" (formula "20"))
                                             (rule "orRight" (formula "21"))
                                             (rule "notRight" (formula "22"))
                                             (rule "replace_known_right" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "22")))
                                             (rule "replace_known_right" (formula "9") (term "0,1,1,0,1,1,0,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "22")))
                                             (rule "replace_known_left" (formula "20") (term "0,0,1,0,1,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "22")) (ifInst ""  (formula "15")) (ifInst ""  (formula "22")))
                                             (rule "replace_known_left" (formula "8") (term "0,0,1,0,1,1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "22")) (ifInst ""  (formula "15")) (ifInst ""  (formula "22")))
                                             (rule "replace_known_right" (formula "18") (term "0,1,0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,1,1,0,1") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,1,1,0,1") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "22")) (ifInst ""  (formula "15")) (ifInst ""  (formula "22")) (ifInst ""  (formula "15")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                                             (rule "true_left" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")))
                                             (rule "replace_known_right" (formula "5") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "21"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")))
                                             (rule "true_left" (formula "5"))
                                             (rule "replace_known_left" (formula "3") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
                                             (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "20"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "disjointDefinition" (formula "20"))
                                             (rule "inEqSimp_ltToLeq" (formula "14"))
                                             (rule "add_zero_right" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                             (rule "disjointDefinition" (formula "16"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                             (rule "applyEq" (formula "7") (term "1") (ifseqformula "13"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                             (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "20") (term "1,0,0"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                             (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                             (rule "simplifySelectOfAnon" (formula "5"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "11")))
                                             (rule "eqSymm" (formula "6"))
                                             (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "elementOfUnion" (formula "5") (term "0"))
                                             (rule "elementOfSetMinus" (formula "5") (term "1,0"))
                                             (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=Tree_left_0"))
                                             (rule "simplifySelectOfAnon" (formula "6"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "21")) (ifInst ""  (formula "10")))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                             (rule "ifEqualsNull" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,1") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSetMinus" (formula "6") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                                             (rule "elementOfUnion" (formula "6") (term "1"))
                                             (rule "elementOfSetMinus" (formula "6") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSetMinus" (formula "6") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfUnion" (formula "6") (term "0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfUnion" (formula "6") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSingleton" (formula "6") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_right_0"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                             (rule "simplifySelectOfAnon" (formula "5"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "21")) (ifInst ""  (formula "10")))
                                             (rule "eqSymm" (formula "6"))
                                             (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "elementOfUnion" (formula "5") (term "0"))
                                             (rule "elementOfSetMinus" (formula "5") (term "1,0"))
                                             (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_key_0"))
                                             (rule "simplifySelectOfAnon" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")) (ifInst ""  (formula "9")))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_negated" (formula "2") (term "0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSetMinus" (formula "2") (term "1,0,0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                                             (rule "simplifySelectOfAnon" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSetMinus" (formula "3") (term "1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "commuteUnion_2" (formula "18") (term "1,1,0"))
                                             (rule "commuteUnion" (formula "18") (term "0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "16") (term "0"))
                                             (rule "inEqSimp_notLeq" (formula "16") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                             (rule "limit_Tree_footprint" (formula "4") (term "1"))
                                             (rule "applyEq" (formula "3") (term "2,1,0,0,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "0,1,1,1,0,1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "19") (term "0,1,1,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "5") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                             (rule "limit_java_lang_Object__inv_" (formula "16"))
                                             (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "commute_or" (formula "18") (term "0"))
                                             (rule "limit_Tree_treeSet" (formula "1") (term "1"))
                                             (rule "limit_Tree_footprint" (formula "6") (term "0"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                             (rule "limit_Tree_treeSet" (formula "20") (term "1,0,0,0"))
                                             (rule "equalityToElementOfRight" (formula "23") (inst "ov=ov") (inst "fv=fv"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "allRight" (formula "23") (inst "sk=ov_0"))
                                             (rule "allRight" (formula "23") (inst "sk=fv_0"))
                                             (rule "notRight" (formula "23"))
                                             (rule "elementOfIntersect" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "elementOfSetMinus" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfSetMinus" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "elementOfUnion" (formula "25"))
                                             (rule "orRight" (formula "25"))
                                             (rule "elementOfUnion" (formula "24"))
                                             (rule "orRight" (formula "24"))
                                             (rule "elementOfSetMinus" (formula "26"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "elementOfSetMinus" (formula "27"))
                                             (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "notRight" (formula "27"))
                                             (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "false_right" (formula "27"))
                                             (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfUnion" (formula "26"))
                                             (rule "orRight" (formula "26"))
                                             (rule "elementOfSingleton" (formula "26"))
                                             (rule "elementOfUnion" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "false_right" (formula "27"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "27") (term "1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "elementOfUnion" (formula "27"))
                                             (rule "orRight" (formula "27"))
                                             (rule "elementOfSingleton" (formula "27"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "closeTrue" (formula "27"))
                                          )
                                          (branch "CUT: self.left = null FALSE"
                                             (rule "Definition_axiom_for_footprint_in_Tree" (formula "13") (term "0,1,1") (ifseqformula "14") (userinteraction))
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                                              (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "allRight" (formula "25") (inst "sk=k_0_0"))
                                             (rule "impRight" (formula "25"))
                                             (rule "orRight" (formula "26"))
                                             (rule "notRight" (formula "27"))
                                             (rule "eqSymm" (formula "15") (term "0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,1,0,1,1,0,1") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")))
                                             (rule "replace_known_right" (formula "1") (term "0,1,1,1,1,0,1") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                             (rule "replace_known_right" (formula "8") (term "0,0,1,0,1,1,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                             (rule "replace_known_right" (formula "7") (term "0,0,1,0,1,1,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                             (rule "replace_known_right" (formula "25") (term "0,1,1,1,0") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "9") (term "0,0,1,0,1,1,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                             (rule "replace_known_right" (formula "21") (term "0,1,0") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,1,0,1,0,1") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                             (rule "replace_known_right" (formula "6") (term "0,1,1,1,1,0,0,1") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")))
                                             (rule "replace_known_right" (formula "4") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                             (rule "replace_known_right" (formula "5") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "24")) (ifInst ""  (formula "27")))
                                             (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "27"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "notLeft" (formula "15"))
                                             (rule "disjointDefinition" (formula "17"))
                                             (rule "disjointDefinition" (formula "27"))
                                             (rule "inEqSimp_ltToLeq" (formula "15"))
                                             (rule "add_zero_right" (formula "15") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "disjointDefinition" (formula "20"))
                                             (rule "disjointDefinition" (formula "24"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                             (rule "mul_literals" (formula "16") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1"))
                                             (rule "mul_literals" (formula "19") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1"))
                                             (rule "setMinusOfUnion" (formula "8") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "9") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "27") (term "1,0,0"))
                                             (rule "distributeIntersection_2" (formula "24") (term "0"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,1"))
                                             (rule "setMinusOfUnion" (formula "8") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "7") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "9") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "6") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "27") (term "1,1,0,0"))
                                             (rule "unionEqualsEmpty" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                                             (rule "distributeIntersection_2" (formula "25") (term "0"))
                                             (rule "unionEqualsEmpty" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=Tree_right_0"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "8"))
                                             (rule "simplifySelectOfAnon" (formula "8"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "31")) (ifInst ""  (formula "13")))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "9"))
                                             (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "hideAuxiliaryEq" (formula "9"))
                                             (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfUnion" (formula "8") (term "0"))
                                             (rule "elementOfUnion" (formula "8") (term "1,0"))
                                             (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfSetMinus" (formula "8") (term "1,1,0"))
                                             (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "8") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfSetMinus" (formula "8") (term "0,1,0"))
                                             (rule "elementOfUnion" (formula "8") (term "0,1,1,1,0"))
                                             (rule "elementOfSingleton" (formula "8") (term "1,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "8") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                             (rule "simplifySelectOfAnon" (formula "7"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "30")) (ifInst ""  (formula "12")))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=Tree_left_0"))
                                             (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "7"))
                                             (rule "simplifySelectOfAnon" (formula "7"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "29")) (ifInst ""  (formula "11")))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "8"))
                                             (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0"))
                                             (rule "elementOfUnion" (formula "7") (term "1,0"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,1,0"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSetMinus" (formula "7") (term "1,1,0"))
                                             (rule "elementOfUnion" (formula "7") (term "0,1,0,1,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0,1,1,1,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "1,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0,1,1,1,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_key_0"))
                                             (rule "simplifySelectOfAnon" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")) (ifInst ""  (formula "10")))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_negated" (formula "2") (term "0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                                             (rule "simplifySelectOfAnon" (formula "4"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "30")))
                                             (rule "eqSymm" (formula "5"))
                                             (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "elementOfUnion" (formula "2") (term "1,0,0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSetMinus" (formula "3") (term "1,1,0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Tree_heightVariant_2"))
                                             (rule "simplifySelectOfAnon" (formula "4"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "26")))
                                             (rule "eqSymm" (formula "5"))
                                             (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                             (rule "elementOfSetMinus" (formula "4") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                                             (rule "elementOfUnion" (formula "4") (term "1,0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "4") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfSetMinus" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "4") (term "0,1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "1,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "1,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfSingleton" (formula "4") (term "0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfSingleton" (formula "4") (term "0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfSingleton" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "commuteUnion_2" (formula "26") (term "1,1,0"))
                                             (rule "commuteIntersection" (formula "23") (term "0"))
                                             (rule "commuteIntersection" (formula "22") (term "0"))
                                             (rule "commuteUnion_2" (formula "26") (term "0,1,1,0"))
                                             (rule "commuteUnion" (formula "26") (term "0,0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "19") (term "0"))
                                             (rule "inEqSimp_notLeq" (formula "19") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                                             (rule "limit_java_lang_Object__inv_" (formula "15"))
                                             (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "limit_Tree_footprint" (formula "6") (term "1"))
                                             (rule "applyEq" (formula "1") (term "0,0,1,1,1,0,1") (ifseqformula "6"))
                                             (rule "applyEq" (formula "7") (term "0,0,1,1,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "3") (term "2,0,1,0,0,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "4") (term "2,0,1,0,0,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "28") (term "0,0,1,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "5") (term "0,0,1,1,1,0,0") (ifseqformula "6"))
                                             (rule "limit_Tree_footprint" (formula "5") (term "1"))
                                             (rule "applyEq" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "0,1,1,1,1,0,1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "4") (term "2,1,1,0,0,0,0") (ifseqformula "5"))
                                             (rule "disjointAllFields" (formula "4") (term "1,1,0,0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "2,1,1,0,0,0,0") (ifseqformula "5"))
                                             (rule "limit_java_lang_Object__inv_" (formula "21"))
                                             (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "commute_or" (formula "23") (term "0"))
                                             (rule "limit_Tree_footprint" (formula "6") (term "0"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                             (rule "limit_Tree_treeSet" (formula "1") (term "1"))
                                             (rule "limit_Tree_footprint" (formula "10") (term "0"))
                                             (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                             (rule "limit_Tree_treeSet" (formula "26") (term "1,0,0,0"))
                                             (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                             (rule "equalityToElementOfRight" (formula "34") (inst "ov=ov") (inst "fv=fv"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "allRight" (formula "34") (inst "sk=ov_0"))
                                             (rule "allRight" (formula "34") (inst "sk=fv_0"))
                                             (rule "notRight" (formula "34"))
                                             (rule "elementOfIntersect" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "elementOfSetMinus" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfSetMinus" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "elementOfUnion" (formula "34"))
                                             (rule "orRight" (formula "34"))
                                             (rule "elementOfUnion" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "elementOfSetMinus" (formula "35"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "31"))
                                             (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "32"))
                                             (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "elementOfUnion" (formula "38"))
                                             (rule "orRight" (formula "38"))
                                             (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "elementOfUnion" (formula "37"))
                                             (rule "orRight" (formula "37"))
                                             (rule "elementOfSetMinus" (formula "41"))
                                             (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "elementOfSetMinus" (formula "41"))
                                             (rule "replace_known_left" (formula "41") (term "0,1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "elementOfUnion" (formula "38"))
                                             (rule "orRight" (formula "38"))
                                             (rule "elementOfSingleton" (formula "38"))
                                             (rule "elementOfSingleton" (formula "39"))
                                             (rule "elementOfUnion" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "1"))
                                             (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "39"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfUnion" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "close" (formula "35") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "cut_direct" (formula "13") (term "0,1,0,0,0") (userinteraction))
                                       (branch "CUT: self.right = null TRUE"
                                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                                          (rule "closeTrue" (formula "17"))
                                       )
                                       (branch "CUT: self.right = null FALSE"
                                          (rule "Class_invariant_axiom_for_Tree" (formula "13") (term "1,1,1,0,0,0") (inst "k=k") (inst "k_0=k_0") (ifseqformula "14") (userinteraction))
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "14"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "allRight" (formula "31") (inst "sk=k_0_0"))
                                          (rule "impRight" (formula "31"))
                                          (rule "notRight" (formula "32"))
                                          (rule "eqSymm" (formula "15") (term "0,0"))
                                          (rule "eqSymm" (formula "20") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "30")))
                                          (rule "replace_known_right" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "30")))
                                          (rule "replace_known_right" (formula "9") (term "0,1,1,1,1,0,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "30")))
                                          (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                          (rule "replace_known_right" (formula "3") (term "0,1,1,0,1,1,0,1,0,1") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                          (rule "replace_known_right" (formula "4") (term "0,1,1,1,1,0,1,0,1") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                          (rule "replace_known_right" (formula "6") (term "0,1,1,1,1,0,0,1") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "30")))
                                          (rule "disjointDefinition" (formula "29") (term "1"))
                                          (rule "disjointDefinition" (formula "17") (term "1,0,1"))
                                          (rule "disjointDefinition" (formula "19"))
                                          (rule "disjointDefinition" (formula "26") (term "1"))
                                          (rule "disjointDefinition" (formula "23") (term "1,0,1"))
                                          (rule "disjointDefinition" (formula "22") (term "1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16"))
                                          (rule "add_zero_right" (formula "16") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1"))
                                          (rule "measuredByCheck" (formula "31") (ifseqformula "14"))
                                          (rule "inEqSimp_ltToLeq" (formula "21"))
                                          (rule "add_zero_right" (formula "21") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "precOfInt" (formula "31"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                          (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_leqRight" (formula "31"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1"))
                                          (rule "mul_literals" (formula "19") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "13"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "allRight" (formula "22") (inst "sk=k_0_0"))
                                    (rule "impRight" (formula "22"))
                                    (rule "orRight" (formula "23"))
                                    (rule "notRight" (formula "24"))
                                    (rule "eqSymm" (formula "15") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "19") (term "0,1,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "replace_known_right" (formula "22") (term "0,1,1,0,1,1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "9") (term "0,1,1,0,1,1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "1") (term "0,1,1,0,1,1,0,1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "7") (term "0,1,1,1,1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "6") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "5") (term "0,1,1,1,1,0,0,1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "4") (term "0,1,1,1,1,0,0,1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                                    (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "26"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "26"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "disjointDefinition" (formula "17") (term "1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "16"))
                                    (rule "add_zero_right" (formula "16") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                    (rule "disjointDefinition" (formula "19"))
                                    (rule "disjointDefinition" (formula "23") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "24"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1"))
                                    (rule "mul_literals" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                    (rule "setMinusOfUnion" (formula "24") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "9") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "8") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0,1"))
                                    (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "3") (term "1,1,0,1,0"))
                                    (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0,1"))
                                    (rule "setMinusOfUnion" (formula "4") (term "1,1,0,1,0,1"))
                                    (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "9") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "7") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "8") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "6") (term "1,1,1,0,0,1"))
                                    (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,1,0"))
                                    (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0,1"))
                                    (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,1,0,1"))
                                    (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=Tree_left_0"))
                                    (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "9"))
                                    (rule "simplifySelectOfAnon" (formula "9"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "26")) (ifInst ""  (formula "13")))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0,1") (ifseqformula "10"))
                                    (rule "applyEqReverse" (formula "9") (term "1") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "elementOfSetMinus" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfUnion" (formula "9") (term "0"))
                                    (rule "elementOfUnion" (formula "9") (term "1,0"))
                                    (rule "elementOfSetMinus" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfSetMinus" (formula "9") (term "0,1,0"))
                                    (rule "elementOfUnion" (formula "9") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfSetMinus" (formula "9") (term "1,1,0"))
                                    (rule "elementOfUnion" (formula "9") (term "0,1,0,1,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "1,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfUnion" (formula "9") (term "0,1,0,1,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "0,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfUnion" (formula "9") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfUnion" (formula "9") (term "0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "1,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfUnion" (formula "9") (term "0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "0,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                    (rule "simplifySelectOfAnon" (formula "7"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "26")) (ifInst ""  (formula "13")))
                                    (rule "eqSymm" (formula "8"))
                                    (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfUnion" (formula "7") (term "0"))
                                    (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "7") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfUnion" (formula "7") (term "1,0"))
                                    (rule "elementOfSetMinus" (formula "7") (term "1,1,0"))
                                    (rule "elementOfSetMinus" (formula "7") (term "0,1,0"))
                                    (rule "elementOfUnion" (formula "7") (term "0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "7") (term "1,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfUnion" (formula "7") (term "0,1,0,1,0"))
                                    (rule "elementOfSingleton" (formula "7") (term "1,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfUnion" (formula "7") (term "0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "7") (term "0,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfUnion" (formula "7") (term "0,1,0,1,0"))
                                    (rule "elementOfSingleton" (formula "7") (term "0,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=Tree_right_0"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "8"))
                                    (rule "simplifySelectOfAnon" (formula "8"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "26")) (ifInst ""  (formula "13")))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "9"))
                                    (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfUnion" (formula "8") (term "0"))
                                    (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfUnion" (formula "8") (term "1,0"))
                                    (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "8") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfSetMinus" (formula "8") (term "0,1,0"))
                                    (rule "elementOfSetMinus" (formula "8") (term "1,1,0"))
                                    (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                    (rule "elementOfSingleton" (formula "8") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfUnion" (formula "8") (term "0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "8") (term "1,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfUnion" (formula "8") (term "0,1,0,1,0"))
                                    (rule "elementOfSingleton" (formula "8") (term "1,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfUnion" (formula "8") (term "0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "8") (term "0,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_key_0"))
                                    (rule "simplifySelectOfAnon" (formula "2"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")) (ifInst ""  (formula "13")))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "elementOfUnion" (formula "9") (term "0,1,0,1,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "0,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "ifthenelse_negated" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "5") (term "0,1") (inst "selectSK=Tree_heightVariant_1"))
                                    (rule "simplifySelectOfAnon" (formula "5"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "eqSymm" (formula "6") (term "1"))
                                    (rule "elementOfUnion" (formula "2") (term "0,0"))
                                    (rule "elementOfSetMinus" (formula "5") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "2") (term "1,0,0"))
                                    (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfUnion" (formula "5") (term "0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "2") (term "1,1,0,0"))
                                    (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfUnion" (formula "5") (term "1,0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "5") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfSetMinus" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "5") (term "0,1,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "5") (term "0,1,0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "5") (term "1,0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0"))
                                    (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0"))
                                    (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfUnion" (formula "5") (term "0,1,0,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "5") (term "1,0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0"))
                                    (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfUnion" (formula "5") (term "0,1,0,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0"))
                                    (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfUnion" (formula "5") (term "0,1,0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0"))
                                    (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfUnion" (formula "5") (term "0,1,1,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "5") (term "1,0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "5") (term "0,1,1,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Tree_heightVariant_2"))
                                    (rule "simplifySelectOfAnon" (formula "4"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "29")))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "elementOfSetMinus" (formula "4") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "4") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elementOfUnion" (formula "4") (term "0,1,0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elementOfUnion" (formula "4") (term "1,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "4") (term "0,1,0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "4") (term "0,0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elementOfSetMinus" (formula "4") (term "0,1,0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "4") (term "1,1,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "4") (term "0,0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elementOfUnion" (formula "4") (term "0,1,1,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "4") (term "1,0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elementOfUnion" (formula "4") (term "0,1,1,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "4") (term "0,0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "commuteUnion_2" (formula "26") (term "1,0,1,1,0,0"))
                                    (rule "commuteUnion_2" (formula "8") (term "1,0,1,1,0,0,1"))
                                    (rule "commuteUnion_2" (formula "7") (term "1,0,1,1,0,0"))
                                    (rule "commuteUnion_2" (formula "26") (term "1,1,1,1,1,0,0"))
                                    (rule "commuteUnion_2" (formula "26") (term "1,0,1,1,1,0,0"))
                                    (rule "commuteUnion_2" (formula "8") (term "1,0,1,1,1,0,0,1"))
                                    (rule "commuteUnion_2" (formula "8") (term "1,1,1,1,1,0,0,1"))
                                    (rule "commuteUnion_2" (formula "7") (term "1,1,1,1,1,0,0"))
                                    (rule "commuteUnion_2" (formula "7") (term "1,0,1,1,1,0,0"))
                                    (rule "commuteUnion" (formula "26") (term "1,1,1,0,0"))
                                    (rule "commuteUnion" (formula "8") (term "1,1,1,0,0,1"))
                                    (rule "commuteUnion" (formula "7") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "23") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0"))
                                    (rule "ifthenelse_split" (formula "11") (term "2,0,0,0"))
                                    (branch "self.left = null TRUE"
                                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                       (rule "true_left" (formula "12"))
                                       (rule "replace_known_left" (formula "5") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                       (rule "replace_known_left" (formula "2") (term "0,2,0,1,0,1,0,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                       (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,1,1,1,1,0,0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                       (rule "replace_known_left" (formula "25") (term "0,0,1,1,1,1,0,0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                       (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                                       (rule "true_left" (formula "7"))
                                       (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "replace_known_left" (formula "3") (term "0,2,0,1,0,1,0,0,0,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
                                       (rule "replace_known_left" (formula "7") (term "0,2,0,0,1,0") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
                                       (rule "true_left" (formula "7"))
                                       (rule "replace_known_left" (formula "6") (term "0,2,0,1,0,1,0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
                                       (rule "true_left" (formula "6"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "6"))
                                       (rule "eqSymm" (formula "4") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "6"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "limit_java_lang_Object__inv_" (formula "15"))
                                       (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "limit_Tree_footprint" (formula "14") (term "1,0"))
                                       (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "5") (term "0,1,1,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "4") (term "2,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "3") (term "2,1,0,0,0,0") (ifseqformula "14"))
                                       (rule "limit_Tree_treeSet" (formula "1") (term "1"))
                                       (rule "commute_or" (formula "19") (term "0"))
                                       (rule "limit_Tree_treeSet" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "21") (term "1") (ifseqformula "22"))
                                       (rule "limit_Tree_footprint" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                       (rule "allLeft" (formula "20") (inst "t=k_0_0"))
                                       (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_commuteGeq" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "3"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                    (branch "self.left = null FALSE"
                                       (rule "replace_known_right" (formula "2") (term "0,2,0,0,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                       (rule "replace_known_right" (formula "5") (term "0,2,0,0,1,0,0,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                       (rule "replace_known_right" (formula "7") (term "0,1,1,0,1,1,1,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                       (rule "replace_known_right" (formula "26") (term "0,0,1,1,1,1,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                       (rule "replace_known_right" (formula "8") (term "0,0,1,1,1,1,0,0,1") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "replace_known_right" (formula "9") (term "0,2,0,0,1,0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                       (rule "replace_known_right" (formula "4") (term "0,2,0,0,1,0,0,0,0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                       (rule "replace_known_right" (formula "10") (term "0,2,0,1,0,1,0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                       (rule "replace_known_right" (formula "8") (term "0,2,0,0,1,0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                       (rule "elementOfSingleton" (formula "2") (term "0,1,1,1,0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfSingleton" (formula "5") (term "0,1,1,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "elementOfSingleton" (formula "9") (term "0,1,1,1,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "elementOfSingleton" (formula "4") (term "0,1,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "27")))
                                       (rule "elementOfSingleton" (formula "10") (term "0,1,1,1,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "elementOfSingleton" (formula "8") (term "0,1,1,1,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "elementOfSingleton" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                       (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "elementOfSingleton" (formula "7") (term "0,1,0,1,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "elementOfSingleton" (formula "4") (term "0,1,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                       (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "commuteUnion" (formula "5") (term "1,1,1,0,0"))
                                       (rule "commuteUnion_2" (formula "5") (term "1,0,1,1,0,0"))
                                       (rule "commuteUnion_2" (formula "22") (term "1,1,1,1,1,0,0"))
                                       (rule "commuteUnion_2" (formula "22") (term "1,0,1,1,0,0"))
                                       (rule "commuteUnion_2" (formula "22") (term "1,0,1,1,1,0,0"))
                                       (rule "commuteUnion" (formula "6") (term "1,1,1,0,0"))
                                       (rule "commuteUnion_2" (formula "6") (term "1,0,1,1,0,0"))
                                       (rule "commuteUnion_2" (formula "5") (term "1,0,1,1,1,0,0"))
                                       (rule "commuteUnion_2" (formula "5") (term "1,1,1,1,1,0,0"))
                                       (rule "commuteUnion" (formula "22") (term "1,1,1,0,0"))
                                       (rule "commuteUnion_2" (formula "6") (term "1,1,1,1,1,0,0"))
                                       (rule "commuteUnion_2" (formula "6") (term "1,0,1,1,1,0,0"))
                                       (rule "limit_java_lang_Object__inv_" (formula "18"))
                                       (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "limit_Tree_footprint" (formula "17") (term "1,0"))
                                       (rule "applyEq" (formula "24") (term "0,1,1,1,1,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "5") (term "0,1,1,1,1,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "3") (term "2,1,1,0,0,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "4") (term "2,1,1,0,0,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "17"))
                                       (rule "commuteUnion" (formula "24") (term "1,1,1,0,0"))
                                       (rule "commuteUnion" (formula "5") (term "1,1,1,0,0"))
                                       (rule "commuteUnion" (formula "6") (term "1,1,1,0,0"))
                                       (rule "limit_Tree_treeSet" (formula "1") (term "1"))
                                       (rule "commute_or" (formula "22") (term "0"))
                                       (rule "limit_Tree_footprint" (formula "7") (term "1"))
                                       (rule "applyEq" (formula "4") (term "2,0,1,0,0,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "5") (term "2,0,1,0,0,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "26") (term "0,1,1,1,1,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "7"))
                                       (rule "commuteUnion" (formula "26") (term "1,1,1,0,0"))
                                       (rule "commuteUnion" (formula "6") (term "1,1,1,0,0"))
                                       (rule "commuteUnion" (formula "8") (term "1,1,1,0,0"))
                                       (rule "limit_java_lang_Object__inv_" (formula "17"))
                                       (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "limit_Tree_treeSet" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                       (rule "limit_Tree_footprint" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                       (rule "limit_Tree_footprint" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                       (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                       (rule "associativeLawUnion" (formula "30") (term "1,1,0,0"))
                                       (rule "limit_Tree_treeSet" (formula "30") (term "0"))
                                       (rule "applyEq" (formula "30") (term "1") (ifseqformula "31"))
                                       (rule "associativeLawUnion" (formula "7") (term "1,1,0,0"))
                                       (rule "limit_Tree_footprint" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                       (rule "associativeLawUnion" (formula "11") (term "1,1,0,0"))
                                       (rule "limit_Tree_footprint" (formula "11") (term "0"))
                                       (rule "applyEq" (formula "11") (term "1") (ifseqformula "12"))
                                       (rule "associativeLawUnion" (formula "31") (term "1,1,0,0"))
                                       (rule "associativeLawUnion" (formula "6") (term "1,1,0,0"))
                                       (rule "associativeLawUnion" (formula "9") (term "1,1,0,0"))
                                       (rule "allLeft" (formula "26") (inst "t=k_0_0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_commuteGeq" (formula "26"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "26"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "15") (term "0,0") (ifseqformula "14") (userinteraction))
                              (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "13") (term "0,1,0,1,0") (ifseqformula "14") (userinteraction))
                              (rule "cut_direct" (formula "13") (term "0,0,1") (userinteraction))
                              (branch "CUT: self.left = null TRUE"
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "allRight" (formula "18") (inst "sk=k_0"))
                                 (rule "impRight" (formula "18"))
                                 (rule "orRight" (formula "19"))
                                 (rule "notRight" (formula "20"))
                                 (rule "replace_known_left" (formula "8") (term "0,1,0,1,1,1,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "15")))
                                 (rule "replace_known_left" (formula "7") (term "0,0,1,0,1,1,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "15")))
                                 (rule "replace_known_left" (formula "9") (term "0,1,0,1,1,1,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "15")))
                                 (rule "replace_known_left" (formula "3") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                 (rule "replace_known_left" (formula "4") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                 (rule "true_left" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "14")))
                                 (rule "replace_known_left" (formula "5") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                                 (rule "true_left" (formula "5"))
                                 (rule "disjointDefinition" (formula "15") (term "1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                 (rule "add_zero_right" (formula "14") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                                 (rule "inEqSimp_gtToGeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "7") (term "1") (ifseqformula "13"))
                                 (rule "close" (formula "18") (ifseqformula "7"))
                              )
                              (branch "CUT: self.left = null FALSE"
                                 (rule "applyEq" (formula "16") (term "1,1,0,1,1,0,0,0") (ifseqformula "7") (userinteraction))
                                  (builtin "Use Dependency Contract" (formula "16") (term "1,0,1,1,0,0,0") (ifInst ""  (formula "13") (term "1,0,1,1,0,0,1,0,1,0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0") (userinteraction))
                                 (rule "impLeft" (formula "14"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "14"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "14"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "14"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "14"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "notRight" (formula "14"))
                                                   (rule "close" (formula "15") (ifseqformula "1"))
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                                   (rule "referencedObjectIsCreatedRight" (formula "14") (ifseqformula "15"))
                                                   (rule "close" (formula "14") (ifseqformula "8"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "close" (formula "14") (ifseqformula "8"))
                                                )
                                                (branch "Case 2"
                                                   (rule "wellFormedAnon" (formula "14"))
                                                    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "allRight" (formula "25") (inst "sk=k_0"))
                                                   (rule "impRight" (formula "25"))
                                                   (rule "orRight" (formula "26"))
                                                   (rule "notRight" (formula "27"))
                                                   (rule "eqSymm" (formula "15") (term "0,0"))
                                                   (rule "replace_known_right" (formula "8") (term "0,0,1,0,1,1,0,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "25")))
                                                   (rule "replace_known_right" (formula "9") (term "0,0,1,0,1,1,0,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "25")))
                                                   (rule "replace_known_right" (formula "7") (term "0,0,1,0,1,1,0,0") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "25")))
                                                   (rule "replace_known_right" (formula "3") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                                                   (rule "replace_known_right" (formula "6") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                                                   (rule "replace_known_right" (formula "5") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "25")))
                                                   (rule "replace_known_right" (formula "4") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "25"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                                                   (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "10")))
                                                   (rule "closeTrue" (formula "24"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
                                             (rule "closeFalse" (formula "13"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "cut_direct" (formula "13") (term "1,0,1") (userinteraction))
                                          (branch "CUT: self.right = null TRUE"
                                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")) (ifInst ""  (formula "13")))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "allRight" (formula "23") (inst "sk=k_0"))
                                             (rule "impRight" (formula "23"))
                                             (rule "orRight" (formula "24"))
                                             (rule "notRight" (formula "25"))
                                             (rule "replace_known_right" (formula "8") (term "0,1,0,1,1,1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "23")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                             (rule "replace_known_right" (formula "9") (term "0,0,1,0,1,1,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")))
                                             (rule "replace_known_left" (formula "22") (term "0,1,1,0,1,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")))
                                             (rule "replace_known_left" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")))
                                             (rule "replace_known_left" (formula "3") (term "0,1,1,0,1,1,0,1,0,1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")))
                                             (rule "true_left" (formula "3"))
                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")))
                                             (rule "replace_known_left" (formula "3") (term "0,1,1,1,1,0,1,0,1") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                                             (rule "true_left" (formula "4"))
                                             (rule "disjointDefinition" (formula "16"))
                                             (rule "disjointDefinition" (formula "20"))
                                             (rule "inEqSimp_gtToGeq" (formula "19") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14"))
                                             (rule "add_zero_right" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "13"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1"))
                                             (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "20") (term "1,0,0"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                             (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=Tree_left_0"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "11")))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "8"))
                                             (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "8"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0"))
                                             (rule "elementOfSetMinus" (formula "1") (term "1,0"))
                                             (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=Tree_right_0"))
                                             (rule "simplifySelectOfAnon" (formula "6"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "22")) (ifInst ""  (formula "10")))
                                             (rule "applyEq" (formula "6") (term "2,0") (ifseqformula "13"))
                                             (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfUnion" (formula "6") (term "0"))
                                             (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSetMinus" (formula "6") (term "1,0"))
                                             (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                             (rule "simplifySelectOfAnon" (formula "5"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "10")))
                                             (rule "eqSymm" (formula "6"))
                                             (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "elementOfUnion" (formula "5") (term "0"))
                                             (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_key_0"))
                                             (rule "simplifySelectOfAnon" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "9")))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_negated" (formula "2") (term "0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0"))
                                             (rule "elementOfSetMinus" (formula "2") (term "1,0,0"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfUnion" (formula "2") (term "0,1,1,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,1,1,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                                             (rule "simplifySelectOfAnon" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSetMinus" (formula "3") (term "1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "commuteUnion_2" (formula "18") (term "1,1,0"))
                                             (rule "commuteUnion" (formula "18") (term "0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "17") (term "0"))
                                             (rule "inEqSimp_notGeq" (formula "17") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                                             (rule "limit_java_lang_Object__inv_" (formula "15"))
                                             (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "limit_Tree_footprint" (formula "4") (term "1"))
                                             (rule "applyEq" (formula "5") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "0,1,1,1,0,1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "3") (term "2,1,0,0,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "20") (term "0,1,1,0,0") (ifseqformula "4"))
                                             (rule "commute_or" (formula "19") (term "0"))
                                             (rule "limit_Tree_footprint" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                                             (rule "limit_Tree_treeSet" (formula "1") (term "1"))
                                             (rule "limit_Tree_treeSet" (formula "21") (term "1,0,0,0"))
                                             (rule "equalityToElementOfRight" (formula "23") (inst "ov=ov") (inst "fv=fv"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "allRight" (formula "23") (inst "sk=ov_0"))
                                             (rule "allRight" (formula "23") (inst "sk=fv_0"))
                                             (rule "notRight" (formula "23"))
                                             (rule "elementOfIntersect" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "elementOfSetMinus" (formula "2"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "elementOfSetMinus" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "elementOfUnion" (formula "25"))
                                             (rule "orRight" (formula "25"))
                                             (rule "elementOfUnion" (formula "24"))
                                             (rule "orRight" (formula "24"))
                                             (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "elementOfUnion" (formula "27"))
                                             (rule "orRight" (formula "27"))
                                             (rule "elementOfSingleton" (formula "27"))
                                             (rule "elementOfSetMinus" (formula "25"))
                                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")))
                                             (rule "false_right" (formula "25"))
                                             (rule "elementOfSetMinus" (formula "25"))
                                             (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "notRight" (formula "25"))
                                             (rule "elementOfUnion" (formula "27"))
                                             (rule "orRight" (formula "27"))
                                             (rule "elementOfSingleton" (formula "27"))
                                             (rule "elementOfUnion" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1"))
                                             (rule "close" (formula "27") (ifseqformula "1"))
                                          )
                                          (branch "CUT: self.right = null FALSE"
                                             (rule "Definition_axiom_for_footprint_in_Tree" (formula "13") (term "1,1,1") (ifseqformula "14") (userinteraction))
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")))
                                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "allRight" (formula "28") (inst "sk=k_0"))
                                             (rule "impRight" (formula "28"))
                                             (rule "orRight" (formula "29"))
                                             (rule "notRight" (formula "30"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "replace_known_right" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "28")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")))
                                             (rule "replace_known_right" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")))
                                             (rule "replace_known_right" (formula "27") (term "0,0,1,0,1,0") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")))
                                             (rule "replace_known_right" (formula "9") (term "0,1,1,1,1,0,0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "28")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")))
                                             (rule "replace_known_right" (formula "6") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")))
                                             (rule "replace_known_right" (formula "5") (term "0,1,1,1,1,0,0,1") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")))
                                             (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "28"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "26")))
                                             (rule "disjointDefinition" (formula "24"))
                                             (rule "disjointDefinition" (formula "20"))
                                             (rule "disjointDefinition" (formula "17"))
                                             (rule "disjointDefinition" (formula "27"))
                                             (rule "inEqSimp_gtToGeq" (formula "23") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15"))
                                             (rule "add_zero_right" (formula "15") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                             (rule "mul_literals" (formula "16") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "setMinusOfUnion" (formula "30") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1"))
                                             (rule "setMinusOfUnion" (formula "8") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "9") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                             (rule "distributeIntersection" (formula "24") (term "0"))
                                             (rule "setMinusOfUnion" (formula "27") (term "1,0,0"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "30") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,1"))
                                             (rule "setMinusOfUnion" (formula "8") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "7") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "9") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "6") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,1,0"))
                                             (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                                             (rule "distributeIntersection" (formula "24") (term "1,0"))
                                             (rule "setMinusOfUnion" (formula "27") (term "1,1,0,0"))
                                             (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                                             (rule "unionEqualsEmpty" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "unionEqualsEmpty" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=Tree_left_0"))
                                             (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "13")))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "10"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "10"))
                                             (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0"))
                                             (rule "elementOfUnion" (formula "1") (term "1,0"))
                                             (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSetMinus" (formula "1") (term "1,1,0"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSetMinus" (formula "1") (term "0,1,0"))
                                             (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=Tree_right_0"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "8"))
                                             (rule "simplifySelectOfAnon" (formula "8"))
                                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "31")) (ifInst ""  (formula "12")))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "9"))
                                             (rule "hideAuxiliaryEq" (formula "9"))
                                             (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfUnion" (formula "8") (term "0"))
                                             (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfUnion" (formula "8") (term "1,0"))
                                             (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "8") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfSetMinus" (formula "8") (term "0,1,0"))
                                             (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "8") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                             (rule "simplifySelectOfAnon" (formula "7"))
                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "30")) (ifInst ""  (formula "11")))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "hideAuxiliaryEq" (formula "8"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0"))
                                             (rule "elementOfUnion" (formula "7") (term "1,0"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSetMinus" (formula "7") (term "1,1,0"))
                                             (rule "elementOfSetMinus" (formula "7") (term "0,1,0"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfUnion" (formula "7") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_key_0"))
                                             (rule "simplifySelectOfAnon" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")) (ifInst ""  (formula "10")))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_negated" (formula "2") (term "0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0"))
                                             (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfUnion" (formula "2") (term "1,0,0"))
                                             (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                                             (rule "simplifySelectOfAnon" (formula "4"))
                                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "28")))
                                             (rule "eqSymm" (formula "5"))
                                             (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "elementOfSetMinus" (formula "4") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "4") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "0,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfSingleton" (formula "4") (term "0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "1,0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "4") (term "0,1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "1,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_heightVariant_2"))
                                             (rule "simplifySelectOfAnon" (formula "3"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "0,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfSingleton" (formula "4") (term "0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                             (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "4") (term "0,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfSingleton" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                             (rule "elementOfSetMinus" (formula "3") (term "1,1,0,0,0,0"))
                                             (rule "elementOfSetMinus" (formula "3") (term "0,1,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "3") (term "1,0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                             (rule "elementOfSingleton" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "commuteUnion" (formula "26") (term "1,1,0"))
                                             (rule "commuteIntersection" (formula "21") (term "0"))
                                             (rule "nnf_imp2or" (formula "20") (term "0"))
                                             (rule "inEqSimp_notGeq" (formula "20") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "20") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                             (rule "limit_java_lang_Object__inv_" (formula "18"))
                                             (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "limit_java_lang_Object__inv_" (formula "15"))
                                             (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "limit_Tree_footprint" (formula "6") (term "1"))
                                             (rule "applyEq" (formula "4") (term "2,0,1,0,0,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "5") (term "0,0,1,1,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "3") (term "2,0,1,0,0,0,0") (ifseqformula "6"))
                                             (rule "disjointAllFields" (formula "3") (term "0,1,0,0,0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEq" (formula "29") (term "0,0,1,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "7") (term "0,0,1,1,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "1") (term "0,0,1,1,1,0,1") (ifseqformula "6"))
                                             (rule "limit_Tree_footprint" (formula "5") (term "1"))
                                             (rule "applyEq" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "0,1,1,1,1,0,1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "4") (term "2,1,1,0,0,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "3") (term "2,1,0,0,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "5"))
                                             (rule "commute_or" (formula "24") (term "0"))
                                             (rule "limit_Tree_footprint" (formula "8") (term "0"))
                                             (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                                             (rule "limit_Tree_treeSet" (formula "1") (term "1"))
                                             (rule "ifthenelse_split" (formula "29") (term "1,0"))
                                             (branch "self.right.right = null TRUE"
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "ifthenelse_split" (formula "28") (term "1,0"))
                                                (branch "self.right.left = null TRUE"
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "limit_Tree_footprint" (formula "7") (term "0"))
                                                   (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                                   (rule "limit_Tree_treeSet" (formula "27") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "34") (term "1,1,0"))
                                                   (rule "associativeLawUnion" (formula "34") (term "1,0,0"))
                                                   (rule "equalityToElementOfRight" (formula "34") (inst "ov=ov") (inst "fv=fv"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "allRight" (formula "34") (inst "sk=ov_0"))
                                                   (rule "allRight" (formula "34") (inst "sk=fv_0"))
                                                   (rule "notRight" (formula "34"))
                                                   (rule "elementOfIntersect" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "elementOfSetMinus" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "elementOfSetMinus" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "elementOfUnion" (formula "34"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "elementOfUnion" (formula "33"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "elementOfUnion" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "elementOfSingleton" (formula "37"))
                                                   (rule "elementOfSetMinus" (formula "36"))
                                                   (rule "elementOfUnion" (formula "35"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "elementOfUnion" (formula "39"))
                                                   (rule "orRight" (formula "39"))
                                                   (rule "elementOfSingleton" (formula "39"))
                                                   (rule "elementOfUnion" (formula "37") (term "0,1"))
                                                   (rule "elementOfSingleton" (formula "37") (term "1,0,1"))
                                                   (rule "replace_known_right" (formula "37") (term "0,1,0,1") (ifseqformula "33"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "elementOfSetMinus" (formula "36"))
                                                   (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "notRight" (formula "36"))
                                                   (rule "elementOfSetMinus" (formula "36"))
                                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")) (ifInst ""  (formula "35")))
                                                   (rule "false_right" (formula "36"))
                                                   (rule "elementOfUnion" (formula "36") (term "0,1"))
                                                   (rule "elementOfSingleton" (formula "36") (term "1,0,1"))
                                                   (rule "replace_known_right" (formula "36") (term "1,0,1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "elementOfSingleton" (formula "36") (term "0,1"))
                                                   (rule "replace_known_right" (formula "36") (term "0,0,1") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "elementOfUnion" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1"))
                                                   (rule "close" (formula "38") (ifseqformula "1"))
                                                )
                                                (branch "self.right.left = null FALSE"
                                                   (rule "limit_Tree_footprint" (formula "7") (term "0"))
                                                   (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                                   (rule "limit_Tree_treeSet" (formula "27") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "35") (term "1,1,0"))
                                                   (rule "associativeLawUnion" (formula "35") (term "1,0,0"))
                                                   (rule "equalityToElementOfRight" (formula "35") (inst "ov=ov") (inst "fv=fv"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "allRight" (formula "35") (inst "sk=ov_0"))
                                                   (rule "allRight" (formula "35") (inst "sk=fv_0"))
                                                   (rule "notRight" (formula "35"))
                                                   (rule "elementOfIntersect" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "elementOfSetMinus" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "elementOfSetMinus" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "elementOfUnion" (formula "34"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "elementOfUnion" (formula "33"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "elementOfUnion" (formula "35"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "elementOfSetMinus" (formula "37"))
                                                   (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "31"))
                                                   (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "elementOfUnion" (formula "36"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "elementOfSingleton" (formula "36"))
                                                   (rule "elementOfSetMinus" (formula "39"))
                                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "34")))
                                                   (rule "false_right" (formula "39"))
                                                   (rule "elementOfSetMinus" (formula "39"))
                                                   (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "notRight" (formula "39"))
                                                   (rule "replace_known_left" (formula "40") (term "0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "false_right" (formula "40"))
                                                   (rule "elementOfUnion" (formula "38"))
                                                   (rule "orRight" (formula "38"))
                                                   (rule "elementOfSingleton" (formula "38"))
                                                   (rule "elementOfUnion" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1"))
                                                   (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "close" (formula "36") (ifseqformula "1"))
                                                )
                                             )
                                             (branch "self.right.right = null FALSE"
                                                (rule "ifthenelse_split" (formula "28") (term "1,0"))
                                                (branch "self.right.left = null TRUE"
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "limit_Tree_footprint" (formula "7") (term "0"))
                                                   (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                                   (rule "limit_Tree_treeSet" (formula "27") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "35") (term "1,1,0"))
                                                   (rule "associativeLawUnion" (formula "35") (term "1,0,0"))
                                                   (rule "equalityToElementOfRight" (formula "35") (inst "ov=ov") (inst "fv=fv"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "allRight" (formula "35") (inst "sk=ov_0"))
                                                   (rule "allRight" (formula "35") (inst "sk=fv_0"))
                                                   (rule "notRight" (formula "35"))
                                                   (rule "elementOfIntersect" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "elementOfSetMinus" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "elementOfSetMinus" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "elementOfUnion" (formula "34"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "elementOfUnion" (formula "33"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "elementOfUnion" (formula "35"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "elementOfSetMinus" (formula "37"))
                                                   (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "32"))
                                                   (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "elementOfUnion" (formula "36"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "elementOfSingleton" (formula "36"))
                                                   (rule "elementOfSetMinus" (formula "39"))
                                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "34")))
                                                   (rule "false_right" (formula "39"))
                                                   (rule "elementOfSetMinus" (formula "39"))
                                                   (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "notRight" (formula "39"))
                                                   (rule "replace_known_left" (formula "40") (term "0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "false_right" (formula "40"))
                                                   (rule "elementOfUnion" (formula "38"))
                                                   (rule "orRight" (formula "38"))
                                                   (rule "elementOfSingleton" (formula "38"))
                                                   (rule "elementOfUnion" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1"))
                                                   (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "close" (formula "36") (ifseqformula "1"))
                                                )
                                                (branch "self.right.left = null FALSE"
                                                   (rule "limit_Tree_footprint" (formula "7") (term "0"))
                                                   (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                                   (rule "limit_Tree_treeSet" (formula "27") (term "1,0,0,0"))
                                                   (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                                   (rule "associativeLawUnion" (formula "36") (term "1,1,0"))
                                                   (rule "associativeLawUnion" (formula "36") (term "1,0,0"))
                                                   (rule "equalityToElementOfRight" (formula "36") (inst "ov=ov") (inst "fv=fv"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "allRight" (formula "36") (inst "sk=ov_0"))
                                                   (rule "allRight" (formula "36") (inst "sk=fv_0"))
                                                   (rule "notRight" (formula "36"))
                                                   (rule "elementOfIntersect" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "elementOfSetMinus" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "elementOfSetMinus" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "elementOfUnion" (formula "34"))
                                                   (rule "orRight" (formula "34"))
                                                   (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "31"))
                                                   (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "32"))
                                                   (rule "elementOfUnion" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "elementOfUnion" (formula "39"))
                                                   (rule "orRight" (formula "39"))
                                                   (rule "elementOfSingleton" (formula "39"))
                                                   (rule "elementOfUnion" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "elementOfSetMinus" (formula "39"))
                                                   (rule "elementOfUnion" (formula "41"))
                                                   (rule "orRight" (formula "41"))
                                                   (rule "elementOfSingleton" (formula "41"))
                                                   (rule "elementOfSetMinus" (formula "38"))
                                                   (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "notRight" (formula "38"))
                                                   (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "false_right" (formula "39"))
                                                   (rule "elementOfSetMinus" (formula "38"))
                                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "1")) (ifInst ""  (formula "36")))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "elementOfUnion" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1"))
                                                   (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "39"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "close" (formula "37") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "Class_invariant_axiom_for_Tree" (formula "13") (term "1,1,1,0,0,0,0") (inst "k=k") (inst "k_0=k_0") (ifseqformula "15") (userinteraction))
                                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "allRight" (formula "31") (inst "sk=k_0"))
                                       (rule "impRight" (formula "31"))
                                       (rule "orRight" (formula "32"))
                                       (rule "notRight" (formula "33"))
                                       (rule "eqSymm" (formula "15") (term "0,0"))
                                       (rule "eqSymm" (formula "19") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "9") (term "0,0,1,0,1,1,0,0") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "31")))
                                       (rule "replace_known_right" (formula "7") (term "0,0,1,0,1,1,0,0") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "31")))
                                       (rule "replace_known_right" (formula "8") (term "0,1,0,1,1,1,0,0") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "31")))
                                       (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "31")))
                                       (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,1,0,1,0,1") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "31")))
                                       (rule "replace_known_right" (formula "5") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "31")))
                                       (rule "replace_known_right" (formula "6") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")))
                                       (rule "disjointDefinition" (formula "29") (term "1"))
                                       (rule "disjointDefinition" (formula "26") (term "1,0,1"))
                                       (rule "disjointDefinition" (formula "18"))
                                       (rule "disjointDefinition" (formula "25") (term "1"))
                                       (rule "disjointDefinition" (formula "22") (term "1,0,1"))
                                       (rule "disjointDefinition" (formula "21") (term "1,0,1"))
                                       (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "16"))
                                       (rule "add_zero_right" (formula "16") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "20"))
                                       (rule "add_zero_right" (formula "20") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "measuredByCheck" (formula "30") (ifseqformula "14"))
                                       (rule "inEqSimp_gtToGeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "precOfInt" (formula "30"))
                                       (rule "inEqSimp_ltToLeq" (formula "30") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                       (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_leqRight" (formula "30"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1"))
                                       (rule "mul_literals" (formula "18") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "closeFalse" (formula "21"))
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "allRight" (formula "25") (inst "sk=k_0"))
                                    (rule "impRight" (formula "25"))
                                    (rule "orRight" (formula "26"))
                                    (rule "notRight" (formula "27"))
                                    (rule "eqSymm" (formula "15") (term "0,0"))
                                    (rule "replace_known_right" (formula "8") (term "0,1,0,1,1,1,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "7") (term "0,1,0,1,1,1,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "24") (term "0,0,1,0,1,1,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "9") (term "0,0,1,0,1,1,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "5") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                                    (rule "disjointDefinition" (formula "23") (term "1"))
                                    (rule "disjointDefinition" (formula "20") (term "1,0,1"))
                                    (rule "disjointDefinition" (formula "18"))
                                    (rule "inEqSimp_gtToGeq" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "16"))
                                    (rule "add_zero_right" (formula "16") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "24"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1"))
                                    (rule "mul_literals" (formula "17") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "setMinusOfUnion" (formula "27") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "8") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "7") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "24") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "9") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "4") (term "1,1,0,1,0"))
                                    (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0,1"))
                                    (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "3") (term "1,1,0,1,0,1"))
                                    (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0,1"))
                                    (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "27") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "8") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "7") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "9") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,1,0"))
                                    (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0,1"))
                                    (rule "setMinusOfUnion" (formula "6") (term "1,1,1,0,0"))
                                    (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,1,0,1"))
                                    (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0,1"))
                                    (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=Tree_left_0"))
                                    (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "13")))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "10"))
                                    (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "10"))
                                    (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfUnion" (formula "1") (term "0"))
                                    (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                    (rule "elementOfUnion" (formula "1") (term "1,0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSetMinus" (formula "1") (term "0,1,0"))
                                    (rule "elementOfSetMinus" (formula "1") (term "1,1,0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=Tree_right_0"))
                                    (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "9"))
                                    (rule "simplifySelectOfAnon" (formula "9"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")) (ifInst ""  (formula "13")))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "applyEqReverse" (formula "4") (term "1,0,1") (ifseqformula "10"))
                                    (rule "applyEqReverse" (formula "9") (term "1") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "elementOfSetMinus" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfUnion" (formula "9") (term "0"))
                                    (rule "elementOfSetMinus" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfUnion" (formula "9") (term "0,0,0"))
                                    (rule "elementOfUnion" (formula "9") (term "1,0"))
                                    (rule "elementOfUnion" (formula "9") (term "0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfSingleton" (formula "9") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfSetMinus" (formula "9") (term "1,1,0"))
                                    (rule "elementOfSetMinus" (formula "9") (term "0,1,0"))
                                    (rule "elementOfUnion" (formula "9") (term "0,1,1,1,0"))
                                    (rule "elementOfUnion" (formula "9") (term "0,1,0,1,0"))
                                    (rule "elementOfUnion" (formula "9") (term "0,0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "0,0,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfSingleton" (formula "9") (term "0,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfUnion" (formula "9") (term "0,0,1,0,1,0"))
                                    (rule "elementOfSingleton" (formula "9") (term "1,0,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elementOfSingleton" (formula "9") (term "0,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                    (rule "simplifySelectOfAnon" (formula "8"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "27")) (ifInst ""  (formula "13")))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "applyEqReverse" (formula "8") (term "1") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfUnion" (formula "8") (term "0"))
                                    (rule "elementOfUnion" (formula "8") (term "1,0"))
                                    (rule "elementOfSetMinus" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfSetMinus" (formula "8") (term "0,1,0"))
                                    (rule "elementOfSetMinus" (formula "8") (term "1,1,0"))
                                    (rule "elementOfUnion" (formula "8") (term "0,0,0"))
                                    (rule "elementOfUnion" (formula "8") (term "0,1,0,1,0"))
                                    (rule "elementOfUnion" (formula "8") (term "0,1,1,1,0"))
                                    (rule "elementOfUnion" (formula "8") (term "0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "8") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfSingleton" (formula "8") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfUnion" (formula "8") (term "0,0,1,1,1,0"))
                                    (rule "elementOfSingleton" (formula "8") (term "1,0,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfSingleton" (formula "8") (term "0,0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfUnion" (formula "8") (term "0,0,1,0,1,0"))
                                    (rule "elementOfSingleton" (formula "8") (term "0,0,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elementOfSingleton" (formula "8") (term "0,0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_key_0"))
                                    (rule "simplifySelectOfAnon" (formula "3"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")) (ifInst ""  (formula "13")))
                                    (rule "inEqSimp_homoInEq0" (formula "4"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                                    (rule "simplifySelectOfAnon" (formula "6"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "27")))
                                    (rule "eqSymm" (formula "7"))
                                    (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "elementOfSetMinus" (formula "6") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0"))
                                    (rule "elementOfUnion" (formula "6") (term "0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "3") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfUnion" (formula "6") (term "1,0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "6") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "elementOfUnion" (formula "3") (term "1,0,0"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "6") (term "0,1,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "6") (term "0,1,0,0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "6") (term "1,1,0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "3") (term "1,1,0,0"))
                                    (rule "elementOfSetMinus" (formula "3") (term "0,1,0,0"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfUnion" (formula "6") (term "0,1,0,1,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "6") (term "1,0,0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "elementOfSingleton" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "pullOutSelect" (formula "5") (term "0,1") (inst "selectSK=Tree_heightVariant_2"))
                                    (rule "simplifySelectOfAnon" (formula "5"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "eqSymm" (formula "6") (term "1"))
                                    (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0"))
                                    (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0"))
                                    (rule "elementOfUnion" (formula "7") (term "0,1,1,1,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "7") (term "0,0,1,0,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "7") (term "0,0,0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfSingleton" (formula "7") (term "0,0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfSetMinus" (formula "5") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,1,0,1,0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "1,0,0,1,0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,1,0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfUnion" (formula "7") (term "0,0,1,1,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "7") (term "1,0,0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfSingleton" (formula "7") (term "0,0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elementOfUnion" (formula "5") (term "0,0,0,0"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,1,1,1,0,0"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,1,0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfUnion" (formula "5") (term "1,0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "5") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "5") (term "0,1,0,0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "elementOfSetMinus" (formula "5") (term "0,1,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "5") (term "0,0,1,0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "5") (term "1,0,0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "5") (term "0,1,1,1,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "5") (term "0,1,0,1,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "5") (term "0,0,1,1,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfUnion" (formula "5") (term "0,0,1,0,1,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "nnf_imp2or" (formula "24") (term "0"))
                                    (rule "inEqSimp_notGeq" (formula "24") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,0,0"))
                                    (rule "ifthenelse_split" (formula "9") (term "0,1,1,1,1,0,0"))
                                    (branch "self.right = null TRUE"
                                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                       (rule "replace_known_left" (formula "27") (term "0,1,1,0,1,1,1,0,0") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                       (rule "replace_known_left" (formula "5") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                       (rule "replace_known_left" (formula "3") (term "0,2,0,1,1,1,0,0") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                       (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "7") (term "0,1,1,1,1,1,1,0,0,1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
                                       (rule "true_left" (formula "7"))
                                       (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "replace_known_left" (formula "9") (term "0,2,0,0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                                       (rule "true_left" (formula "9"))
                                       (rule "replace_known_left" (formula "5") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                                       (rule "replace_known_left" (formula "1") (term "0,2,0,1,0,1,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                                       (rule "true_left" (formula "1"))
                                       (rule "replace_known_left" (formula "7") (term "0,2,0,1,1,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
                                       (rule "true_left" (formula "7"))
                                       (rule "ifthenelse_negated" (formula "3") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                       (rule "eqSymm" (formula "3") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "limit_java_lang_Object__inv_" (formula "15"))
                                       (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "limit_Tree_footprint" (formula "14") (term "1,0"))
                                       (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "6") (term "0,1,1,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "3") (term "2,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "4") (term "2,1,0,0,0,0") (ifseqformula "14"))
                                       (rule "limit_Tree_treeSet" (formula "1") (term "1"))
                                       (rule "commute_or" (formula "20") (term "0"))
                                       (rule "limit_Tree_treeSet" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "21") (term "1") (ifseqformula "22"))
                                       (rule "limit_Tree_footprint" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                       (rule "allLeft" (formula "21") (inst "t=k_0"))
                                       (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_commuteLeq" (formula "21"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "21"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "self.right = null FALSE"
                                       (rule "replace_known_right" (formula "3") (term "0,2,0,0,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                       (rule "replace_known_right" (formula "26") (term "0,0,1,1,1,1,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                       (rule "replace_known_right" (formula "5") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                       (rule "replace_known_right" (formula "9") (term "0,1,1,0,1,1,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                       (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_right" (formula "7") (term "0,0,1,1,1,1,0,0,1") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "replace_known_right" (formula "1") (term "0,2,0,1,1,0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                       (rule "replace_known_right" (formula "9") (term "0,2,0,1,1,1,0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                       (rule "replace_known_right" (formula "6") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                       (rule "replace_known_right" (formula "10") (term "0,2,0,1,1,0") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                       (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "5") (term "0,1,0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "elementOfSingleton" (formula "8") (term "0,1,0,1,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "elementOfSingleton" (formula "5") (term "0,1,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "elementOfSingleton" (formula "9") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "elementOfSingleton" (formula "4") (term "0,1,1,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "elementOfSingleton" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfSingleton" (formula "4") (term "0,1,0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "limit_java_lang_Object__inv_" (formula "15"))
                                       (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "limit_Tree_footprint" (formula "14") (term "1,0"))
                                       (rule "applyEq" (formula "6") (term "0,0,1,1,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "3") (term "2,0,1,0,0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "24") (term "0,0,1,1,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "5") (term "0,0,1,1,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "4") (term "2,0,1,0,0,0,0") (ifseqformula "14"))
                                       (rule "limit_Tree_treeSet" (formula "1") (term "1"))
                                       (rule "commute_or" (formula "23") (term "0"))
                                       (rule "limit_Tree_footprint" (formula "6") (term "1"))
                                       (rule "applyEq" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "26") (term "0,1,1,1,1,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "4") (term "2,1,1,0,0,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "5") (term "2,1,1,0,0,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "7") (term "0,1,1,1,1,0,0") (ifseqformula "6"))
                                       (rule "limit_java_lang_Object__inv_" (formula "22"))
                                       (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "limit_Tree_footprint" (formula "8") (term "0"))
                                       (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                                       (rule "limit_Tree_treeSet" (formula "28") (term "0"))
                                       (rule "applyEq" (formula "28") (term "1") (ifseqformula "29"))
                                       (rule "limit_Tree_footprint" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                       (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "5") (term "0,0,0,0"))
                                       (rule "associativeLawUnion" (formula "10") (term "1,1,0,0"))
                                       (rule "limit_Tree_footprint" (formula "10") (term "0"))
                                       (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                       (rule "associativeLawUnion" (formula "31") (term "1,1,0,0"))
                                       (rule "limit_Tree_treeSet" (formula "31") (term "0"))
                                       (rule "applyEq" (formula "31") (term "1") (ifseqformula "32"))
                                       (rule "associativeLawUnion" (formula "8") (term "1,1,0,0"))
                                       (rule "limit_Tree_footprint" (formula "8") (term "0"))
                                       (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                                       (rule "associativeLawUnion" (formula "10") (term "1,1,0,0"))
                                       (rule "associativeLawUnion" (formula "30") (term "1,1,0,0"))
                                       (rule "associativeLawUnion" (formula "7") (term "1,1,0,0"))
                                       (rule "allLeft" (formula "27") (inst "t=k_0"))
                                       (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "inEqSimp_commuteLeq" (formula "27"))
                                       (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "3"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                       (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0"))
                                       (rule "add_literals" (formula "27") (term "0"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "15"))
                           (rule "orRight" (formula "15"))
                            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "14"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "15"))
                           (rule "andLeft" (formula "14"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "15"))
                           (rule "notLeft" (formula "13"))
                           (rule "eqSymm" (formula "23"))
                           (rule "replace_known_right" (formula "5") (term "0,1,1,1,1,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")))
                           (rule "replace_known_right" (formula "6") (term "0,1,0,1,1,1,0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "27") (term "0,1,1,0,1,1,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "7") (term "0,1,1,0,1,1,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "2") (term "0,1,0,1,1,1,0,1,0,1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "4") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "1") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,1,0,0,1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
                           (rule "disjointDefinition" (formula "22"))
                           (rule "disjointDefinition" (formula "18"))
                           (rule "disjointDefinition" (formula "15"))
                           (rule "disjointDefinition" (formula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13"))
                           (rule "add_zero_right" (formula "13") (term "0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                           (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "27") (ifseqformula "22"))
                        )
                     )
                     (branch "CUT: self.right = null ∨ self.right.heightVariant@heap[anon( allLocs ∖ self.* ∪ if ( self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if ( self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if ( self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if ( self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.right.heightVariant FALSE"
                        (rule "cut_direct" (formula "13") (term "0") (userinteraction))
                        (branch "CUT: self.right = null TRUE"
                            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                           (rule "closeTrue" (formula "14"))
                        )
                        (branch "CUT: self.right = null FALSE"
                           (rule "unlimit_Tree_footprint" (formula "14") (term "2,1,1,0,1,1,0,0,1") (userinteraction))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "14") (term "2,1,1,0,1,1,0,0,1") (ifseqformula "13") (userinteraction))
                           (rule "unlimit_Tree_footprint" (formula "14") (term "2,1,1,0,1,1,0,1,0,1") (userinteraction))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "14") (term "2,1,1,0,1,1,0,1,0,1") (ifseqformula "13") (userinteraction))
                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "14"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "15"))
                           (rule "eqSymm" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "eqSymm" (formula "12") (term "0,0"))
                           (rule "replace_known_right" (formula "5") (term "0,1,1,0,1,1,0,0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "21")))
                           (rule "replace_known_right" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "21")))
                           (rule "replace_known_right" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "21")))
                           (rule "replace_known_right" (formula "3") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")))
                           (rule "replace_known_right" (formula "1") (term "0,1,1,1,1,0,0,1") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                           (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,0,1") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                           (rule "replace_known_right" (formula "24") (term "0,1,1,1,1,0,0,0,0,1,1,0,0,0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "12")) (ifInst ""  (formula "21")) (ifInst ""  (formula "13")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")))
                           (rule "disjointDefinition" (formula "20") (term "1"))
                           (rule "disjointDefinition" (formula "14") (term "1,0,1"))
                           (rule "disjointDefinition" (formula "16"))
                           (rule "disjointDefinition" (formula "24") (term "1,0,1,0,0,0"))
                           (rule "disjointDefinition" (formula "24") (term "1,1"))
                           (rule "disjointDefinition" (formula "24") (term "1,0,1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "13"))
                           (rule "add_zero_right" (formula "13") (term "0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0,0,0,0"))
                           (rule "applyEq" (formula "24") (term "1,0,1,1") (ifseqformula "2"))
                           (rule "applyEq" (formula "24") (term "1,0,1,0,1,0,0,0") (ifseqformula "2"))
                           (rule "replace_known_left" (formula "24") (term "1,0,1,0,0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1"))
                           (rule "polySimp_rightDist" (formula "15") (term "1"))
                           (rule "mul_literals" (formula "15") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0,0"))
                           (rule "setMinusOfUnion" (formula "22") (term "1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "22") (term "1,1,0,1,0"))
                           (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "6") (term "1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0,1"))
                           (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0,1"))
                           (rule "setMinusOfUnion" (formula "1") (term "1,1,0,1,0,1"))
                           (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,1,0,1,0,1,0,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,1,1,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,0,0,1,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,0,0,1,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,1,1,1,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,0,0,1,1"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,1,1,0,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,0,0,0,1,0,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,1,0,0,0,1,0,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,1,0,0,1,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,0,0,0,1,0,0,0"))
                           (rule "setMinusOfUnion" (formula "22") (term "1,1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "22") (term "1,1,1,0,1,0"))
                           (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "6") (term "1,1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0,1"))
                           (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0,1"))
                           (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,1,0,1"))
                           (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,1,0,1,0,1,0,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,1,1,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,0,0,1,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,0,0,1,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,1,1,1,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,0,0,1,1"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,1,1,0,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,0,0,0,1,0,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,1,0,0,0,1,0,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,1,0,0,1,0,0,0"))
                           (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,0,0,1,0,0,0"))
                           (rule "setMinusOfUnion" (formula "22") (term "1,1,1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "22") (term "1,1,1,1,0,1,0"))
                           (rule "setMinusOfUnion" (formula "22") (term "1,1,1,1,1,0,0"))
                           (rule "setMinusOfUnion" (formula "22") (term "1,1,1,1,1,0,1,0"))
                           (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_right_0"))
                           (rule "applyEq" (formula "25") (term "1,1,1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "25") (term "1,0,0,1,0,0,0") (ifseqformula "5"))
                           (rule "simplifySelectOfAnon" (formula "5"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "24")) (ifInst ""  (formula "10")))
                           (rule "eqSymm" (formula "6"))
                           (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0,0,0") (ifseqformula "6"))
                           (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "25") (term "1,1,1,0,0,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elementOfUnion" (formula "5") (term "0"))
                           (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elementOfUnion" (formula "5") (term "1,0"))
                           (rule "elementOfSetMinus" (formula "5") (term "1,1,0"))
                           (rule "elementOfSetMinus" (formula "5") (term "0,1,0"))
                           (rule "elementOfUnion" (formula "5") (term "0,1,1,1,0"))
                           (rule "elementOfSingleton" (formula "5") (term "1,0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elementOfUnion" (formula "5") (term "0,1,0,1,0"))
                           (rule "elementOfSingleton" (formula "5") (term "1,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elementOfUnion" (formula "5") (term "0,1,1,1,0"))
                           (rule "elementOfSingleton" (formula "5") (term "0,0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elementOfUnion" (formula "5") (term "0,1,0,1,0"))
                           (rule "elementOfSingleton" (formula "5") (term "0,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=Tree_left_0"))
                           (rule "applyEq" (formula "25") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "1") (term "1,0,1") (ifseqformula "6"))
                           (rule "simplifySelectOfAnon" (formula "6"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")) (ifInst ""  (formula "10")))
                           (rule "eqSymm" (formula "7"))
                           (rule "applyEqReverse" (formula "1") (term "1,0,1") (ifseqformula "7"))
                           (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "25") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfUnion" (formula "6") (term "0"))
                           (rule "elementOfUnion" (formula "6") (term "1,0"))
                           (rule "elementOfSetMinus" (formula "6") (term "0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfSetMinus" (formula "6") (term "1,1,0"))
                           (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfSetMinus" (formula "6") (term "0,1,0"))
                           (rule "elementOfUnion" (formula "6") (term "0,1,1,1,0"))
                           (rule "elementOfSingleton" (formula "6") (term "1,0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "6") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfUnion" (formula "6") (term "0,1,1,1,0"))
                           (rule "elementOfSingleton" (formula "6") (term "0,0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfUnion" (formula "6") (term "0,1,0,1,0"))
                           (rule "elementOfSingleton" (formula "6") (term "1,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfUnion" (formula "6") (term "0,1,0,1,0"))
                           (rule "elementOfSingleton" (formula "6") (term "0,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                           (rule "simplifySelectOfAnon" (formula "4"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")) (ifInst ""  (formula "10")))
                           (rule "eqSymm" (formula "5"))
                           (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "elementOfSetMinus" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "elementOfUnion" (formula "4") (term "0"))
                           (rule "elementOfSetMinus" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "elementOfUnion" (formula "4") (term "1,0"))
                           (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "elementOfSetMinus" (formula "4") (term "0,1,0"))
                           (rule "elementOfSetMinus" (formula "4") (term "1,1,0"))
                           (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0"))
                           (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0"))
                           (rule "elementOfSingleton" (formula "4") (term "0,0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "23"))
                           (rule "elementOfUnion" (formula "5") (term "0,1,1,1,0"))
                           (rule "elementOfSingleton" (formula "5") (term "1,0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "25") (term "0,0,1,0,0,0") (inst "selectSK=Tree_heightVariant_2"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                           (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,0"))
                           (rule "elementOfUnion" (formula "6") (term "0,1,1,1,0"))
                           (rule "elementOfSingleton" (formula "6") (term "0,0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "2") (term "1,0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "2") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "elementOfUnion" (formula "2") (term "1,1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "2") (term "1,1,1,0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "2") (term "0,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSetMinus" (formula "2") (term "1,1,1,1,0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "2") (term "0,1,1,1,0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=Tree_heightVariant_3"))
                           (rule "applyEq" (formula "27") (term "0,0,0,1,0,0,0,0") (ifseqformula "3"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "eqSymm" (formula "4") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSetMinus" (formula "3") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "3") (term "1,0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "3") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,1,1,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSetMinus" (formula "3") (term "0,1,0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "3") (term "1,1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "1,0,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,1,1,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "3") (term "0,1,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "pullOutSelect" (formula "2") (term "0,0,0,1,1,1,0,0,0,0") (inst "selectSK=Tree_right_1"))
                           (rule "applyEq" (formula "3") (term "0,0,1,0,1,1,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,1,0,1,1,1,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,1,0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,1,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,1,1,1,1,1,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,1,0,1,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,1,1,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,1,1,1,1,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "2"))
                           (rule "simplifySelectOfAnon" (formula "2"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")) (ifInst ""  (formula "13")))
                           (rule "eqSymm" (formula "3") (term "0,0,1,1,0,0,0,0"))
                           (rule "eqSymm" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "ifthenelse_negated" (formula "2") (term "0"))
                           (rule "elementOfUnion" (formula "2") (term "0,0"))
                           (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "1,0,0"))
                           (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0"))
                           (rule "elementOfUnion" (formula "2") (term "1,1,0,0"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "1,1,1,0,0"))
                           (rule "elementOfSetMinus" (formula "2") (term "0,1,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "eqSymm" (formula "2") (term "0,0,1,1,0,0"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,1,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,1,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSetMinus" (formula "2") (term "1,1,1,1,0,0"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,1,1,1,1,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,1,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,1,1,1,1,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,1,1,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSetMinus" (formula "2") (term "0,1,1,1,0,0"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,1,1,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,1,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "2") (term "0,1,0,1,1,1,0,0"))
                           (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,1,1,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "ifthenelse_split" (formula "1") (term "2,0,0,1,0,0,0,0"))
                           (branch "self.left = null TRUE"
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "4") (term "0,2,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "5") (term "0,2,0,0,1,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "3") (term "0,2,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "4") (term "0,0,1,1,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "4") (term "1,0,1,0,0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "26")))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "6") (term "0,1,0,1,0,1,1,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "7") (term "0,1,0,1,1,1,1,1,0,0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "7"))
                              (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "replace_known_left" (formula "7") (term "0,2,0,1,0,1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "7"))
                              (rule "replace_known_left" (formula "7") (term "0,2,0,1,0,1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "7"))
                              (rule "replace_known_left" (formula "6") (term "0,2,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "6"))
                              (rule "replace_known_left" (formula "20") (term "0,0,0,1,1,1,0,1,1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "ifthenelse_negated" (formula "4") (term "0"))
                              (rule "ifthenelse_negated" (formula "3") (term "0"))
                              (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "0,0,0"))
                              (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "1"))
                              (rule "limit_Tree_footprint" (formula "13") (term "1,0"))
                              (rule "applyEq" (formula "5") (term "0,1,1,1,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "4") (term "2,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "21") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "21") (term "0,1,1,1,0,1,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "2") (term "2,1,0,0,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "21") (term "0,1,1,1,0,0,0,1") (ifseqformula "13"))
                              (rule "limit_Tree_footprint" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                              (rule "commute_and" (formula "22") (term "0,0"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "self.right.<created> = TRUE TRUE"
                                 (rule "close" (formula "21") (ifseqformula "4"))
                              )
                              (branch "self.right.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "19") (ifseqformula "20"))
                                 (rule "close" (formula "19") (ifseqformula "7"))
                              )
                           )
                           (branch "self.left = null FALSE"
                              (rule "replace_known_right" (formula "1") (term "0,2,0,1,0,1,0,0,0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                              (rule "replace_known_right" (formula "2") (term "0,2,0,1,0,1,1,1,0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                              (rule "replace_known_right" (formula "3") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                              (rule "replace_known_right" (formula "6") (term "0,1,0,1,1,1,1,1,0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                              (rule "replace_known_right" (formula "4") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                              (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "replace_known_right" (formula "7") (term "0,1,0,1,0,1,1,0,0,1") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                              (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "29") (term "1,1,0,0,1,0,0,0,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "replace_known_right" (formula "7") (term "0,2,0,1,0,1,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                              (rule "replace_known_right" (formula "9") (term "0,2,0,1,1,1,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                              (rule "replace_known_right" (formula "8") (term "0,2,0,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                              (rule "replace_known_right" (formula "30") (term "0,1,0,1,1,1,1,1,0,1,1,0,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                              (rule "elementOfSingleton" (formula "2") (term "0,1,0,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "4") (term "0,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfSingleton" (formula "7") (term "0,1,0,1,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "elementOfSingleton" (formula "9") (term "0,1,0,1,0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                              (rule "elementOfSingleton" (formula "2") (term "0,1,0,1,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "4") (term "0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "elementOfSingleton" (formula "7") (term "0,1,1,1,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                              (rule "elementOfSingleton" (formula "2") (term "0,1,1,1,1,1,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "4") (term "0,1,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,1,1,1,1,1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,1,1,1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,1,0,1,1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,1,1,1,1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                              (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "eqSymm" (formula "2") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "2") (term "0,1,1,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                              (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                              (rule "ifthenelse_negated" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "5"))
                              (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEq" (formula "26") (term "1,0,1,0,0,0,0") (ifseqformula "5"))
                              (rule "replace_known_left" (formula "26") (term "1,0,0,0,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "limit_Tree_footprint" (formula "16") (term "1,0"))
                              (rule "applyEq" (formula "27") (term "0,1,1,1,1,0,0,0,1,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "27") (term "0,1,1,1,1,0,0,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "1") (term "2,1,1,0,0,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "5") (term "0,1,1,1,1,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "27") (term "0,1,1,1,1,0,1,1,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "3") (term "2,1,1,0,0,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "16"))
                              (rule "applyEq" (formula "27") (term "0,1,1,1,1,0,0,0,1") (ifseqformula "16"))
                              (rule "commuteUnion" (formula "27") (term "1,1,1,0,0,0,1,0"))
                              (rule "commuteUnion" (formula "27") (term "1,1,1,0,0,0,0"))
                              (rule "commuteUnion" (formula "5") (term "1,1,1,0,0"))
                              (rule "commuteUnion" (formula "27") (term "1,1,1,0,1,1,0,0"))
                              (rule "commuteUnion" (formula "4") (term "1,1,1,0,0"))
                              (rule "commuteUnion" (formula "27") (term "1,1,1,0,0,0,1"))
                              (rule "limit_Tree_footprint" (formula "21") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "2,0,1,0,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,0,0,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "5") (term "0,1,1,1,1,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,1,1,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,0,0,1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "3") (term "2,0,1,0,0,0,0") (ifseqformula "21"))
                              (rule "commuteUnion" (formula "28") (term "1,1,1,0,0,0,1"))
                              (rule "commuteUnion" (formula "5") (term "1,1,1,0,0"))
                              (rule "commuteUnion" (formula "28") (term "1,1,1,0,0,0,0"))
                              (rule "commuteUnion" (formula "28") (term "1,1,1,0,1,1,0,0"))
                              (rule "commuteUnion" (formula "28") (term "1,1,1,0,0,0,1,0"))
                              (rule "commuteUnion" (formula "4") (term "1,1,1,0,0"))
                              (rule "limit_Tree_footprint" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                              (rule "limit_Tree_footprint" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                              (rule "shift_paren_or" (formula "1") (term "0,0,0,0"))
                              (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                              (rule "commute_and" (formula "30") (term "1,0,0"))
                              (rule "shift_paren_and" (formula "30") (term "0,0"))
                              (rule "associativeLawUnion" (formula "7") (term "1,1,0,0"))
                              (rule "limit_Tree_footprint" (formula "7") (term "0"))
                              (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                              (rule "associativeLawUnion" (formula "5") (term "1,1,0,0"))
                              (rule "limit_Tree_footprint" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                              (rule "associativeLawUnion" (formula "7") (term "1,1,0,0"))
                              (rule "associativeLawUnion" (formula "4") (term "1,1,0,0"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "self.right.<created> = TRUE TRUE"
                                 (rule "close" (formula "29") (ifseqformula "3"))
                              )
                              (branch "self.right.<created> = TRUE FALSE"
                                 (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "28"))
                                 (rule "close" (formula "25") (ifseqformula "8"))
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: self.left = null ∨ self.left.heightVariant@heap[anon( allLocs ∖ self.* ∪ if ( self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if ( self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if ( self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if ( self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.left.heightVariant FALSE"
                     (rule "unlimit_Tree_footprint" (formula "12") (term "2,0,1,0,1,1,0,0,1") (userinteraction))
                     (rule "unlimit_Tree_footprint" (formula "12") (term "2,0,1,0,1,1,0,1,0,1") (userinteraction))
                     (rule "cut_direct" (formula "12") (term "0") (userinteraction))
                     (branch "CUT: self.left = null TRUE"
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                        (rule "closeTrue" (formula "13"))
                     )
                     (branch "CUT: self.left = null FALSE"
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "13") (term "2,0,1,0,1,1,0,0,1") (ifseqformula "12") (userinteraction))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "13") (term "2,0,1,0,1,1,0,1,0,1") (ifseqformula "12") (userinteraction))
                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "eqSymm" (formula "23") (term "0,0,0,0,0,0,0,0,0"))
                        (rule "eqSymm" (formula "11") (term "0,0"))
                        (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,1,0,0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")))
                        (rule "replace_known_right" (formula "5") (term "0,0,1,0,1,1,0,0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")))
                        (rule "replace_known_right" (formula "4") (term "0,0,1,0,1,1,0,0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")))
                        (rule "replace_known_right" (formula "2") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
                        (rule "replace_known_right" (formula "1") (term "0,1,0,1,1,1,0,0,1") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "replace_known_right" (formula "23") (term "0,0,1,0,1,1,0,1,1,1") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")) (ifInst ""  (formula "12")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "11")))
                        (rule "disjointDefinition" (formula "19") (term "1"))
                        (rule "disjointDefinition" (formula "16") (term "1,0,1"))
                        (rule "disjointDefinition" (formula "14"))
                        (rule "disjointDefinition" (formula "23") (term "1,1"))
                        (rule "disjointDefinition" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "disjointDefinition" (formula "23") (term "1,0,1,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "12"))
                        (rule "add_zero_right" (formula "12") (term "0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0,0"))
                        (rule "applyEq" (formula "23") (term "1,0,1,0,0,0,0,0") (ifseqformula "2"))
                        (rule "replace_known_left" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "applyEq" (formula "23") (term "0,0,1,1") (ifseqformula "2"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1"))
                        (rule "mul_literals" (formula "13") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0"))
                        (rule "setMinusOfUnion" (formula "21") (term "1,1,0,1,0"))
                        (rule "setMinusOfUnion" (formula "21") (term "1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "5") (term "1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0,1"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,1,0,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,1,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0,0,1,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0,0,1,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,1,1"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0,0,0,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,0,0,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0,0,0,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,0,0,0,0,0"))
                        (rule "setMinusOfUnion" (formula "21") (term "1,1,1,0,1,0"))
                        (rule "setMinusOfUnion" (formula "21") (term "1,1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "5") (term "1,1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0,1"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,1,0,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,1,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0,0,1,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0,0,1,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,1,1"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0,0,0,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,0,0,1,1,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0,0,0,0,0,0"))
                        (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,0,0,0,0,0"))
                        (rule "setMinusOfUnion" (formula "21") (term "0,1,1,1,0,1,0"))
                        (rule "setMinusOfUnion" (formula "21") (term "0,1,1,1,0,0"))
                        (rule "setMinusOfUnion" (formula "21") (term "1,0,1,1,1,0,1,0"))
                        (rule "setMinusOfUnion" (formula "21") (term "1,0,1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")) (ifInst ""  (formula "9")))
                        (rule "eqSymm" (formula "4"))
                        (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0"))
                        (rule "elementOfUnion" (formula "3") (term "1,0"))
                        (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSetMinus" (formula "3") (term "1,1,0"))
                        (rule "elementOfSetMinus" (formula "3") (term "0,1,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,1,1,1,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,1,1,1,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,1,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,1,0,1,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=Tree_left_0"))
                        (rule "applyEq" (formula "24") (term "1,0,0,0,0,0,0") (ifseqformula "5"))
                        (rule "simplifySelectOfAnon" (formula "5"))
                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "23")) (ifInst ""  (formula "9")))
                        (rule "eqSymm" (formula "6"))
                        (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "24") (term "1,0,0,0,0,0,0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfUnion" (formula "5") (term "0"))
                        (rule "elementOfSetMinus" (formula "5") (term "0,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                        (rule "elementOfUnion" (formula "5") (term "1,0"))
                        (rule "elementOfUnion" (formula "5") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfSetMinus" (formula "5") (term "1,1,0"))
                        (rule "elementOfSetMinus" (formula "5") (term "0,1,0"))
                        (rule "elementOfUnion" (formula "5") (term "0,1,1,1,0"))
                        (rule "elementOfUnion" (formula "5") (term "0,1,0,1,0"))
                        (rule "elementOfUnion" (formula "5") (term "0,0,1,1,1,0"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0,1,1,1,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,1,1,1,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfUnion" (formula "5") (term "0,0,1,0,1,0"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Tree_right_0"))
                        (rule "applyEq" (formula "24") (term "1,1,1,1,0,0,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "24") (term "1,0,0,0,1,1,0,0,0") (ifseqformula "4"))
                        (rule "simplifySelectOfAnon" (formula "4"))
                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")) (ifInst ""  (formula "9")))
                        (rule "eqSymm" (formula "5"))
                        (rule "applyEqReverse" (formula "24") (term "1,1,1,1,0,0,0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "24") (term "1,0,0,0,1,1,0,0,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "elementOfSetMinus" (formula "4") (term "0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0"))
                        (rule "elementOfUnion" (formula "4") (term "1,0"))
                        (rule "elementOfSetMinus" (formula "4") (term "0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSetMinus" (formula "4") (term "0,1,0"))
                        (rule "elementOfSetMinus" (formula "4") (term "1,1,0"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0"))
                        (rule "elementOfUnion" (formula "4") (term "0,1,1,1,0"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,1,0,1,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "pullOutSelect" (formula "21") (term "1,0") (inst "selectSK=Tree_left_1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "9")))
                        (rule "elementOfUnion" (formula "5") (term "0,0,1,1,1,0"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,0,1,1,1,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,1,1,1,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "1,0,1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,1,1,1,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,1,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,1,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSetMinus" (formula "1") (term "1,1,0,1,0,0"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,1,0,1,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,1,0,0"))
                        (rule "pullOutSelect" (formula "24") (term "0,0,0,0,0,0") (inst "selectSK=Tree_heightVariant_1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,1,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,0,1,1,1,0,1,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,1,1,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,1,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "2") (term "0,0,1,0,1,0,1,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "1,0,0,1,0,1,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                        (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "25") (term "0,0,0,1,1,0,0,0") (inst "selectSK=Tree_heightVariant_2"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,1,0,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "1,0,0,1,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,1,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                        (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=Tree_heightVariant_3"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "25"))
                        (rule "elementOfUnion" (formula "2") (term "1,0,0,0,0"))
                        (rule "elementOfSetMinus" (formula "2") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0,0,0"))
                        (rule "elementOfSetMinus" (formula "2") (term "1,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,1,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,0,1,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "1,0,0,1,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,1,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0"))
                        (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "1,0,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                        (rule "elementOfSetMinus" (formula "1") (term "0,1,0,1,0,0,0,0"))
                        (rule "elementOfSetMinus" (formula "1") (term "1,1,0,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,1,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,1,0,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,1,0,0,0,0"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,1,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,1,0,1,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,1,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,1,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_split" (formula "7") (term "2,0,0,0"))
                        (branch "self.right = null TRUE"
                            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
                           (rule "true_left" (formula "8"))
                           (rule "replace_known_left" (formula "1") (term "0,2,0,1,0,0,1,0,0,0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
                           (rule "replace_known_left" (formula "4") (term "0,2,0,0,0,0") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
                           (rule "applyEqReverse" (formula "1") (term "1,0,1,0,0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "0,1,1,0,1,1,0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                           (rule "replace_known_left" (formula "3") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                           (rule "replace_known_left" (formula "2") (term "0,2,0,1,1,1,0,0,0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "replace_known_left" (formula "4") (term "0,1,1,0,1,1,1,0,0,1") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")))
                           (rule "true_left" (formula "4"))
                           (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "replace_known_left" (formula "7") (term "0,2,0,1,1,1,0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
                           (rule "true_left" (formula "7"))
                           (rule "replace_known_left" (formula "6") (term "0,2,0,1,0,1,0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
                           (rule "true_left" (formula "6"))
                           (rule "replace_known_left" (formula "20") (term "0,1,1,0,1,1,1,0,0,0,1,0,0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
                           (rule "ifthenelse_negated" (formula "2") (term "0"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "2") (term "0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "19"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "5"))
                           (rule "limit_Tree_footprint" (formula "13") (term "1,0"))
                           (rule "applyEq" (formula "3") (term "2,1,0,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "4") (term "0,1,1,1,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "21") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "21") (term "0,1,1,1,0,1,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "2") (term "2,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "21") (term "0,1,1,1,0,0,0,1") (ifseqformula "13"))
                           (rule "limit_Tree_footprint" (formula "4") (term "0"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                           (rule "commute_and" (formula "22") (term "0,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "self.left.<created> = TRUE TRUE"
                              (rule "close" (formula "21") (ifseqformula "2"))
                           )
                           (branch "self.left.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "19") (ifseqformula "20"))
                              (rule "close" (formula "19") (ifseqformula "7"))
                           )
                        )
                        (branch "self.right = null FALSE"
                           (rule "replace_known_right" (formula "1") (term "0,2,0,1,1,1,0,0,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                           (rule "replace_known_right" (formula "6") (term "0,1,1,0,1,1,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                           (rule "replace_known_right" (formula "2") (term "0,2,0,1,1,0,0,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                           (rule "replace_known_right" (formula "4") (term "0,2,0,1,0,1,0,1,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                           (rule "replace_known_right" (formula "3") (term "0,2,0,1,1,1,0,0,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                           (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "notLeft" (formula "15"))
                           (rule "replace_known_right" (formula "5") (term "0,1,1,0,1,1,1,0,0,1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "replace_known_right" (formula "8") (term "0,2,0,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "9") (term "0,2,0,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "7") (term "0,2,0,1,0,1,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "30") (term "0,1,1,1,1,1,1,0,1,0,0,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                           (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,1,1,1,0,1,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,1,0,1,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,1,1,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,1,1,0,1,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,0,0,1,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,1,1,1,0,0,0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "elementOfSingleton" (formula "7") (term "0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "elementOfSingleton" (formula "6") (term "0,1,1,1,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfSingleton" (formula "2") (term "0,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "3") (term "0,1,1,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "7") (term "0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "elementOfSingleton" (formula "6") (term "0,1,0,1,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elementOfSingleton" (formula "2") (term "0,1,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "applyEq" (formula "26") (term "1,0,1,0,1,0,0,0") (ifseqformula "4"))
                           (rule "replace_known_left" (formula "26") (term "1,0,1,0,0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "4"))
                           (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "limit_Tree_footprint" (formula "13") (term "1,0"))
                           (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,1,1,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "4") (term "0,0,1,1,1,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "2") (term "2,0,1,0,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "5") (term "0,0,1,1,1,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,1,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "3") (term "2,0,1,0,0,0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,0,0,1") (ifseqformula "13"))
                           (rule "limit_Tree_footprint" (formula "4") (term "1"))
                           (rule "applyEq" (formula "3") (term "2,1,1,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,0,0,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "2") (term "2,1,1,0,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,1,0,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,0,0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "5") (term "0,1,1,1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "6") (term "0,1,1,1,1,0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,1,1,0,0") (ifseqformula "4"))
                           (rule "limit_Tree_footprint" (formula "5") (term "0"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                           (rule "limit_Tree_footprint" (formula "7") (term "0"))
                           (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                           (rule "shift_paren_or" (formula "3") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
                           (rule "commute_and" (formula "30") (term "0,0,0"))
                           (rule "commute_and" (formula "30") (term "1,0,0"))
                           (rule "shift_paren_and" (formula "30") (term "0,0"))
                           (rule "commute_and_2" (formula "30") (term "0,0,0"))
                           (rule "associativeLawUnion" (formula "6") (term "1,1,0,0"))
                           (rule "limit_Tree_footprint" (formula "6") (term "0"))
                           (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                           (rule "associativeLawUnion" (formula "9") (term "1,1,0,0"))
                           (rule "limit_Tree_footprint" (formula "9") (term "0"))
                           (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                           (rule "associativeLawUnion" (formula "5") (term "1,1,0,0"))
                           (rule "associativeLawUnion" (formula "7") (term "1,1,0,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "self.left.<created> = TRUE TRUE"
                              (rule "close" (formula "29") (ifseqformula "2"))
                           )
                           (branch "self.left.<created> = TRUE FALSE"
                              (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "28"))
                              (rule "close" (formula "25") (ifseqformula "9"))
                           )
                        )
                     )
                  )
               )
               (branch "CUT: self.right = null ∨ (self.right@heap).footprint() @heap[anon( allLocs ∖ self.* ∪ if (self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if (self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if (self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if (self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.right.footprint() FALSE"
                  (rule "cut_direct" (formula "11") (term "0") (userinteraction))
                  (branch "CUT: self.right = null TRUE"
                      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                     (rule "closeTrue" (formula "12"))
                  )
                  (branch "CUT: self.right = null FALSE"
                      (builtin "Use Dependency Contract" (formula "12") (term "0,1") (ifInst ""  (formula "12") (term "1,1")) (contract "Tree[Tree::footprint()].JML accessible clause.0") (userinteraction))
                     (rule "unlimit_java_lang_Object__inv_" (formula "10") (term "1,1,1,0,0,0,0") (userinteraction))
                     (rule "impLeft" (formula "11"))
                     (branch "Case 1"
                        (rule "andRight" (formula "11"))
                        (branch "Case 1"
                           (rule "andRight" (formula "11"))
                           (branch "Case 1"
                              (rule "andRight" (formula "11"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "11"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "11"))
                                    (branch "Case 1"
                                       (rule "notRight" (formula "11"))
                                       (rule "close" (formula "12") (ifseqformula "1"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                       (rule "referencedObjectIsCreatedRight" (formula "11") (ifseqformula "12"))
                                       (rule "close" (formula "11") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "11"))
                                    (branch "Case 1"
                                       (rule "close" (formula "11") (ifseqformula "5"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                       (rule "wellFormedAnon" (formula "11"))
                                       (rule "andLeft" (formula "10"))
                                       (rule "andLeft" (formula "10"))
                                       (rule "andLeft" (formula "10"))
                                       (rule "andLeft" (formula "10"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "10"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "10"))
                                       (rule "eqSymm" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                       (rule "eqSymm" (formula "10") (term "0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
                                       (rule "replace_known_right" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")))
                                       (rule "replace_known_right" (formula "3") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")))
                                       (rule "replace_known_right" (formula "1") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                       (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "6")))
                                       (rule "closeTrue" (formula "19"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "eqSymm" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                 (rule "eqSymm" (formula "10") (term "0,0"))
                                 (rule "replace_known_right" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")))
                                 (rule "replace_known_right" (formula "3") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")))
                                 (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
                                 (rule "replace_known_right" (formula "1") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "replace_known_left" (formula "23") (term "0,0,0,0,0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "11")))
                                 (rule "disjointDefinition" (formula "18") (term "1"))
                                 (rule "disjointDefinition" (formula "12") (term "1,0,1"))
                                 (rule "disjointDefinition" (formula "14"))
                                 (rule "disjointDefinition" (formula "23") (term "1,0,1,0,0,0,0"))
                                 (rule "disjointDefinition" (formula "23") (term "1,0,1,0,0,0"))
                                 (rule "disjointDefinition" (formula "23") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                 (rule "add_zero_right" (formula "11") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "mul_literals" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "21") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0,1"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0,0,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0,0,1,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,1,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,1,1"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0,0,1,1"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,0,0,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0,0,0,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0,0,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,0,1,0,0,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "21") (term "1,1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0,1"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0,0,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0,0,1,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,1,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,1,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,1,1"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0,0,1,1"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,0,0,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0,0,0,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0,0,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,1,0,0,0,1,0,0,0"))
                                 (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=Tree_left_0"))
                                 (rule "applyEq" (formula "24") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "4"))
                                 (rule "simplifySelectOfAnon" (formula "4"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")) (ifInst ""  (formula "8")))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "applyEqReverse" (formula "24") (term "1,0,0,0,1,0,0,0,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "elementOfSetMinus" (formula "4") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "elementOfUnion" (formula "4") (term "0"))
                                 (rule "elementOfUnion" (formula "4") (term "1,0"))
                                 (rule "elementOfSetMinus" (formula "4") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "elementOfSetMinus" (formula "4") (term "0,1,0"))
                                 (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "elementOfSetMinus" (formula "4") (term "1,1,0"))
                                 (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "elementOfUnion" (formula "4") (term "0,1,1,1,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "1,0,1,1,1,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "elementOfUnion" (formula "4") (term "0,1,0,1,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "0,0,1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "elementOfUnion" (formula "4") (term "0,1,1,1,0"))
                                 (rule "elementOfSingleton" (formula "4") (term "0,0,1,1,1,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_right_0"))
                                 (rule "applyEq" (formula "24") (term "1,1,1,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "24") (term "1,0,0,0,1,0,0,0") (ifseqformula "3"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")) (ifInst ""  (formula "8")))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "applyEqReverse" (formula "24") (term "1,1,1,0,0,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "24") (term "1,0,0,0,1,0,0,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0"))
                                 (rule "elementOfUnion" (formula "3") (term "1,0"))
                                 (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSetMinus" (formula "3") (term "0,1,0"))
                                 (rule "elementOfSetMinus" (formula "3") (term "1,1,0"))
                                 (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,1,1,1,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,1,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                 (rule "simplifySelectOfAnon" (formula "2"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")) (ifInst ""  (formula "8")))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "1,0"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,1,0"))
                                 (rule "elementOfSetMinus" (formula "2") (term "1,1,0"))
                                 (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,1,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "23") (term "0,0,0,1,0,0,0,0") (inst "selectSK=Tree_heightVariant_1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "24") (term "0,0,0,1,0,0,0") (inst "selectSK=Tree_heightVariant_2"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "commuteUnion_2" (formula "23") (term "1,0,1,1,0,0"))
                                 (rule "commuteUnion_2" (formula "3") (term "1,0,1,1,0,0,1"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,1,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,0,0,1,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,0,0,1,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,1,0,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,0,1,0,1,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,0,1,1"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,0,0,1,1"))
                                 (rule "commuteUnion_2" (formula "23") (term "1,1,1,1,1,0,0"))
                                 (rule "commuteUnion_2" (formula "23") (term "1,0,1,1,1,0,0"))
                                 (rule "commuteUnion" (formula "3") (term "1,1,1,0,0,1"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,1,1,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,1,1,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,0,0,1,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,0,0,1,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,0,0,1,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,0,0,1,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,1,1,0,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,1,1,0,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,1,0,1,0,1,0,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,1,0,1,0,1,0,0,0"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,1,0,1,0,1,0,0,0"))
                                 (rule "commuteUnion" (formula "25") (term "1,1,1,0,1,0,1,1"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,0,0,1,1"))
                                 (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,0,0,1,1"))
                                 (rule "ifthenelse_split" (formula "25") (term "0,0,1,1,1,0,0,0,1,1"))
                                 (branch "self.left = null TRUE"
                                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "24") (term "0,1,1,1,1,1,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "2") (term "0,2,0,0,1,0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "3") (term "0,2,0,0,1,0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "true_left" (formula "4"))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "replace_known_left" (formula "5") (term "0,2,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "true_left" (formula "5"))
                                    (rule "replace_known_left" (formula "4") (term "0,2,0,1,0,1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "true_left" (formula "4"))
                                    (rule "replace_known_left" (formula "4") (term "0,2,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "true_left" (formula "4"))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "3") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (rule "limit_java_lang_Object__inv_" (formula "15"))
                                    (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "self.left = null FALSE"
                                    (rule "replace_known_right" (formula "1") (term "0,2,0,0,1,0,0,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "23") (term "0,1,1,0,1,1,1,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "2") (term "0,2,0,1,0,1,0,0,0,0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
                                    (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,1,0,1,1,1,0,0,1") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                    (rule "replace_known_right" (formula "5") (term "0,2,0,0,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                    (rule "replace_known_right" (formula "4") (term "0,2,0,1,0,1,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                    (rule "replace_known_right" (formula "6") (term "0,2,0,0,1,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                    (rule "replace_known_right" (formula "28") (term "0,1,1,0,1,1,1,0,1,0,1,0,1,0,0,0,0") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                    (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                    (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "elementOfSingleton" (formula "4") (term "0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                    (rule "elementOfSingleton" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                    (rule "elementOfSingleton" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "commuteUnion_2" (formula "22") (term "1,0,1,1,1,0,0"))
                                    (rule "commuteUnion_2" (formula "22") (term "1,1,1,1,1,0,0"))
                                    (rule "commuteUnion_2" (formula "22") (term "1,0,1,1,0,0"))
                                    (rule "commuteUnion_2" (formula "3") (term "1,0,1,1,0,0"))
                                    (rule "commuteUnion" (formula "3") (term "1,1,1,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,0,0,1,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,0,0,1"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,0,0,1"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,0,0,1,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,0,1,0,0,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,1,0,1,0,1,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,0,0,1"))
                                    (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "3"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,0,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,1,0,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,1,0,1,0,0,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,1,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,1,1,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,0,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,0,0,1,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,0,0,1,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,1,0,1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "25") (term "1,0,1,0,0,0,0,0") (ifseqformula "3"))
                                    (rule "replace_known_left" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "commuteUnion" (formula "25") (term "1,1,1,0,1,0,1"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,1,0,1,0,1,0,1,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,0,1"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,0,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,0,1,1,0,1,0,1,0,1,0,0,0"))
                                    (rule "commuteUnion_2" (formula "25") (term "1,1,1,1,1,0,1,1,0,0,0"))
                                    (rule "limit_java_lang_Object__inv_" (formula "20"))
                                    (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "cut_direct" (formula "10") (term "0,0,1") (userinteraction))
                              (branch "CUT: self.left = null TRUE"
                                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")))
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "10")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "replace_known_right" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "10")) (ifInst ""  (formula "18")) (ifInst ""  (formula "10")))
                                 (rule "replace_known_left" (formula "3") (term "0,0,1,0,1,1,0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "18")) (ifInst ""  (formula "10")) (ifInst ""  (formula "18")))
                                 (rule "replace_known_left" (formula "17") (term "0,0,1,0,1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "18")) (ifInst ""  (formula "10")) (ifInst ""  (formula "18")))
                                 (rule "replace_known_left" (formula "2") (term "0,0,1,0,1,1,0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")) (ifInst ""  (formula "10")) (ifInst ""  (formula "18")))
                                 (rule "replace_known_right" (formula "1") (term "0,1,1,1,1,0,0,1") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "18")) (ifInst ""  (formula "10")))
                                 (rule "true_left" (formula "1"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "disjointDefinition" (formula "12"))
                                 (rule "disjointDefinition" (formula "16"))
                                 (rule "disjointDefinition" (formula "20") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10"))
                                 (rule "add_zero_right" (formula "10") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "9"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1"))
                                 (rule "mul_literals" (formula "11") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "18") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "20") (term "1,1,0,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "20") (term "1,1,0,1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "20") (term "1,1,0,0,0,1,0"))
                                 (rule "setMinusOfUnion" (formula "20") (term "1,1,0,0,0,1"))
                                 (rule "setMinusOfUnion" (formula "16") (term "1,0,0"))
                                 (rule "setMinusOfUnion" (formula "20") (term "1,1,0,1,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "20") (term "1,1,0,0,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "20") (term "1,1,0,1,0,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=Tree_left_0"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                 (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "10"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0"))
                                 (rule "elementOfSetMinus" (formula "3") (term "1,0"))
                                 (rule "elementOfSetMinus" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_right_0"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "2"))
                                 (rule "simplifySelectOfAnon" (formula "2"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "applyEqReverse" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "21") (term "1,1,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0"))
                                 (rule "elementOfSetMinus" (formula "2") (term "1,0"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "6")))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "pullOutSelect" (formula "18") (term "0,0,0,0,0") (inst "selectSK=Tree_heightVariant_1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "commuteUnion_2" (formula "15") (term "1,1,0"))
                                 (rule "commuteUnion_2" (formula "15") (term "0,1,1,0"))
                                 (rule "commuteUnion" (formula "15") (term "0,0,1,1,0"))
                                 (rule "limit_Tree_footprint" (formula "17") (term "1"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "16") (term "0,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "2,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "limit_Tree_footprint" (formula "18") (term "0"))
                                 (rule "commute_and" (formula "21") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "21") (term "0,0"))
                                 (rule "equalityToElementOfRight" (formula "19") (inst "ov=ov") (inst "fv=fv"))
                                 (rule "allRight" (formula "19") (inst "sk=ov_0"))
                                 (rule "allRight" (formula "19") (inst "sk=fv_0"))
                                 (rule "equiv_right" (formula "19"))
                                 (branch "Case '->'"
                                    (rule "equalityToElementOfRight" (formula "18") (inst "ov=ov") (inst "fv=fv"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "allRight" (formula "18") (inst "sk=ov_1"))
                                    (rule "allRight" (formula "18") (inst "sk=fv_1"))
                                    (rule "notRight" (formula "18"))
                                    (rule "elementOfIntersect" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "elementOfSetMinus" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "elementOfSetMinus" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "elementOfUnion" (formula "20"))
                                    (rule "orRight" (formula "20"))
                                    (rule "elementOfUnion" (formula "19"))
                                    (rule "orRight" (formula "19"))
                                    (rule "elementOfSetMinus" (formula "22"))
                                    (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "notRight" (formula "22"))
                                    (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "elementOfSetMinus" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")) (ifInst ""  (formula "20")))
                                    (rule "false_right" (formula "23"))
                                    (rule "elementOfUnion" (formula "21"))
                                    (rule "orRight" (formula "21"))
                                    (rule "elementOfUnion" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEq" (formula "24") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "23") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                    (rule "elementOfUnion" (formula "22"))
                                    (rule "orRight" (formula "22"))
                                    (rule "elementOfSingleton" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "closeTrue" (formula "23"))
                                 )
                                 (branch "Case '<-'"
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "equalityToElementOfRight" (formula "19") (inst "ov=ov") (inst "fv=fv"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "allRight" (formula "19") (inst "sk=ov_1"))
                                    (rule "allRight" (formula "19") (inst "sk=fv_1"))
                                    (rule "notRight" (formula "19"))
                                    (rule "elementOfIntersect" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "elementOfSetMinus" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "elementOfSetMinus" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "elementOfUnion" (formula "20"))
                                    (rule "orRight" (formula "20"))
                                    (rule "elementOfUnion" (formula "19"))
                                    (rule "orRight" (formula "19"))
                                    (rule "elementOfSetMinus" (formula "22"))
                                    (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "notRight" (formula "22"))
                                    (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "elementOfSetMinus" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")) (ifInst ""  (formula "20")))
                                    (rule "false_right" (formula "23"))
                                    (rule "elementOfUnion" (formula "21"))
                                    (rule "orRight" (formula "21"))
                                    (rule "elementOfUnion" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "23") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "22") (term "1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "elementOfUnion" (formula "22"))
                                    (rule "orRight" (formula "22"))
                                    (rule "elementOfSingleton" (formula "23"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "closeTrue" (formula "23"))
                                 )
                              )
                              (branch "CUT: self.left = null FALSE"
                                 (rule "Definition_axiom_for_footprint_in_Tree" (formula "10") (term "0,1,1") (ifseqformula "11") (userinteraction))
                                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")))
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")) (ifInst ""  (formula "13")) (ifInst ""  (formula "11")) (ifInst ""  (formula "13")))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "eqSymm" (formula "26") (term "0,0,0,0,0,0,0"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "21")))
                                 (rule "replace_known_right" (formula "22") (term "0,1,1,1,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "21")))
                                 (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,1,0,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")))
                                 (rule "replace_known_right" (formula "4") (term "0,1,0,1,1,1,0,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")))
                                 (rule "replace_known_right" (formula "26") (term "0,0,0,0,0,0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "10")))
                                 (rule "disjointDefinition" (formula "19"))
                                 (rule "disjointDefinition" (formula "15"))
                                 (rule "disjointDefinition" (formula "12"))
                                 (rule "disjointDefinition" (formula "22"))
                                 (rule "disjointDefinition" (formula "26") (term "1,0,1,0,0,0"))
                                 (rule "disjointDefinition" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "disjointDefinition" (formula "26") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "10"))
                                 (rule "add_zero_right" (formula "10") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,0,0,0"))
                                 (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "1,0,1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "replace_known_left" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1"))
                                 (rule "mul_literals" (formula "11") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "24") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "4") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                                 (rule "distributeIntersection_2" (formula "19") (term "0"))
                                 (rule "setMinusOfUnion" (formula "22") (term "1,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,0,0,1,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,0,0,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,1,1,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,1,0,1"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,1,0,1,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,1,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,1,0,0,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,0,0,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,0,0,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,0,1,0,0,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "24") (term "1,1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "4") (term "1,1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0"))
                                 (rule "distributeIntersection_2" (formula "19") (term "1,0"))
                                 (rule "setMinusOfUnion" (formula "22") (term "1,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,0,0,1,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,0,0,1,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,1,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,1"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,1,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,0,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,0,0,0,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,0,0,0,1,0,0,0"))
                                 (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,0,0,1,0,0,0"))
                                 (rule "unionEqualsEmpty" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "unionEqualsEmpty" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                                 (rule "simplifySelectOfAnon" (formula "2"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")) (ifInst ""  (formula "8")))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0"))
                                 (rule "elementOfUnion" (formula "2") (term "1,0"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfSetMinus" (formula "2") (term "1,1,0"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_right_0"))
                                 (rule "applyEq" (formula "28") (term "1,0,0,0,1,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "1,1,1,0,0,0") (ifseqformula "2"))
                                 (rule "simplifySelectOfAnon" (formula "2"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")) (ifInst ""  (formula "7")))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "applyEqReverse" (formula "28") (term "1,0,0,0,1,0,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "28") (term "1,1,1,0,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "1,0"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,1,0"))
                                 (rule "elementOfSetMinus" (formula "2") (term "1,1,0"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_left_0"))
                                 (rule "applyEq" (formula "27") (term "1,0,0,0,0,0,0") (ifseqformula "2"))
                                 (rule "simplifySelectOfAnon" (formula "2"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")) (ifInst ""  (formula "6")))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "applyEqReverse" (formula "27") (term "1,0,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "0"))
                                 (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "2") (term "1,0"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfSetMinus" (formula "2") (term "1,1,0"))
                                 (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "pullOutSelect" (formula "25") (term "0,0,0,1,0,0,0") (inst "selectSK=Tree_heightVariant_1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                 (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "26") (term "0,0,0,0,0,0") (inst "selectSK=Tree_heightVariant_2"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                 (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                                 (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "commuteUnion" (formula "23") (term "1,1,0"))
                                 (rule "commuteIntersection" (formula "20") (term "0"))
                                 (rule "commuteIntersection" (formula "19") (term "0"))
                                 (rule "limit_Tree_footprint" (formula "25") (term "1"))
                                 (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "2,1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "disjointAllFields" (formula "2") (term "1,1,0,0,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "2,1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,1,1,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "commuteUnion" (formula "28") (term "1,1,1,0,0,0,1,0,0"))
                                 (rule "commuteUnion" (formula "28") (term "1,1,1,0,0,0,1,0"))
                                 (rule "commuteUnion" (formula "4") (term "1,1,1,0,0"))
                                 (rule "commuteUnion" (formula "24") (term "1,1,0,0"))
                                 (rule "commuteUnion" (formula "28") (term "1,1,1,0,1,0,1"))
                                 (rule "commuteUnion" (formula "28") (term "1,1,1,0,1,0,1,0,1,0,0,0"))
                                 (rule "commuteUnion" (formula "26") (term "1,1,1,0,0"))
                                 (rule "commuteUnion" (formula "28") (term "1,1,1,0,1,1,0,0,0"))
                                 (rule "commuteUnion" (formula "28") (term "1,1,1,0,1,0,0,0,0"))
                                 (rule "limit_java_lang_Object__inv_" (formula "13"))
                                 (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "limit_Tree_footprint" (formula "4") (term "1"))
                                 (rule "applyEq" (formula "30") (term "0,1,1,1,1,0,0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "30") (term "0,1,1,1,1,0,1,0,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "0,1,1,1,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "30") (term "0,1,1,1,1,0,1,1,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "3") (term "2,0,1,0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "30") (term "0,1,1,1,1,0,1,0,1,0,1,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "28") (term "0,1,1,1,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "2") (term "2,1,0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "30") (term "0,1,1,1,1,0,1,0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "30") (term "0,1,1,1,1,0,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "commuteUnion" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                 (rule "commuteUnion" (formula "30") (term "1,1,1,0,1,0,1"))
                                 (rule "commuteUnion" (formula "5") (term "1,1,1,0,0"))
                                 (rule "commuteUnion" (formula "30") (term "1,1,1,0,1,1,0,0,0"))
                                 (rule "commuteUnion" (formula "26") (term "1,1,0,0"))
                                 (rule "commuteUnion" (formula "30") (term "1,1,1,0,1,0,1,0,1,0,0,0"))
                                 (rule "commuteUnion" (formula "28") (term "1,1,1,0,0"))
                                 (rule "commuteUnion" (formula "30") (term "1,1,1,0,1,0,0,0,0"))
                                 (rule "commuteUnion" (formula "30") (term "1,1,1,0,0,0,1,0,0"))
                                 (rule "limit_Tree_footprint" (formula "30") (term "1,0,1"))
                                 (rule "limit_Tree_footprint" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                 (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                 (rule "associativeLawUnion" (formula "28") (term "1,1,0"))
                                 (rule "commute_and" (formula "32") (term "0,0,0,0"))
                                 (rule "commute_and_2" (formula "32") (term "0,0,0"))
                                 (rule "equalityToElementOfRight" (formula "30") (inst "ov=ov") (inst "fv=fv"))
                                 (rule "allRight" (formula "30") (inst "sk=ov_0"))
                                 (rule "allRight" (formula "30") (inst "sk=fv_0"))
                                 (rule "equiv_right" (formula "30"))
                                 (branch "Case '->'"
                                    (rule "equalityToElementOfRight" (formula "29") (inst "ov=ov") (inst "fv=fv"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "allRight" (formula "29") (inst "sk=ov_1"))
                                    (rule "allRight" (formula "29") (inst "sk=fv_1"))
                                    (rule "notRight" (formula "29"))
                                    (rule "elementOfIntersect" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "elementOfSetMinus" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "elementOfSetMinus" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "elementOfUnion" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "elementOfUnion" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "27"))
                                    (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "26"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (rule "orRight" (formula "34"))
                                    (rule "elementOfSingleton" (formula "34"))
                                    (rule "elementOfSetMinus" (formula "32"))
                                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "29")))
                                    (rule "false_right" (formula "32"))
                                    (rule "elementOfUnion" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "elementOfUnion" (formula "35"))
                                    (rule "orRight" (formula "35"))
                                    (rule "elementOfSingleton" (formula "35"))
                                    (rule "elementOfSetMinus" (formula "32"))
                                    (rule "elementOfSetMinus" (formula "33"))
                                    (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "notRight" (formula "33"))
                                    (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "elementOfUnion" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "1"))
                                    (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfUnion" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "29"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "close" (formula "31") (ifseqformula "1"))
                                 )
                                 (branch "Case '<-'"
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "26"))
                                    (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "25"))
                                    (rule "equalityToElementOfRight" (formula "33") (inst "ov=ov") (inst "fv=fv"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "allRight" (formula "33") (inst "sk=ov_1"))
                                    (rule "allRight" (formula "33") (inst "sk=fv_1"))
                                    (rule "notRight" (formula "33"))
                                    (rule "elementOfIntersect" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "elementOfSetMinus" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "elementOfSetMinus" (formula "1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "elementOfUnion" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "elementOfUnion" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "27"))
                                    (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "26"))
                                    (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (rule "orRight" (formula "34"))
                                    (rule "elementOfSingleton" (formula "34"))
                                    (rule "elementOfUnion" (formula "33"))
                                    (rule "orRight" (formula "33"))
                                    (rule "elementOfSetMinus" (formula "32"))
                                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                                    (rule "false_right" (formula "32"))
                                    (rule "elementOfUnion" (formula "35"))
                                    (rule "orRight" (formula "35"))
                                    (rule "elementOfSingleton" (formula "35"))
                                    (rule "elementOfSetMinus" (formula "33"))
                                    (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "notRight" (formula "33"))
                                    (rule "elementOfSetMinus" (formula "33"))
                                    (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "elementOfUnion" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "1"))
                                    (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfUnion" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "29"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "close" (formula "33") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "unlimit_java_lang_Object__inv_" (formula "10") (term "1,1,1,0,0,0") (userinteraction))
                           (rule "Class_invariant_axiom_for_Tree" (formula "10") (term "1,1,1,0,0,0") (inst "k=k") (inst "k_0=k_0") (ifseqformula "12") (userinteraction))
                            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "11"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "14"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,0,0,0,0,0"))
                           (rule "eqSymm" (formula "10") (term "0,0"))
                           (rule "eqSymm" (formula "15") (term "0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "4") (term "0,1,1,0,1,1,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "3") (term "0,1,1,0,1,1,0,0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                           (rule "replace_known_right" (formula "1") (term "0,1,1,0,1,1,0,0,1") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                           (rule "replace_known_left" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "10")))
                           (rule "disjointDefinition" (formula "24") (term "1"))
                           (rule "disjointDefinition" (formula "12") (term "1,0,1"))
                           (rule "disjointDefinition" (formula "14"))
                           (rule "disjointDefinition" (formula "21") (term "1"))
                           (rule "disjointDefinition" (formula "18") (term "1,0,1"))
                           (rule "disjointDefinition" (formula "17") (term "1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                           (rule "disjointDefinition" (formula "29") (term "1,1"))
                           (rule "disjointDefinition" (formula "29") (term "1,0,1,0,0,0,0"))
                           (rule "measuredByCheck" (formula "25") (ifseqformula "9"))
                           (rule "disjointDefinition" (formula "29") (term "1,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "16"))
                           (rule "add_zero_right" (formula "16") (term "0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                           (rule "precOfInt" (formula "25"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                           (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_leqRight" (formula "25"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1"))
                           (rule "polySimp_rightDist" (formula "14") (term "1"))
                           (rule "mul_literals" (formula "14") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "closeFalse" (formula "17"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
                        (rule "closeTrue" (formula "13"))
                     )
                  )
               )
            )
            (branch "CUT: self.left = null ∨ (self.left@heap).footprint() @heap[anon( allLocs ∖ self.* ∪ if (self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if (self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if (self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if (self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] = self.left.footprint() FALSE"
                (builtin "Use Dependency Contract" (formula "10") (term "0,1") (ifInst ""  (formula "10") (term "1,1")) (contract "Tree[Tree::footprint()].JML accessible clause.0") (userinteraction))
               (rule "cut_direct" (formula "11") (term "0") (userinteraction))
               (branch "CUT: self.left = null TRUE"
                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                  (rule "closeTrue" (formula "12"))
               )
               (branch "CUT: self.left = null FALSE"
                  (rule "unlimit_java_lang_Object__inv_" (formula "9") (term "1,1,1,0,0,0,0") (userinteraction))
                  (rule "impLeft" (formula "10"))
                  (branch "Case 1"
                     (rule "andRight" (formula "10"))
                     (branch "Case 1"
                        (rule "andRight" (formula "10"))
                        (branch "Case 1"
                           (rule "andRight" (formula "10"))
                           (branch "Case 1"
                              (rule "andRight" (formula "10"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "10"))
                                 (branch "Case 1"
                                    (rule "notRight" (formula "10"))
                                    (rule "close" (formula "11") (ifseqformula "1"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                    (rule "referencedObjectIsCreatedRight" (formula "10") (ifseqformula "11"))
                                    (rule "close" (formula "10") (ifseqformula "4"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "10"))
                                 (branch "Case 1"
                                    (rule "close" (formula "10") (ifseqformula "4"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                                    (rule "wellFormedAnon" (formula "10"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "eqSymm" (formula "22") (term "0,0,0,0,0,0,0,0"))
                                    (rule "eqSymm" (formula "9") (term "0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,1,0,1,1,1,0,0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,1,1,1,0,0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,1,1,1,0,0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")))
                                    (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "4")))
                                    (rule "closeTrue" (formula "18"))
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")))
                              (rule "closeFalse" (formula "9"))
                           )
                        )
                        (branch "Case 2"
                           (rule "cut_direct" (formula "9") (term "1,0,1") (userinteraction))
                           (branch "CUT: self.right = null TRUE"
                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")))
                               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")))
                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "9")))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "replace_known_left" (formula "1") (term "0,1,1,1,1,0,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "9")) (ifInst ""  (formula "17")))
                              (rule "replace_known_left" (formula "16") (term "0,1,1,0,1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "9")))
                              (rule "replace_known_right" (formula "2") (term "0,0,1,0,1,1,0,0") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "9")) (ifInst ""  (formula "17")) (ifInst ""  (formula "9")))
                              (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,1,0,0") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "9")) (ifInst ""  (formula "17")) (ifInst ""  (formula "9")))
                              (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "disjointDefinition" (formula "12"))
                              (rule "disjointDefinition" (formula "16"))
                              (rule "disjointDefinition" (formula "20") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "add_zero_right" (formula "10") (term "0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "2") (term "1") (ifseqformula "9"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "mul_literals" (formula "11") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "18") (term "1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "20") (term "1,1,0,0,0,1"))
                              (rule "setMinusOfUnion" (formula "20") (term "1,1,0,0,0,1,0"))
                              (rule "setMinusOfUnion" (formula "20") (term "1,1,0,1,0,0"))
                              (rule "setMinusOfUnion" (formula "16") (term "1,0,0"))
                              (rule "setMinusOfUnion" (formula "20") (term "1,1,0,1,0,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "20") (term "1,1,0,1,0,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "20") (term "1,1,0,0,0,0,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                              (rule "eqSymm" (formula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSetMinus" (formula "1") (term "1,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_right_0"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "6")))
                              (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                              (rule "ifEqualsNull" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "1,1") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "1"))
                              (rule "elementOfSetMinus" (formula "1") (term "1,0,0,0"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,1,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSetMinus" (formula "1") (term "1,1"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_left_0"))
                              (rule "applyEq" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "simplifySelectOfAnon" (formula "2"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")) (ifInst ""  (formula "6")))
                              (rule "eqSymm" (formula "3"))
                              (rule "applyEqReverse" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfUnion" (formula "2") (term "0"))
                              (rule "elementOfSetMinus" (formula "2") (term "1,0"))
                              (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "pullOutSelect" (formula "18") (term "0,0,0,0,0") (inst "selectSK=Tree_heightVariant_1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSetMinus" (formula "1") (term "1,0,0,0,0"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,1,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commuteUnion" (formula "15") (term "1,1,0"))
                              (rule "limit_Tree_footprint" (formula "17") (term "1"))
                              (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "2,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "20") (term "0,1,1,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "20") (term "0,1,1,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "0,1,1,0,0") (ifseqformula "1"))
                              (rule "limit_java_lang_Object__inv_" (formula "13"))
                              (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "limit_Tree_footprint" (formula "19") (term "0"))
                              (rule "commute_and" (formula "22") (term "0,0,0"))
                              (rule "commute_and_2" (formula "22") (term "0,0"))
                              (rule "equalityToElementOfRight" (formula "20") (inst "ov=ov") (inst "fv=fv"))
                              (rule "allRight" (formula "20") (inst "sk=ov_0"))
                              (rule "allRight" (formula "20") (inst "sk=fv_0"))
                              (rule "equiv_right" (formula "20"))
                              (branch "Case '->'"
                                 (rule "equalityToElementOfRight" (formula "19") (inst "ov=ov") (inst "fv=fv"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "allRight" (formula "19") (inst "sk=ov_1"))
                                 (rule "allRight" (formula "19") (inst "sk=fv_1"))
                                 (rule "notRight" (formula "19"))
                                 (rule "elementOfIntersect" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "elementOfSetMinus" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "elementOfSetMinus" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "elementOfUnion" (formula "21"))
                                 (rule "orRight" (formula "21"))
                                 (rule "elementOfUnion" (formula "20"))
                                 (rule "orRight" (formula "20"))
                                 (rule "elementOfSingleton" (formula "20"))
                                 (rule "elementOfSetMinus" (formula "23"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "notRight" (formula "23"))
                                 (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "elementOfSetMinus" (formula "24"))
                                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")) (ifInst ""  (formula "21")))
                                 (rule "false_right" (formula "24"))
                                 (rule "elementOfUnion" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "elementOfUnion" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "false_right" (formula "23"))
                                 (rule "elementOfUnion" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "elementOfSingleton" (formula "23"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeTrue" (formula "23"))
                              )
                              (branch "Case '<-'"
                                 (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "equalityToElementOfRight" (formula "20") (inst "ov=ov") (inst "fv=fv"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "allRight" (formula "20") (inst "sk=ov_1"))
                                 (rule "allRight" (formula "20") (inst "sk=fv_1"))
                                 (rule "notRight" (formula "20"))
                                 (rule "elementOfIntersect" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "elementOfSetMinus" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "elementOfSetMinus" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "elementOfUnion" (formula "21"))
                                 (rule "orRight" (formula "21"))
                                 (rule "elementOfUnion" (formula "20"))
                                 (rule "orRight" (formula "20"))
                                 (rule "elementOfSingleton" (formula "20"))
                                 (rule "elementOfSetMinus" (formula "23"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "notRight" (formula "23"))
                                 (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "elementOfSetMinus" (formula "24"))
                                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")) (ifInst ""  (formula "21")))
                                 (rule "false_right" (formula "24"))
                                 (rule "elementOfUnion" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "elementOfUnion" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "false_right" (formula "23"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "23") (term "1") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                 (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                 (rule "elementOfUnion" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "elementOfSingleton" (formula "23"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeTrue" (formula "23"))
                              )
                           )
                           (branch "CUT: self.right = null FALSE"
                              (rule "Definition_axiom_for_footprint_in_Tree" (formula "9") (term "1,1,1") (ifseqformula "10") (userinteraction))
                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")))
                               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")))
                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "10")))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "11"))
                              (rule "notLeft" (formula "9"))
                              (rule "eqSymm" (formula "25") (term "0,0,0,0,0,0,0"))
                              (rule "eqSymm" (formula "19"))
                              (rule "replace_known_right" (formula "2") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")) (ifInst ""  (formula "20")) (ifInst ""  (formula "22")))
                              (rule "replace_known_right" (formula "3") (term "0,1,0,1,1,1,0,0") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
                              (rule "replace_known_right" (formula "21") (term "0,1,1,1,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "22")) (ifInst ""  (formula "20")) (ifInst ""  (formula "22")))
                              (rule "replace_known_right" (formula "1") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "20")) (ifInst ""  (formula "22")))
                              (rule "replace_known_left" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "19")))
                              (rule "disjointDefinition" (formula "18"))
                              (rule "disjointDefinition" (formula "14"))
                              (rule "disjointDefinition" (formula "11"))
                              (rule "disjointDefinition" (formula "21"))
                              (rule "disjointDefinition" (formula "25") (term "1"))
                              (rule "disjointDefinition" (formula "25") (term "1,0,1,0,0,0"))
                              (rule "disjointDefinition" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "9"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1"))
                              (rule "mul_literals" (formula "13") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "mul_literals" (formula "10") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "23") (term "1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "3") (term "1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,1,1,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,1,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,1,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,0,0,1,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,0,0,1,0,0"))
                              (rule "distributeIntersection" (formula "18") (term "0"))
                              (rule "setMinusOfUnion" (formula "21") (term "1,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,0,0,1"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,1,0,1"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,1,0,1,0,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,1,1,0,1,0,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,0,0,0,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,1,0,0,0,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "23") (term "1,1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "3") (term "1,1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,1,0,1,1,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,1,0,1,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,1,0,1,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,1,0,0,0,1,0"))
                              (rule "setMinusOfUnion" (formula "25") (term "1,1,1,0,0,0,1,0,0"))
                              (rule "unionEqualsEmpty" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "setMinusOfUnion" (formula "22") (term "1,1,0,0"))
                              (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,0,0,1"))
                              (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,1"))
                              (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,1,0,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,1,0,1,0,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,0,0,0,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,0,0,1,0,0,0"))
                              (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "setMinusOfUnion" (formula "26") (term "1,1,1,0,0,0,0,0,0,0,0"))
                              (rule "distributeIntersection" (formula "19") (term "0"))
                              (rule "unionEqualsEmpty" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_right_0"))
                              (rule "applyEq" (formula "28") (term "1,1,0,1,0,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "28") (term "1,1,1,0,0,0") (ifseqformula "2"))
                              (rule "simplifySelectOfAnon" (formula "2"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")) (ifInst ""  (formula "7")))
                              (rule "eqSymm" (formula "3"))
                              (rule "applyEqReverse" (formula "28") (term "1,0,0,0,1,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "28") (term "1,1,0,1,0,1,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "28") (term "1,1,1,0,0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfUnion" (formula "2") (term "0"))
                              (rule "elementOfUnion" (formula "2") (term "1,0"))
                              (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfSetMinus" (formula "2") (term "1,1,0"))
                              (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_left_0"))
                              (rule "applyEq" (formula "27") (term "1,0,0,0,0,0,0,0") (ifseqformula "2"))
                              (rule "simplifySelectOfAnon" (formula "2"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")) (ifInst ""  (formula "6")))
                              (rule "eqSymm" (formula "3"))
                              (rule "applyEqReverse" (formula "27") (term "1,0,0,0,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfUnion" (formula "2") (term "0"))
                              (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfUnion" (formula "2") (term "1,0"))
                              (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "5")))
                              (rule "eqSymm" (formula "2"))
                              (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "1,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "pullOutSelect" (formula "24") (term "0,0,0,1,0,0,0") (inst "selectSK=Tree_heightVariant_1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,0,0"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                              (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                              (rule "pullOutSelect" (formula "25") (term "0,0,0,0,0,0,0") (inst "selectSK=Tree_heightVariant_2"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                              (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0,0"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "commuteUnion" (formula "22") (term "1,1,0"))
                              (rule "commuteIntersection" (formula "17") (term "0"))
                              (rule "limit_Tree_footprint" (formula "24") (term "1"))
                              (rule "applyEq" (formula "3") (term "2,0,1,0,0,0,0") (ifseqformula "1"))
                              (rule "disjointAllFields" (formula "3") (term "0,1,0,0,0,0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "0,0,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,1,0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "2,0,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,1,1,1,0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "0,0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "limit_java_lang_Object__inv_" (formula "12"))
                              (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "limit_Tree_footprint" (formula "15") (term "1,0"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,1,0,1,0,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "2") (term "2,1,1,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,1,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,1,0,1") (ifseqformula "15"))
                              (rule "applyEq" (formula "27") (term "0,1,1,1,1,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,0,0,1,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,1,0,1,0,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,0,0,1") (ifseqformula "15"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,1,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "3") (term "2,1,0,0,0,0") (ifseqformula "15"))
                              (rule "limit_Tree_footprint" (formula "29") (term "1,0,1,0,1,0,0,0"))
                              (rule "limit_Tree_footprint" (formula "28") (term "0"))
                              (rule "ifthenelse_split" (formula "23") (term "1,0"))
                              (branch "self.right.left = null TRUE"
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "ifthenelse_split" (formula "24") (term "1,0"))
                                 (branch "self.right.right = null TRUE"
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                    (rule "associativeLawUnion" (formula "27") (term "1,1,0"))
                                    (rule "commute_and" (formula "31") (term "0,0,0,0,0"))
                                    (rule "commute_and_2" (formula "31") (term "0,0,0,0"))
                                    (rule "commute_and_2" (formula "31") (term "0,0,0"))
                                    (rule "equalityToElementOfRight" (formula "29") (inst "ov=ov") (inst "fv=fv"))
                                    (rule "allRight" (formula "29") (inst "sk=ov_0"))
                                    (rule "allRight" (formula "29") (inst "sk=fv_0"))
                                    (rule "equiv_right" (formula "29"))
                                    (branch "Case '->'"
                                       (rule "associativeLawUnion" (formula "28") (term "1,0,0"))
                                       (rule "equalityToElementOfRight" (formula "28") (inst "ov=ov") (inst "fv=fv"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "allRight" (formula "28") (inst "sk=ov_1"))
                                       (rule "allRight" (formula "28") (inst "sk=fv_1"))
                                       (rule "notRight" (formula "28"))
                                       (rule "elementOfIntersect" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "elementOfUnion" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "elementOfUnion" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "elementOfUnion" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "elementOfSetMinus" (formula "31"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "elementOfUnion" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "elementOfSingleton" (formula "29"))
                                       (rule "elementOfSetMinus" (formula "33"))
                                       (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "notRight" (formula "33"))
                                       (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "elementOfSetMinus" (formula "33"))
                                        (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")) (ifInst ""  (formula "29")))
                                       (rule "false_right" (formula "33"))
                                       (rule "elementOfUnion" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "elementOfSingleton" (formula "31"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1"))
                                       (rule "close" (formula "31") (ifseqformula "1"))
                                    )
                                    (branch "Case '<-'"
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "associativeLawUnion" (formula "30") (term "1,0,0"))
                                       (rule "equalityToElementOfRight" (formula "30") (inst "ov=ov") (inst "fv=fv"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "allRight" (formula "30") (inst "sk=ov_1"))
                                       (rule "allRight" (formula "30") (inst "sk=fv_1"))
                                       (rule "notRight" (formula "30"))
                                       (rule "elementOfIntersect" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfUnion" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "elementOfUnion" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "elementOfUnion" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "elementOfSingleton" (formula "31"))
                                       (rule "elementOfSetMinus" (formula "30"))
                                       (rule "elementOfUnion" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "elementOfUnion" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "elementOfSingleton" (formula "33"))
                                       (rule "elementOfUnion" (formula "31") (term "0,1"))
                                       (rule "elementOfSingleton" (formula "31") (term "1,0,1"))
                                       (rule "replace_known_right" (formula "31") (term "0,1,0,1") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "elementOfSetMinus" (formula "29"))
                                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")))
                                       (rule "false_right" (formula "29"))
                                       (rule "elementOfSetMinus" (formula "29"))
                                       (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "notRight" (formula "29"))
                                       (rule "elementOfUnion" (formula "30") (term "0,1"))
                                       (rule "elementOfSingleton" (formula "30") (term "1,0,1"))
                                       (rule "replace_known_right" (formula "30") (term "1,0,1") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "elementOfSingleton" (formula "30") (term "0,1"))
                                       (rule "replace_known_right" (formula "30") (term "0,0,1") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "close" (formula "30") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "self.right.right = null FALSE"
                                    (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                    (rule "associativeLawUnion" (formula "28") (term "1,1,0"))
                                    (rule "commute_and" (formula "32") (term "0,0,0,0,0"))
                                    (rule "commute_and_2" (formula "32") (term "0,0,0,0"))
                                    (rule "commute_and_2" (formula "32") (term "0,0,0"))
                                    (rule "equalityToElementOfRight" (formula "30") (inst "ov=ov") (inst "fv=fv"))
                                    (rule "allRight" (formula "30") (inst "sk=ov_0"))
                                    (rule "allRight" (formula "30") (inst "sk=fv_0"))
                                    (rule "equiv_right" (formula "30"))
                                    (branch "Case '->'"
                                       (rule "associativeLawUnion" (formula "29") (term "1,0,0"))
                                       (rule "equalityToElementOfRight" (formula "29") (inst "ov=ov") (inst "fv=fv"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "allRight" (formula "29") (inst "sk=ov_1"))
                                       (rule "allRight" (formula "29") (inst "sk=fv_1"))
                                       (rule "notRight" (formula "29"))
                                       (rule "elementOfIntersect" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "elementOfUnion" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "elementOfUnion" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "elementOfUnion" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "26"))
                                       (rule "elementOfSetMinus" (formula "34"))
                                       (rule "elementOfUnion" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "elementOfSingleton" (formula "30"))
                                       (rule "elementOfSetMinus" (formula "34"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "notRight" (formula "34"))
                                       (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "elementOfSetMinus" (formula "34"))
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")) (ifInst ""  (formula "29")))
                                       (rule "false_right" (formula "34"))
                                       (rule "elementOfUnion" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "elementOfSingleton" (formula "32"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "close" (formula "30") (ifseqformula "1"))
                                    )
                                    (branch "Case '<-'"
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "25"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "associativeLawUnion" (formula "32") (term "1,0,0"))
                                       (rule "equalityToElementOfRight" (formula "32") (inst "ov=ov") (inst "fv=fv"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "allRight" (formula "32") (inst "sk=ov_1"))
                                       (rule "allRight" (formula "32") (inst "sk=fv_1"))
                                       (rule "notRight" (formula "32"))
                                       (rule "elementOfIntersect" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfUnion" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "elementOfUnion" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "26"))
                                       (rule "elementOfUnion" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "elementOfSingleton" (formula "32"))
                                       (rule "elementOfSetMinus" (formula "31"))
                                       (rule "elementOfUnion" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "elementOfUnion" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "elementOfSingleton" (formula "34"))
                                       (rule "elementOfUnion" (formula "32") (term "0,1"))
                                       (rule "elementOfSingleton" (formula "32") (term "1,0,1"))
                                       (rule "replace_known_right" (formula "32") (term "0,1,0,1") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "elementOfSetMinus" (formula "31"))
                                       (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "notRight" (formula "31"))
                                       (rule "elementOfSetMinus" (formula "31"))
                                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "1")) (ifInst ""  (formula "30")))
                                       (rule "false_right" (formula "31"))
                                       (rule "elementOfUnion" (formula "31") (term "0,1"))
                                       (rule "elementOfSingleton" (formula "31") (term "1,0,1"))
                                       (rule "replace_known_right" (formula "31") (term "1,0,1") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "elementOfSingleton" (formula "31") (term "0,1"))
                                       (rule "replace_known_right" (formula "31") (term "0,0,1") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "close" (formula "31") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch "self.right.left = null FALSE"
                                 (rule "ifthenelse_split" (formula "24") (term "1,0"))
                                 (branch "self.right.right = null TRUE"
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                    (rule "associativeLawUnion" (formula "28") (term "1,1,0"))
                                    (rule "commute_and" (formula "32") (term "0,0,0,0,0"))
                                    (rule "commute_and_2" (formula "32") (term "0,0,0,0"))
                                    (rule "commute_and_2" (formula "32") (term "0,0,0"))
                                    (rule "equalityToElementOfRight" (formula "30") (inst "ov=ov") (inst "fv=fv"))
                                    (rule "allRight" (formula "30") (inst "sk=ov_0"))
                                    (rule "allRight" (formula "30") (inst "sk=fv_0"))
                                    (rule "equiv_right" (formula "30"))
                                    (branch "Case '->'"
                                       (rule "associativeLawUnion" (formula "29") (term "1,0,0"))
                                       (rule "equalityToElementOfRight" (formula "29") (inst "ov=ov") (inst "fv=fv"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "allRight" (formula "29") (inst "sk=ov_1"))
                                       (rule "allRight" (formula "29") (inst "sk=fv_1"))
                                       (rule "notRight" (formula "29"))
                                       (rule "elementOfIntersect" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "elementOfUnion" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "elementOfUnion" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "elementOfUnion" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "25"))
                                       (rule "elementOfSetMinus" (formula "34"))
                                       (rule "elementOfUnion" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "elementOfSingleton" (formula "30"))
                                       (rule "elementOfSetMinus" (formula "34"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "notRight" (formula "34"))
                                       (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "elementOfSetMinus" (formula "34"))
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")) (ifInst ""  (formula "29")))
                                       (rule "false_right" (formula "34"))
                                       (rule "elementOfUnion" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "elementOfSingleton" (formula "32"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "close" (formula "30") (ifseqformula "1"))
                                    )
                                    (branch "Case '<-'"
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "24"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "associativeLawUnion" (formula "32") (term "1,0,0"))
                                       (rule "equalityToElementOfRight" (formula "32") (inst "ov=ov") (inst "fv=fv"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "allRight" (formula "32") (inst "sk=ov_1"))
                                       (rule "allRight" (formula "32") (inst "sk=fv_1"))
                                       (rule "notRight" (formula "32"))
                                       (rule "elementOfIntersect" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfUnion" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "elementOfUnion" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "25"))
                                       (rule "elementOfUnion" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "elementOfSingleton" (formula "32"))
                                       (rule "elementOfSetMinus" (formula "31"))
                                       (rule "elementOfUnion" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "elementOfUnion" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "elementOfSingleton" (formula "34"))
                                       (rule "elementOfUnion" (formula "32") (term "0,1"))
                                       (rule "elementOfSingleton" (formula "32") (term "1,0,1"))
                                       (rule "replace_known_right" (formula "32") (term "0,1,0,1") (ifseqformula "28"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "elementOfSetMinus" (formula "31"))
                                       (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "notRight" (formula "31"))
                                       (rule "elementOfSetMinus" (formula "31"))
                                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "1")) (ifInst ""  (formula "30")))
                                       (rule "false_right" (formula "31"))
                                       (rule "elementOfUnion" (formula "31") (term "0,1"))
                                       (rule "elementOfSingleton" (formula "31") (term "1,0,1"))
                                       (rule "replace_known_right" (formula "31") (term "1,0,1") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "elementOfSingleton" (formula "31") (term "0,1"))
                                       (rule "replace_known_right" (formula "31") (term "0,0,1") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "close" (formula "31") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "self.right.right = null FALSE"
                                    (rule "shift_paren_or" (formula "4") (term "0,0,0,0"))
                                    (rule "associativeLawUnion" (formula "29") (term "1,1,0"))
                                    (rule "commute_and" (formula "33") (term "0,0,0,0,0"))
                                    (rule "commute_and_2" (formula "33") (term "0,0,0,0"))
                                    (rule "commute_and_2" (formula "33") (term "0,0,0"))
                                    (rule "equalityToElementOfRight" (formula "31") (inst "ov=ov") (inst "fv=fv"))
                                    (rule "allRight" (formula "31") (inst "sk=ov_0"))
                                    (rule "allRight" (formula "31") (inst "sk=fv_0"))
                                    (rule "equiv_right" (formula "31"))
                                    (branch "Case '->'"
                                       (rule "equalityToElementOfRight" (formula "30") (inst "ov=ov") (inst "fv=fv"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "allRight" (formula "30") (inst "sk=ov_1"))
                                       (rule "allRight" (formula "30") (inst "sk=fv_1"))
                                       (rule "notRight" (formula "30"))
                                       (rule "elementOfIntersect" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "elementOfUnion" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "elementOfUnion" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "elementOfSetMinus" (formula "29"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "26"))
                                       (rule "elementOfUnion" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "25"))
                                       (rule "elementOfUnion" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "elementOfSingleton" (formula "31"))
                                       (rule "elementOfSetMinus" (formula "35"))
                                       (rule "elementOfSetMinus" (formula "34"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "notRight" (formula "34"))
                                       (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "elementOfUnion" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "elementOfSingleton" (formula "33"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1"))
                                       (rule "close" (formula "33") (ifseqformula "1"))
                                    )
                                    (branch "Case '<-'"
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "25"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "24"))
                                       (rule "equalityToElementOfRight" (formula "34") (inst "ov=ov") (inst "fv=fv"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "allRight" (formula "34") (inst "sk=ov_1"))
                                       (rule "allRight" (formula "34") (inst "sk=fv_1"))
                                       (rule "notRight" (formula "34"))
                                       (rule "elementOfIntersect" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "elementOfUnion" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "elementOfUnion" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "elementOfUnion" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "elementOfSetMinus" (formula "30"))
                                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "27")))
                                       (rule "false_right" (formula "30"))
                                       (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "25"))
                                       (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "26"))
                                       (rule "elementOfUnion" (formula "31"))
                                       (rule "orRight" (formula "31"))
                                       (rule "elementOfSingleton" (formula "31"))
                                       (rule "elementOfSetMinus" (formula "35"))
                                       (rule "elementOfSetMinus" (formula "34"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "notRight" (formula "34"))
                                       (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "elementOfUnion" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "elementOfSingleton" (formula "33"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfUnion" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "1"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "close" (formula "32") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "Class_invariant_axiom_for_Tree" (formula "9") (term "1,1,1,0,0,0,0") (inst "k=k") (inst "k_0=k_0") (ifseqformula "11") (userinteraction))
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "eqSymm" (formula "28") (term "0,0,0,0,0,0,0,0"))
                        (rule "eqSymm" (formula "9") (term "0,0"))
                        (rule "eqSymm" (formula "13") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,1,0,1,1,1,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                        (rule "replace_known_right" (formula "2") (term "0,0,1,0,1,1,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                        (rule "replace_known_right" (formula "3") (term "0,1,0,1,1,1,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,0,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "10")))
                        (rule "disjointDefinition" (formula "23") (term "1"))
                        (rule "disjointDefinition" (formula "20") (term "1,0,1"))
                        (rule "disjointDefinition" (formula "12"))
                        (rule "disjointDefinition" (formula "19") (term "1"))
                        (rule "disjointDefinition" (formula "16") (term "1,0,1"))
                        (rule "disjointDefinition" (formula "15") (term "1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1"))
                        (rule "disjointDefinition" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "disjointDefinition" (formula "28") (term "1,0,1,1,0,0,0"))
                        (rule "disjointDefinition" (formula "28") (term "1,1"))
                        (rule "measuredByCheck" (formula "24") (ifseqformula "8"))
                        (rule "inEqSimp_ltToLeq" (formula "10"))
                        (rule "add_zero_right" (formula "10") (term "0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14"))
                        (rule "add_zero_right" (formula "14") (term "0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                        (rule "precOfInt" (formula "24"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                        (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_leqRight" (formula "24"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1"))
                        (rule "mul_literals" (formula "12") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
                      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "10")))
                     (rule "closeTrue" (formula "12"))
                  )
               )
            )
         )
         (branch "Assume self.heightVariant@heap[anon( allLocs ∖ self.* ∪ if ( self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if ( self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if ( self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if ( self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] != self.heightVariant"
             (builtin "One Step Simplification" (formula "9"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "notLeft" (formula "1"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "eqSymm" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
            (rule "eqSymm" (formula "8") (term "0,0,0"))
            (rule "replace_known_left" (formula "17") (term "0,0,0,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "disjointDefinition" (formula "14") (term "1"))
            (rule "disjointDefinition" (formula "11") (term "1,0,1"))
            (rule "disjointDefinition" (formula "10") (term "1,0,1"))
            (rule "disjointDefinition" (formula "17") (term "1,0,1,1,0,0,0"))
            (rule "disjointDefinition" (formula "17") (term "1,1"))
            (rule "disjointDefinition" (formula "17") (term "1,0,1,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "9"))
            (rule "add_zero_right" (formula "9") (term "0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
            (rule "polySimp_elimOne" (formula "9") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "2") (term "1,1,0,0"))
            (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
            (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,1,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,1,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,0,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,1,0,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,1,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,1,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,1,0,1,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,0,1,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,0,1,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,1,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,0,0,1,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,1,0,1,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,0,1,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,1,0,1,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,0,0,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,0,1,1,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,1,0,0,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "2") (term "1,1,1,0,0"))
            (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0"))
            (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,1,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,1,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,0,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,1,0,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,1,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,1,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,1,0,1,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,0,1,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,0,1,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,1,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,0,0,1,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,1,0,1,1"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,0,1,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,1,0,1,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,0,1,1,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,0,0,0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,0,0,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,0,1,1,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,1,0,0,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,0,1,1,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,1,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
            (rule "setMinusOfUnion" (formula "17") (term "1,1,1,0,0,0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0,0"))
            (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_left_0"))
            (rule "applyEq" (formula "18") (term "1,0,0,0,1,1,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "18") (term "1,1,1,1,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "18") (term "1,1,0,1,0,1,1,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "18") (term "1,0,0,1,1") (ifseqformula "2"))
            (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "18") (term "0,0,0,1") (ifseqformula "2"))
            (rule "simplifySelectOfAnon" (formula "2"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")) (ifInst ""  (formula "6")))
            (rule "eqSymm" (formula "3"))
            (rule "applyEqReverse" (formula "18") (term "1,0,0,1,1") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "18") (term "1,1,0,1,0,1,1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "18") (term "1,0,0,0,1,1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "applyEqReverse" (formula "18") (term "0,0,0,1") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "18") (term "0,0,1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "18") (term "1,1,1,1,0,0,0,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "elementOfSetMinus" (formula "2") (term "0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfUnion" (formula "2") (term "0"))
            (rule "elementOfSetMinus" (formula "2") (term "0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_right_0"))
            (rule "applyEq" (formula "18") (term "1,1,0,1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "18") (term "0,1,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "18") (term "1,0,0,0,1,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "18") (term "1,1,1,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "18") (term "0,0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "18") (term "1,1,0,1,0,1,1,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "6")))
            (rule "eqSymm" (formula "2"))
            (rule "applyEqReverse" (formula "18") (term "0,1,0,1") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "18") (term "1,1,1,1,0,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "18") (term "1,1,0,1,0,1,1,0,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "18") (term "1,1,0,1,1") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "18") (term "0,0,1,0,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "18") (term "1,0,0,0,1,1,0,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "elementOfUnion" (formula "2") (term "0,0,0"))
            (rule "elementOfUnion" (formula "2") (term "1,0"))
            (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=Tree_heightVariant_0"))
            (rule "applyEq" (formula "18") (term "1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "18") (term "0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "18") (term "1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "6")))
            (rule "eqSymm" (formula "16"))
            (rule "elementOfSetMinus" (formula "2") (term "0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSetMinus" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "elementOfUnion" (formula "2") (term "0"))
            (rule "elementOfSetMinus" (formula "3") (term "0,1,0"))
            (rule "elementOfSetMinus" (formula "3") (term "1,1,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfSetMinus" (formula "2") (term "0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0"))
            (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0"))
            (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "2") (term "1,0"))
            (rule "elementOfUnion" (formula "2") (term "0,0,0"))
            (rule "elementOfUnion" (formula "3") (term "0,0,1,0,1,0"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0,1,0,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfUnion" (formula "1") (term "1,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
            (rule "elementOfSetMinus" (formula "2") (term "1,1,0"))
            (rule "elementOfSetMinus" (formula "2") (term "0,1,0"))
            (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
            (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfUnion" (formula "3") (term "0,0,1,1,1,0"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0,1,1,1,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0"))
            (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0"))
            (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0"))
            (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0"))
            (rule "elementOfUnion" (formula "2") (term "0,0,1,0,1,0"))
            (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,0,1,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "2") (term "0,0,1,1,1,0"))
            (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,1,1,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "18") (term "0,0,0,1,1,0,0,0,0") (inst "selectSK=Tree_heightVariant_1"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
            (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
            (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "19") (term "0,0,0,1,1,0,0,0") (inst "selectSK=Tree_heightVariant_2"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
            (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
            (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
            (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "ifthenelse_split" (formula "20") (term "0,0,1,1,1,0,1,0,1,0,1,1,0,0,0,0"))
            (branch "self.left = null TRUE"
                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
               (rule "replace_known_left" (formula "3") (term "0,2,0,0,1,1,1,0,0,0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
               (rule "replace_known_left" (formula "4") (term "0,2,0,0,1,1,1,0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
               (rule "replace_known_left" (formula "2") (term "0,2,0,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
               (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "replace_known_left" (formula "5") (term "0,2,0,0,1,0,1,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
               (rule "replace_known_left" (formula "6") (term "0,2,0,0,1,1,1,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
               (rule "ifthenelse_negated" (formula "3") (term "0"))
               (rule "applyEq" (formula "3") (term "0,0,1,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "0,0,1,1,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "3") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
               (rule "cut_direct" (formula "13") (term "0"))
               (branch "CUT: self.right = null TRUE"
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
                  (rule "replace_known_left" (formula "4") (term "0,2,0,1,0,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")))
                  (rule "closeFalse" (formula "4"))
               )
               (branch "CUT: self.right = null FALSE"
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "13"))
                  (rule "replace_known_right" (formula "3") (term "0,2,0,1,0,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "18")))
                  (rule "replace_known_right" (formula "4") (term "0,2,0,1,0,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                  (rule "replace_known_right" (formula "2") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                  (rule "replace_known_right" (formula "5") (term "0,2,0,0,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                  (rule "replace_known_right" (formula "6") (term "0,2,0,1,1,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                  (rule "replace_known_right" (formula "21") (term "0,1,1,0,1,1,0,1,1,1,0,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                  (rule "elementOfSingleton" (formula "3") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfSingleton" (formula "4") (term "0,1,1,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "17")))
                  (rule "closeFalse" (formula "4"))
               )
            )
            (branch "self.left = null FALSE"
               (rule "replace_known_right" (formula "1") (term "0,2,0,0,1,0,0,0,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
               (rule "replace_known_right" (formula "3") (term "0,2,0,0,1,0,1,0,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
               (rule "replace_known_right" (formula "2") (term "0,2,0,0,1,0,1,0,0,0,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
               (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "replace_known_right" (formula "4") (term "0,2,0,0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "replace_known_right" (formula "5") (term "0,2,0,0,1,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "replace_known_right" (formula "23") (term "0,1,0,1,0,1,1,1,0,0,0,1,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "3") (term "0,0,1,0,1,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "elementOfSingleton" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfSingleton" (formula "4") (term "0,0,1,1,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "elementOfSingleton" (formula "5") (term "0,0,1,0,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,1,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "3") (term "0,0,1,1,1,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "elementOfSingleton" (formula "2") (term "0,0,1,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfSingleton" (formula "4") (term "0,0,1,0,1,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "elementOfSingleton" (formula "5") (term "0,0,1,1,1,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "cut_direct" (formula "16") (term "0"))
               (branch "CUT: self.right = null TRUE"
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "replace_known_left" (formula "3") (term "0,2,0,1,1,1,0,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "20")))
                  (rule "closeFalse" (formula "3"))
               )
               (branch "CUT: self.right = null FALSE"
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "replace_known_right" (formula "2") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                  (rule "replace_known_right" (formula "3") (term "0,2,0,1,0,1,0,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                  (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "replace_known_right" (formula "5") (term "0,2,0,1,1,1,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                  (rule "replace_known_right" (formula "4") (term "0,2,0,1,1,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                  (rule "replace_known_right" (formula "26") (term "0,1,1,1,1,1,1,0,0,0,1,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
                  (rule "elementOfSingleton" (formula "2") (term "0,1,1,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfSingleton" (formula "5") (term "0,1,0,1,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "elementOfSingleton" (formula "4") (term "0,1,0,1,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "3") (term "0,1,1,1,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "elementOfSingleton" (formula "2") (term "0,1,0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "elementOfSingleton" (formula "1") (term "0,1,0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")))
                  (rule "closeFalse" (formula "3"))
               )
            )
         )
      )
      (branch "Assume self.right@heap[anon( allLocs ∖ self.* ∪ if (self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if (self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if (self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if (self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] != self.right"
          (builtin "One Step Simplification" (formula "8"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "notLeft" (formula "1"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "eqSymm" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
         (rule "eqSymm" (formula "7") (term "0,0,0"))
         (rule "disjointDefinition" (formula "16") (term "1,1"))
         (rule "disjointDefinition" (formula "16") (term "1,0,1,1,0,0,0,0"))
         (rule "disjointDefinition" (formula "16") (term "1,0,1,1,0,0,0"))
         (rule "disjointDefinition" (formula "13") (term "1"))
         (rule "disjointDefinition" (formula "10") (term "1,0,1"))
         (rule "disjointDefinition" (formula "9") (term "1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "8"))
         (rule "add_zero_right" (formula "8") (term "0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "setMinusOfUnion" (formula "1") (term "1,1,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,1,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,1,0,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,1,0,0,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,0,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,1,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,1,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,1,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "14") (term "1,1,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,0,0,1,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,1,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,1,0,1,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,0,1,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,0,1,0,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,1,0,1,0,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,0,1,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,1,0,1,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,0,0,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,1,0,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,0,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,1,0,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "1") (term "1,1,1,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,1,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,1,0,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,0,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,1,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,1,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,1,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "14") (term "1,1,1,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,0,0,1,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,1,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,1,0,1,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,0,1,1"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,0,1,0,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,1,0,1,0,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,0,1,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,1,0,1,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,1,0,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,0,0,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,0,0,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,1,0,0,0,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0"))
         (rule "setMinusOfUnion" (formula "16") (term "1,1,1,0,0,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_left_0"))
         (rule "applyEq" (formula "17") (term "1,0,0,0,1,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "1,0,0,1,1") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "0,0,0,1") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "1,1,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "1,1,1,1,0,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
         (rule "eqSymm" (formula "2"))
         (rule "applyEqReverse" (formula "17") (term "1,0,0,1,1") (ifseqformula "2"))
         (rule "applyEqReverse" (formula "17") (term "0,0,0,1") (ifseqformula "2"))
         (rule "applyEqReverse" (formula "17") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "2"))
         (rule "applyEqReverse" (formula "17") (term "0,0,1,0,0,0,0") (ifseqformula "2"))
         (rule "applyEqReverse" (formula "17") (term "1,0,0,0,1,1,0,0,0,0") (ifseqformula "2"))
         (rule "applyEqReverse" (formula "17") (term "1,1,1,1,0,0,0,0") (ifseqformula "2"))
         (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "17") (term "1,1,0,1,0,1,1,0,0,0,0") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0"))
         (rule "elementOfUnion" (formula "1") (term "1,0"))
         (rule "pullOutSelect" (formula "16") (term "0,1,0,1") (inst "selectSK=Tree_right_0"))
         (rule "applyEq" (formula "17") (term "0,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "1,1,0,1,1") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "1,0,0,0,1,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "0,1,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "1,1,0,1,0,1,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
         (rule "applyEq" (formula "17") (term "1,1,1,1,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
         (rule "eqSymm" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
         (rule "eqSymm" (formula "15"))
         (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
         (rule "elementOfSetMinus" (formula "2") (term "0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "ifthenelse_negated" (formula "1") (term "0"))
         (rule "elementOfSetMinus" (formula "2") (term "1,1,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0,0"))
         (rule "elementOfSetMinus" (formula "2") (term "0,1,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "pullOutSelect" (formula "17") (term "0,1,0,0,0,0,0") (inst "selectSK=Tree_heightVariant_0"))
         (rule "applyEq" (formula "18") (term "1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "18") (term "0,0,0,1,1,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "6")))
         (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1,0,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,1,0,0,0"))
         (rule "elementOfUnion" (formula "2") (term "1,0,0"))
         (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0"))
         (rule "elementOfUnion" (formula "3") (term "0,0,1,1,1,0"))
         (rule "elementOfSingleton" (formula "3") (term "0,0,0,1,1,1,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "ifthenelse_negated" (formula "1") (term "0"))
         (rule "elementOfSetMinus" (formula "2") (term "1,1,0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
         (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0"))
         (rule "elementOfUnion" (formula "3") (term "0,0,1,0,1,0"))
         (rule "elementOfSingleton" (formula "3") (term "0,0,0,1,0,1,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0,0,0,0"))
         (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0,1,1,1,0,0"))
         (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,1,1,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "1,0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0,1,0,1,0,0"))
         (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,0,1,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0"))
         (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "pullOutSelect" (formula "18") (term "0,0,0,1,1,0,0,0,0") (inst "selectSK=Tree_heightVariant_1"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
         (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
         (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "pullOutSelect" (formula "19") (term "0,0,0,1,1,0,0,0") (inst "selectSK=Tree_heightVariant_2"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "eqSymm" (formula "1") (term "0,0,0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
         (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
         (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "ifthenelse_split" (formula "20") (term "0,1,1,1,1,0,1,0,1,0,1,1,0,0,0"))
         (branch "self.right = null TRUE"
             (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "replace_known_left" (formula "2") (term "0,2,0,1,1,0,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "replace_known_left" (formula "3") (term "0,2,1,0,1,0,0,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "replace_known_left" (formula "5") (term "0,2,1,0,1,0,1,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "replace_known_left" (formula "4") (term "0,2,0,1,1,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "replace_known_left" (formula "6") (term "0,2,1,0,1,0,1,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
            (rule "eqSymm" (formula "16"))
            (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "replace_known_right" (formula "18") (term "0,1,0,0,0") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
            (rule "cut_direct" (formula "13") (term "0"))
            (branch "CUT: self.left = null TRUE"
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "replace_known_left" (formula "3") (term "0,2,0,1,0,0,0,0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
               (rule "replace_known_left" (formula "5") (term "0,2,0,0,0,0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
               (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "18") (term "1,1,0,1,1") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "2") (term "0,0,1,1,0,0,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0,0,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "closeTrue" (formula "16"))
            )
            (branch "CUT: self.left = null FALSE"
                (builtin "One Step Simplification" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "replace_known_right" (formula "5") (term "0,2,0,0,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
               (rule "replace_known_right" (formula "2") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
               (rule "replace_known_right" (formula "4") (term "0,2,0,1,1,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
               (rule "replace_known_right" (formula "3") (term "0,2,0,1,0,0,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
               (rule "replace_known_right" (formula "6") (term "0,2,0,1,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
               (rule "replace_known_right" (formula "21") (term "0,1,1,0,1,1,0,1,0,1,0,1,0,0,0") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
               (rule "elementOfSingleton" (formula "5") (term "0,1,1,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfSingleton" (formula "4") (term "0,1,1,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "elementOfSingleton" (formula "3") (term "0,1,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "20") (term "1,1,0,1,0,1,0,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "20") (term "1,1,1,0,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "2") (term "0,0,1,1,0,0,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0,0,0") (ifseqformula "5"))
               (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "closeTrue" (formula "18"))
            )
         )
         (branch "self.right = null FALSE"
            (rule "replace_known_right" (formula "2") (term "0,2,1,0,1,1,1,0,0,0,0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
            (rule "replace_known_right" (formula "4") (term "0,2,1,0,1,0,1,0,0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
            (rule "replace_known_right" (formula "3") (term "0,2,0,1,1,0,0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
            (rule "replace_known_right" (formula "1") (term "0,2,1,0,1,0,0,0,0,0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "replace_known_right" (formula "5") (term "0,2,1,0,1,1,1,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
            (rule "replace_known_right" (formula "23") (term "0,0,1,1,1,1,0,0,0,1,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
            (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfSingleton" (formula "4") (term "1,0,1,1,1,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "elementOfSingleton" (formula "3") (term "1,0,1,1,1,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "5") (term "1,0,1,1,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,1,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,1,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "5") (term "1,0,1,0,1,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "cut_direct" (formula "13") (term "0"))
            (branch "CUT: self.left = null TRUE"
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "replace_known_left" (formula "3") (term "0,2,0,1,1,1,0,0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
               (rule "applyEqReverse" (formula "23") (term "0,1,0,0,0,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "23") (term "1,1,0,0,1,1,0,0,0") (ifseqformula "3"))
               (rule "applyEqReverse" (formula "23") (term "1,1,0,0,1,1,0,0,0,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_left" (formula "1") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
               (rule "replace_known_left" (formula "3") (term "0,2,0,0,1,0,0") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "19")))
               (rule "closeFalse" (formula "3"))
            )
            (branch "CUT: self.left = null FALSE"
                (builtin "One Step Simplification" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "replace_known_right" (formula "1") (term "0,2,0,1,0,1,0,0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "replace_known_right" (formula "4") (term "0,2,0,0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "replace_known_right" (formula "3") (term "0,2,0,1,1,1,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "replace_known_right" (formula "2") (term "0,2,0,1,1,1,0,0,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "notLeft" (formula "11"))
               (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "replace_known_right" (formula "5") (term "0,2,0,1,1,1,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "replace_known_right" (formula "26") (term "0,1,0,1,0,1,1,0,0,0,1,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "elementOfSingleton" (formula "1") (term "0,1,1,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "4") (term "0,1,1,1,0,0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "elementOfSingleton" (formula "3") (term "0,1,0,1,0,0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "elementOfSingleton" (formula "2") (term "0,1,1,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "elementOfSingleton" (formula "1") (term "0,1,0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "22")))
               (rule "closeFalse" (formula "4"))
            )
         )
      )
   )
   (branch "Assume self.left@heap[anon( allLocs ∖ self.* ∪ if (self.left = null) then (∅) else (self.left.footprint$lmtd) ∪ if (self.right = null) then (∅) else (self.right.footprint$lmtd) ∖ {(self, Tree::$isRed)} ∪ if (self.left = null) then (∅) else ({(self.left, Tree::$isRed)}) ∪ if (self.right = null) then (∅) else ({(self.right, Tree::$isRed)}), anon_heap«anonHeapFunction»)] != self.left"
       (builtin "One Step Simplification" (formula "7"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "notLeft" (formula "1"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "eqSymm" (formula "15") (term "0,0,0,0,0,0,0,0,0"))
      (rule "eqSymm" (formula "6") (term "0,0,0"))
      (rule "disjointDefinition" (formula "15") (term "1,0,1,1,0,0,0"))
      (rule "disjointDefinition" (formula "15") (term "1,0,1,1,0,0,0,0"))
      (rule "disjointDefinition" (formula "15") (term "1,1"))
      (rule "disjointDefinition" (formula "12") (term "1"))
      (rule "disjointDefinition" (formula "9") (term "1,0,1"))
      (rule "disjointDefinition" (formula "8") (term "1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "add_zero_right" (formula "7") (term "0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,1"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,0,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,1,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,1,0,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,1,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,1,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,1,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "13") (term "1,1,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "eqSymm" (formula "15") (term "0,0,0,0,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,1,0,1,0,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,0,1,0,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,0,1,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,1,0,1,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,0,1,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,0,0,1,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,1,0,1,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,1,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,0,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,1,0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,0,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,1,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,1,0,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,1,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,1,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,1,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "13") (term "1,1,1,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,0,0,0,0,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,1,0,1,0,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,0,1,0,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,0,1,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,1,0,1,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,0,1,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,0,0,1,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,1,0,1,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,1,1"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,0,0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
      (rule "eqSymm" (formula "15") (term "0,0,0,0,0,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,0,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,1,0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "setMinusOfUnion" (formula "15") (term "1,1,1,0,0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0,0,0"))
      (rule "pullOutSelect" (formula "15") (term "0,0,1,0,0,0,0") (inst "selectSK=Tree_left_0"))
      (rule "applyEq" (formula "16") (term "1,1,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "16") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "16") (term "0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "16") (term "1,1,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "16") (term "1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "16") (term "1,0,0,0,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "16") (term "1,0,0,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "4")))
      (rule "eqSymm" (formula "14"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "16") (term "1,1,1,1,0,0,0") (inst "selectSK=Tree_right_0"))
      (rule "applyEq" (formula "17") (term "1,0,0,0,1,1,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "17") (term "1,1,0,1,1") (ifseqformula "1"))
      (rule "applyEq" (formula "17") (term "1,1,0,1,0,1,1,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "17") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "17") (term "0,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "17") (term "0,0,1,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "17") (term "0,1,0,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "5")))
      (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0,0,0"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "elementOfUnion" (formula "2") (term "1,0,0"))
      (rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
      (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0"))
      (rule "elementOfSetMinus" (formula "2") (term "1,1,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "2") (term "0,0,0,0,0"))
      (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "pullOutSelect" (formula "17") (term "0,1,0,0,0,0,0") (inst "selectSK=Tree_heightVariant_0"))
      (rule "applyEq" (formula "18") (term "0,0,0,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "18") (term "0,0,0,1,1,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "6")))
      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,1,0,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,1,0,0,0"))
      (rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
      (rule "elementOfUnion" (formula "2") (term "1,0,0"))
      (rule "elementOfUnion" (formula "3") (term "0,1,1,1,0,0"))
      (rule "elementOfUnion" (formula "3") (term "0,1,0,1,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "elementOfUnion" (formula "2") (term "0,0,0,0,0"))
      (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "3") (term "0,0,1,1,1,0,0"))
      (rule "elementOfSingleton" (formula "3") (term "0,0,0,1,1,1,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSetMinus" (formula "2") (term "0,1,0,0"))
      (rule "elementOfSetMinus" (formula "2") (term "1,1,0,0"))
      (rule "elementOfUnion" (formula "3") (term "0,0,1,0,1,0,0"))
      (rule "elementOfSingleton" (formula "3") (term "0,0,0,1,0,1,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfUnion" (formula "1") (term "1,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "2") (term "0,1,0,1,0,0"))
      (rule "elementOfUnion" (formula "2") (term "0,1,1,1,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0"))
      (rule "elementOfUnion" (formula "2") (term "0,0,1,0,1,0,0"))
      (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,0,1,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "2") (term "0,0,1,1,1,0,0"))
      (rule "elementOfSingleton" (formula "2") (term "0,0,0,1,1,1,0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "18") (term "0,0,0,1,1,0,0,0,0") (inst "selectSK=Tree_heightVariant_1"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,0,0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "19") (term "0,0,0,1,1,0,0,0") (inst "selectSK=Tree_heightVariant_2"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,0,0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,1,0,0,0,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "0,1,0,0,0,0"))
      (rule "elementOfSetMinus" (formula "1") (term "1,1,0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,1,0,0,0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,1,0,1,0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,1,1,1,0,0,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,0,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,1,1,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_split" (formula "20") (term "0,1,1,1,1,0,0,0,1,1"))
      (branch "self.right = null TRUE"
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "3") (term "0,2,1,0,1,0,0,0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "5") (term "0,2,0,1,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "6") (term "0,2,1,0,1,0,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "2") (term "0,2,1,0,1,0,1,0,0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "4") (term "0,2,0,1,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
         (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
         (rule "cut_direct" (formula "13") (term "0"))
         (branch "CUT: self.left = null TRUE"
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "replace_known_left" (formula "5") (term "0,2,0,0,0,0") (ifseqformula "13"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
            (rule "applyEqReverse" (formula "18") (term "1,1,1,1,0,0,0") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0,0") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0,0,0,0") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "2") (term "0,0,1,1,0,0,0,0") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "18") (term "1,1,0,1,1") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "18") (term "0,1,0,0,0,0,0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
            (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0,0,0") (ifseqformula "5"))
            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
            (rule "applyEqReverse" (formula "18") (term "0,1,0,1") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "applyEqReverse" (formula "18") (term "0,0,1,0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "hideAuxiliaryEq" (formula "5"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "replace_known_left" (formula "3") (term "0,2,0,0,0,0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
            (rule "applyEqReverse" (formula "16") (term "0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "16") (term "1,1,0,0,1,1,0,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replace_known_left" (formula "2") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
            (rule "replace_known_left" (formula "3") (term "0,2,0,1,1,0,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "13")))
            (rule "closeFalse" (formula "3"))
         )
         (branch "CUT: self.left = null FALSE"
             (builtin "One Step Simplification" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "replace_known_right" (formula "3") (term "0,2,0,1,1,0,0,0,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "replace_known_right" (formula "4") (term "0,2,0,1,0,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "replace_known_right" (formula "5") (term "0,2,0,1,1,0,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "replace_known_right" (formula "6") (term "0,2,0,0,0,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "replace_known_right" (formula "2") (term "0,2,0,1,0,0,0,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "replace_known_right" (formula "21") (term "0,0,1,1,1,0,0,0,1,0,0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
            (rule "elementOfSingleton" (formula "3") (term "0,1,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "4") (term "0,1,1,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "elementOfSingleton" (formula "5") (term "0,1,1,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "elementOfSingleton" (formula "6") (term "0,1,1,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "elementOfSingleton" (formula "2") (term "0,1,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfSingleton" (formula "3") (term "0,1,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "21") (term "0,1,0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "21") (term "1,1,0,0,1,1,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "21") (term "1,1,0,0,1,1,0,0,0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "replace_known_left" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "2") (term "1,0,0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "20") (term "1,1,1,1,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "20") (term "1,1,0,1,1") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "20") (term "0,1,0,1") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "applyEqReverse" (formula "2") (term "0,1,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
            (rule "applyEqReverse" (formula "20") (term "1,1,0,1,0,1,1,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "20") (term "0,0,1,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "20") (term "0,1,0,0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "17")))
            (rule "closeFalse" (formula "4"))
         )
      )
      (branch "self.right = null FALSE"
         (rule "replace_known_right" (formula "1") (term "0,2,0,1,1,0,0,0,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
         (rule "replace_known_right" (formula "2") (term "0,2,1,0,1,0,0,0,0,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
         (rule "replace_known_right" (formula "4") (term "0,2,1,0,0,0,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
         (rule "replace_known_right" (formula "5") (term "0,2,0,1,1,0,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
         (rule "replace_known_right" (formula "3") (term "0,2,1,0,0,0,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")))
         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "replace_known_right" (formula "23") (term "0,1,1,0,1,1,1,0,0,0,1,1") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
         (rule "elementOfSingleton" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfSingleton" (formula "4") (term "1,0,1,0,1,0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "elementOfSingleton" (formula "5") (term "1,0,1,1,1,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfSingleton" (formula "4") (term "1,0,1,1,1,0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "elementOfSingleton" (formula "3") (term "1,0,1,1,1,0,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,1,0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,1,0,1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "elementOfSingleton" (formula "5") (term "1,0,1,0,1,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "elementOfSingleton" (formula "3") (term "1,0,1,0,1,0,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "cut_direct" (formula "13") (term "0"))
         (branch "CUT: self.left = null TRUE"
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "replace_known_left" (formula "3") (term "0,2,0,1,1,1,0,0") (ifseqformula "13"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
            (rule "applyEqReverse" (formula "23") (term "1,1,0,0,1,1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "23") (term "0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "23") (term "1,1,0,0,1,1,0,0,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replace_known_left" (formula "3") (term "0,2,0,0,1,0,0") (ifseqformula "12"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
            (rule "applyEqReverse" (formula "1") (term "0,0,1,0,1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "22") (term "0,1,0,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "22") (term "1,1,0,1,1") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "0,0,1,1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "22") (term "0,0,1,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "0,0,1,1,1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "22") (term "1,1,0,1,0,1,1,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "22") (term "1,1,1,1,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "22") (term "0,1,0,1") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replace_known_left" (formula "2") (term "0,2,0,1,0,1,0,0,0,0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
            (rule "replace_known_left" (formula "1") (term "0,2,0,1,0,1,0,0,0,0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "20")))
            (rule "replace_known_left" (formula "3") (term "0,2,0,1,1,1,0,0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "18")))
            (rule "closeFalse" (formula "3"))
         )
         (branch "CUT: self.left = null FALSE"
             (builtin "One Step Simplification" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "replace_known_right" (formula "2") (term "0,2,0,0,1,0,0,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
            (rule "replace_known_right" (formula "4") (term "0,2,0,0,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
            (rule "replace_known_right" (formula "5") (term "0,2,0,0,1,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
            (rule "replace_known_right" (formula "3") (term "0,2,0,0,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
            (rule "replace_known_right" (formula "1") (term "0,2,0,1,0,0,0,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
            (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "notLeft" (formula "11"))
            (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "replace_known_right" (formula "26") (term "0,0,0,1,1,1,0,0,0,1,1") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
            (rule "elementOfSingleton" (formula "2") (term "0,1,0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfSingleton" (formula "4") (term "0,1,0,1,0,0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "23")))
            (rule "closeFalse" (formula "5"))
         )
      )
   )
)
(branch "Case '<-'"
   (rule "close" (formula "9") (ifseqformula "7"))
)
)
}
