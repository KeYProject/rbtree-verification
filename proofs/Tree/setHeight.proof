\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Aug 02 19:45:11 CEST 2023
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off, Strings-Strings\\:on, assertions-assertions\\:safe, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:modularOnly, modelFields-modelFields\\:treatAsAxiom, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:ban, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=1000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\include "../../iSet.key";

\proofObligation "#Proof Obligation Settings
#Wed Aug 02 19:45:11 CEST 2023
contract=Tree[Tree\\:\\:setHeight()].JML normal_behavior operation contract.0
name=Tree[Tree\\:\\:setHeight()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "johanna" ) (keyVersion "a069d475aa213e8a093bffdaef3038d50814bc92"))
(keyLog "1" (keyUser "johanna" ) (keyVersion "a069d475aa213e8a093bffdaef3038d50814bc92"))
(keyLog "2" (keyUser "johanna" ) (keyVersion "a069d475aa213e8a093bffdaef3038d50814bc92"))

(autoModeTime "58845")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "5"))
(rule "eqSymm" (formula "12") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "12") (term "0,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "0,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "0,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "0,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "0,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "5") (term "0,0,0"))
(rule "elementOfSingleton" (formula "12") (term "0,0,0,0,1,0,1"))
(rule "disjointDefinition" (formula "10") (term "1"))
(rule "disjointDefinition" (formula "7") (term "0,1"))
(rule "disjointDefinition" (formula "6") (term "0,1"))
(rule "assignment" (formula "12") (term "1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "commute_or" (formula "5") (term "0"))
(rule "commute_or_2" (formula "5"))
(rule "limit_java_lang_Object__inv_" (formula "7") (term "1,1"))
(rule "limit_java_lang_Object__inv_" (formula "6") (term "1,1"))
(rule "limit_Tree_footprint" (formula "12") (term "0,0,1"))
(rule "limit_Tree_footprint" (formula "13") (term "1,0,1"))
(rule "cnf_rightDist" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "commute_or" (formula "10"))
(rule "cnf_rightDist" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "commute_or" (formula "8"))
(rule "applyEq_or_gen1" (formula "5"))
 (builtin "One Step Simplification" (formula "5"))
(rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_setHeight,savedHeapBefore_setHeight"))
 (builtin "One Step Simplification" (formula "18"))
 (builtin "Block Contract (Internal)" (formula "18") (newnames "anonOut_heap,exc_0,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "19"))
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "4")) (ifInst ""  (formula "1")) (ifInst ""  (formula "18")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
   (rule "andLeft" (formula "17"))
   (rule "eqSymm" (formula "20") (term "1,0,0,1,0,1"))
   (rule "elementOfSingleton" (formula "20") (term "0,0,0,0,1,0,1"))
   (rule "disjointDefinition" (formula "18") (term "0,1"))
   (rule "disjointDefinition" (formula "17") (term "0,1"))
   (rule "variableDeclarationAssign" (formula "20") (term "1"))
   (rule "variableDeclaration" (formula "20") (term "1") (newnames "exc_0_1"))
   (rule "assignment" (formula "20") (term "1"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "variableDeclarationGhostAssign" (formula "20") (term "1"))
   (rule "variableDeclarationGhost" (formula "20") (term "1") (newnames "leftHeight"))
   (rule "cnf_rightDist" (formula "18"))
   (rule "andLeft" (formula "18"))
   (rule "commute_or" (formula "18"))
   (rule "cnf_rightDist" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "commute_or" (formula "17"))
   (rule "condition" (formula "18") (term "1"))
   (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "18") (term "1") (newnames "b"))
   (rule "compound_equality_comparison_1" (formula "18") (term "1") (inst "#v0=t"))
   (rule "variableDeclarationAssign" (formula "18") (term "1"))
   (rule "variableDeclaration" (formula "18") (term "1") (newnames "t"))
   (rule "assignment_read_attribute_this" (formula "18"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "equality_comparison_simple" (formula "18") (term "1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "ifElseSplit" (formula "18"))
   (branch "if b true"
       (builtin "One Step Simplification" (formula "19"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "assignment" (formula "15") (term "1"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "emptyStatement" (formula "15") (term "1"))
      (rule "variableDeclarationGhostAssign" (formula "15") (term "1"))
      (rule "variableDeclarationGhost" (formula "15") (term "1") (newnames "rightHeight"))
      (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
      (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "1"))
      (rule "limit_java_lang_Object__inv_" (formula "6") (term "1"))
      (rule "limit_Tree_footprint" (formula "12") (term "1"))
      (rule "condition" (formula "15") (term "1"))
      (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=b"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_1"))
      (rule "compound_equality_comparison_1" (formula "15") (term "1") (inst "#v0=t"))
      (rule "variableDeclarationAssign" (formula "15") (term "1"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "t_1"))
      (rule "assignment_read_attribute_this" (formula "15"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "equality_comparison_simple" (formula "15") (term "1"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "ifElseSplit" (formula "15"))
      (branch "if b_1 true"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "assignment" (formula "14") (term "1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "blockEmpty" (formula "14") (term "1"))
         (rule "emptyStatement" (formula "14") (term "1"))
         (rule "eval_order_access4" (formula "14") (term "1") (inst "#v1=i") (inst "#v0=t"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "t_2"))
         (rule "assignment" (formula "14") (term "1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "i"))
         (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
         (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "1"))
         (rule "compound_addition_2" (formula "12") (term "1") (inst "#v1=i_2") (inst "#v0=i_1"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "i_1"))
         (rule "assignment" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "i_2"))
         (rule "remove_parentheses_right" (formula "12") (term "1"))
         (rule "condition_not_simple" (formula "12") (term "1") (inst "#v0=b"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "b_2"))
         (rule "greater_than_comparison_simple" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "greater_literals" (formula "12") (term "0,0,1,0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "condition_simple" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "assignmentAdditionInt" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "translateJavaAddInt" (formula "12") (term "0,1,0"))
         (rule "add_zero_right" (formula "12") (term "0,1,0"))
         (rule "assignment_write_attribute" (formula "12"))
         (branch "Normal Execution (t_2 != null)"
             (builtin "One Step Simplification" (formula "12"))
            (rule "emptyStatement" (formula "12") (term "1"))
            (rule "tryEmpty" (formula "12") (term "1"))
            (rule "blockEmptyLabel" (formula "12") (term "1"))
            (rule "blockEmpty" (formula "12") (term "1"))
            (rule "methodCallEmpty" (formula "12") (term "1"))
            (rule "emptyModality" (formula "12") (term "1"))
            (rule "andRight" (formula "12"))
            (branch "Case 1"
               (rule "andRight" (formula "12"))
               (branch "Case 1"
                  (rule "impRight" (formula "12"))
                  (rule "andRight" (formula "13"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_gtRight" (formula "12"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "leq_literals" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "13"))
                     (branch "Case 1"
                        (rule "orRight" (formula "13"))
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "14"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "13") (term "1,1"))
                        (rule "dismissNonSelectedField" (formula "12") (term "0"))
                        (rule "close" (formula "12") (ifseqformula "2"))
                     )
                     (branch "Case 2"
                        (rule "orRight" (formula "13"))
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "14"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "13") (term "1,1"))
                        (rule "dismissNonSelectedField" (formula "12") (term "0"))
                        (rule "close" (formula "12") (ifseqformula "1"))
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "closeTrue" (formula "12"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "12"))
               (rule "allRight" (formula "12") (inst "sk=f_0"))
               (rule "allRight" (formula "12") (inst "sk=o_0"))
               (rule "orRight" (formula "12"))
               (rule "orRight" (formula "12"))
               (rule "eqSymm" (formula "14"))
               (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "15"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (t_2 = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "if b_1 false"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "eval_order_access2" (formula "16") (term "1") (inst "#v0=t"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "t_2"))
         (rule "assignment_read_attribute_this" (formula "16"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "assignment_read_attribute" (formula "16"))
         (branch "Normal Execution (t_2 != null)"
             (builtin "One Step Simplification" (formula "16"))
            (rule "blockEmpty" (formula "16") (term "1"))
            (rule "emptyStatement" (formula "16") (term "1"))
            (rule "eval_order_access4" (formula "16") (term "1") (inst "#v1=i") (inst "#v0=t"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "t_3"))
            (rule "assignment" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "i"))
            (rule "compound_addition_2" (formula "16") (term "1") (inst "#v1=i_2") (inst "#v0=i_1"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "i_1"))
            (rule "assignment" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "i_2"))
            (rule "remove_parentheses_right" (formula "16") (term "1"))
            (rule "condition_not_simple" (formula "16") (term "1") (inst "#v0=b"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "b_2"))
            (rule "greater_than_comparison_simple" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "condition_simple" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "assignmentAdditionInt" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
            (rule "assignment_write_attribute" (formula "16"))
            (branch "Normal Execution (t_3 != null)"
                (builtin "One Step Simplification" (formula "16"))
               (rule "emptyStatement" (formula "16") (term "1"))
               (rule "tryEmpty" (formula "16") (term "1"))
               (rule "blockEmptyLabel" (formula "16") (term "1"))
               (rule "blockEmpty" (formula "16") (term "1"))
               (rule "methodCallEmpty" (formula "16") (term "1"))
               (rule "emptyModality" (formula "16") (term "1"))
               (rule "andRight" (formula "16"))
               (branch "Case 1"
                  (rule "andRight" (formula "16"))
                  (branch "Case 1"
                     (rule "impRight" (formula "16"))
                     (rule "andRight" (formula "17"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "1"))
                        (rule "inEqSimp_gtRight" (formula "16"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "1") (term "0,1,3,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1,3,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,3,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,3,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,3,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,1,3,0,0"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "10") (term "1,0") (ifseqformula "16"))
                        (rule "distributeIntersection" (formula "10") (term "0"))
                        (rule "distributeIntersection" (formula "10") (term "1,0"))
                        (rule "unionEqualsEmpty" (formula "10"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "eqSymm" (formula "16"))
                        (rule "unionEqualsEmpty" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "16") (term "1") (ifseqformula "18"))
                        (rule "eqSymm" (formula "16"))
                        (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "14") (term "0,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "3")))
                        (rule "true_left" (formula "14"))
                        (rule "Class_invariant_axiom_for_Tree" (formula "12") (inst "k=k") (inst "k_0=k_0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "eqSymm" (formula "12") (term "0,0,0"))
                        (rule "disjointDefinition" (formula "18") (term "1"))
                        (rule "disjointDefinition" (formula "15") (term "1,0,1"))
                        (rule "disjointDefinition" (formula "14") (term "1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "13"))
                        (rule "add_zero_right" (formula "13") (term "0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "13"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEq" (formula "15") (term "1,1,0,0,1") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "0,1,0,0,1"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0"))
                        (rule "add_literals" (formula "13") (term "0,0"))
                        (rule "applyEq" (formula "14") (term "1,1,0,0,1") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "0,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "closeFalse" (formula "13"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "17"))
                        (branch "Case 1"
                           (rule "orRight" (formula "17"))
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "18"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "17") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "16") (term "0"))
                           (rule "close" (formula "16") (ifseqformula "1"))
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "17"))
                           (rule "Class_invariant_axiom_for_Tree" (formula "10") (inst "k=k") (inst "k_0=k_0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "10"))
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "18"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "1"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "eqSymm" (formula "9") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0"))
                           (rule "disjointDefinition" (formula "15") (term "1"))
                           (rule "disjointDefinition" (formula "12") (term "1,0,1"))
                           (rule "disjointDefinition" (formula "11") (term "1,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "22") (term "0,1,3,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,1,3,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,3,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "22") (term "0,1,3,0,1"))
                           (rule "add_zero_right" (formula "22") (term "0,0,1,3,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,3,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "10"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "inEqSimp_gtRight" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,3,0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,3,0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,3,0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,3,0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,3,0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,3,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0,1,3,0,1") (ifseqformula "11"))
                           (rule "qeq_literals" (formula "1") (term "0,0,1,3,0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0,1,3,0,0") (ifseqformula "11"))
                           (rule "qeq_literals" (formula "1") (term "0,0,1,3,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "2"))
                           (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                           (rule "simplifySelectOfStore" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "castDel" (formula "2") (term "0"))
                           (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                           (rule "mul_literals" (formula "12") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "commute_or" (formula "11") (term "0"))
                           (rule "limit_Tree_footprint" (formula "18") (term "0,0,1"))
                           (rule "limit_Tree_footprint" (formula "19") (term "1,0,1"))
                           (rule "cnf_rightDist" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "commute_or_2" (formula "11"))
                           (rule "cnf_rightDist" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "commute_or" (formula "17"))
                           (rule "commute_or" (formula "15"))
                           (rule "cnf_rightDist" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "commute_or" (formula "17"))
                           (rule "cnf_rightDist" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "commute_or" (formula "15"))
                           (rule "applyEq_or_gen1" (formula "11"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "equiv_left" (formula "8"))
                           (branch "Case 1"
                              (rule "cut_direct" (formula "25") (term "0,0"))
                              (branch "CUT: self.right.left = null TRUE"
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "21"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "self.right = self TRUE"
                                    (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "11") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEq" (formula "14") (term "0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,1,1,0,1") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "applyEq" (formula "13") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "13"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0"))
                                    (rule "qeq_literals" (formula "13"))
                                    (rule "closeFalse" (formula "13"))
                                 )
                                 (branch "self.right = self FALSE"
                                    (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "CUT: self.right.left = null FALSE"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "self.right = self TRUE"
                                    (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "11") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "17") (term "1,1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "1,1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "17") (term "0,0,0,1") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "1"))
                                    (rule "close" (formula "27") (ifseqformula "2"))
                                 )
                                 (branch "self.right = self FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "cut_direct" (formula "23") (term "0,0"))
                              (branch "CUT: self.right.left = null TRUE"
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "19"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "self.right = self TRUE"
                                    (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,1,1") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0"))
                                    (rule "add_zero_right" (formula "11") (term "0"))
                                    (rule "qeq_literals" (formula "11"))
                                    (rule "closeFalse" (formula "11"))
                                 )
                                 (branch "self.right = self FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "CUT: self.right.left = null FALSE"
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "self.right = self TRUE"
                                    (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "14") (term "1,1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "30"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "21") (term "1,1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "1"))
                                    (rule "close" (formula "27") (ifseqformula "2"))
                                 )
                                 (branch "self.right = self FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "closeTrue" (formula "16"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "allRight" (formula "16") (inst "sk=f_0"))
                  (rule "allRight" (formula "16") (inst "sk=o_0"))
                  (rule "orRight" (formula "16"))
                  (rule "orRight" (formula "16"))
                  (rule "eqSymm" (formula "18"))
                  (rule "inEqSimp_gtToGeq" (formula "18") (term "0,1,3,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1,3,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,3,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0,1,3,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,3,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,0,1,3,0,0"))
                  (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "19"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (t_3 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (t_2 = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "if b false"
       (builtin "One Step Simplification" (formula "19"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "notLeft" (formula "5"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "eval_order_access2" (formula "19") (term "1") (inst "#v0=t"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "t_1"))
      (rule "assignment_read_attribute_this" (formula "19"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "assignment_read_attribute" (formula "19"))
      (branch "Normal Execution (t_1 != null)"
          (builtin "One Step Simplification" (formula "19"))
         (rule "blockEmpty" (formula "19") (term "1"))
         (rule "emptyStatement" (formula "19") (term "1"))
         (rule "variableDeclarationGhostAssign" (formula "19") (term "1"))
         (rule "variableDeclarationGhost" (formula "19") (term "1") (newnames "rightHeight"))
         (rule "condition" (formula "19") (term "1"))
         (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=b"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "b_1"))
         (rule "compound_equality_comparison_1" (formula "19") (term "1") (inst "#v0=t"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "t_2"))
         (rule "assignment_read_attribute_this" (formula "19"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "equality_comparison_simple" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "ifElseSplit" (formula "19"))
         (branch "if b_1 true"
             (builtin "One Step Simplification" (formula "1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "assignment" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "blockEmpty" (formula "17") (term "1"))
            (rule "emptyStatement" (formula "17") (term "1"))
            (rule "eval_order_access4" (formula "17") (term "1") (inst "#v1=i") (inst "#v0=t"))
            (rule "variableDeclarationAssign" (formula "17") (term "1"))
            (rule "variableDeclaration" (formula "17") (term "1") (newnames "t_3"))
            (rule "assignment" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "variableDeclarationAssign" (formula "17") (term "1"))
            (rule "variableDeclaration" (formula "17") (term "1") (newnames "i"))
            (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
            (rule "eqSymm" (formula "14"))
            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
            (rule "limit_java_lang_Object__inv_" (formula "9") (term "1"))
            (rule "limit_Tree_footprint" (formula "13") (term "1"))
            (rule "compound_addition_2" (formula "16") (term "1") (inst "#v1=i_2") (inst "#v0=i_1"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "i_1"))
            (rule "assignment" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "i_2"))
            (rule "remove_parentheses_right" (formula "16") (term "1"))
            (rule "condition_not_simple" (formula "16") (term "1") (inst "#v0=b"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "b_2"))
            (rule "greater_than_comparison_simple" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "condition_simple" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "assignmentAdditionInt" (formula "16") (term "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
            (rule "assignment_write_attribute" (formula "16"))
            (branch "Normal Execution (t_3 != null)"
                (builtin "One Step Simplification" (formula "16"))
               (rule "emptyStatement" (formula "16") (term "1"))
               (rule "tryEmpty" (formula "16") (term "1"))
               (rule "blockEmptyLabel" (formula "16") (term "1"))
               (rule "blockEmpty" (formula "16") (term "1"))
               (rule "methodCallEmpty" (formula "16") (term "1"))
               (rule "emptyModality" (formula "16") (term "1"))
               (rule "andRight" (formula "16"))
               (branch "Case 1"
                  (rule "andRight" (formula "16"))
                  (branch "Case 1"
                     (rule "impRight" (formula "16"))
                     (rule "andRight" (formula "17"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "1"))
                        (rule "inEqSimp_gtRight" (formula "16"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "1") (term "0,1,3,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,3,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,1,3,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,3,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,1,3,0,0"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "Class_invariant_axiom_for_Tree" (formula "10") (inst "k=k") (inst "k_0=k_0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "eqSymm" (formula "10") (term "0,0,0"))
                        (rule "disjointDefinition" (formula "16") (term "1"))
                        (rule "disjointDefinition" (formula "13") (term "1,0,1"))
                        (rule "disjointDefinition" (formula "12") (term "1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "11"))
                        (rule "add_zero_right" (formula "11") (term "0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "0,0"))
                        (rule "applyEq" (formula "12") (term "1,1,0,0,1") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1,0,0,1"))
                        (rule "add_literals" (formula "12") (term "0,1,0,0,1"))
                        (rule "applyEq" (formula "13") (term "1,1,0,0,1") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,1"))
                        (rule "add_literals" (formula "13") (term "0,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "11"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "17"))
                        (branch "Case 1"
                           (rule "orRight" (formula "17"))
                           (rule "Class_invariant_axiom_for_Tree" (formula "9") (inst "k=k") (inst "k_0=k_0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "9"))
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "18"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "1"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "eqSymm" (formula "8") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "23") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0"))
                           (rule "disjointDefinition" (formula "14") (term "1"))
                           (rule "disjointDefinition" (formula "11") (term "1,0,1"))
                           (rule "disjointDefinition" (formula "10") (term "1,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "22") (term "0,1,3,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,3,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,1,3,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "22") (term "0,1,3,0,1"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,3,0,1"))
                           (rule "add_zero_right" (formula "22") (term "0,0,0,1,3,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "9"))
                           (rule "add_zero_right" (formula "9") (term "0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                           (rule "inEqSimp_gtRight" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,3,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,1,3,0,0,1,0"))
                           (rule "replace_known_left" (formula "1") (term "0,1,3,0,0,1,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,3,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,1,3,0,0"))
                           (rule "replace_known_left" (formula "1") (term "0,1,3,0,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=Tree_heightVariant_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                           (rule "mul_literals" (formula "11") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                           (rule "add_literals" (formula "11") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1"))
                           (rule "commute_or" (formula "10") (term "0"))
                           (rule "limit_Tree_footprint" (formula "17") (term "1,0,1"))
                           (rule "limit_Tree_footprint" (formula "18") (term "0,0,1"))
                           (rule "commute_or_2" (formula "10"))
                           (rule "cnf_rightDist" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "commute_or" (formula "15"))
                           (rule "cnf_rightDist" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "commute_or" (formula "14"))
                           (rule "cnf_rightDist" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "commute_or" (formula "16"))
                           (rule "cnf_rightDist" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "commute_or" (formula "14"))
                           (rule "applyEq_or_gen1" (formula "10"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "equiv_left" (formula "24"))
                           (branch "Case 1"
                              (rule "cut_direct" (formula "23") (term "0,0"))
                              (branch "CUT: self.left.left = null TRUE"
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "19"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "self.left = self TRUE"
                                    (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "9") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "applyEq" (formula "11") (term "1,1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "close" (formula "19") (ifseqformula "1"))
                                 )
                                 (branch "self.left = self FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "CUT: self.left.left = null FALSE"
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "self.left = self TRUE"
                                    (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "17") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0"))
                                    (rule "add_zero_right" (formula "11") (term "0"))
                                    (rule "qeq_literals" (formula "11"))
                                    (rule "closeFalse" (formula "11"))
                                 )
                                 (branch "self.left = self FALSE"
                                    (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "cut_direct" (formula "23") (term "0,0"))
                              (branch "CUT: self.left.left = null TRUE"
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "19"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "self.left = self TRUE"
                                    (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "1"))
                                    (rule "close" (formula "20") (ifseqformula "13"))
                                 )
                                 (branch "self.left = self FALSE"
                                    (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "CUT: self.left.left = null FALSE"
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "notLeft" (formula "10"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "self.left = self TRUE"
                                    (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "9") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "14") (term "1,1,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "17") (term "1,1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "18") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0"))
                                    (rule "add_literals" (formula "11") (term "0"))
                                    (rule "qeq_literals" (formula "11"))
                                    (rule "closeFalse" (formula "11"))
                                 )
                                 (branch "self.left = self FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "17"))
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "18"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "17") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "16") (term "0"))
                           (rule "close" (formula "16") (ifseqformula "1"))
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "closeTrue" (formula "16"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "allRight" (formula "16") (inst "sk=f_0"))
                  (rule "allRight" (formula "16") (inst "sk=o_0"))
                  (rule "orRight" (formula "16"))
                  (rule "orRight" (formula "16"))
                  (rule "eqSymm" (formula "18"))
                  (rule "inEqSimp_gtToGeq" (formula "18") (term "0,1,3,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,1,3,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,3,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,1,3,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,1,3,0,0"))
                  (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "19"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (t_3 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "if b_1 false"
             (builtin "One Step Simplification" (formula "20"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "eval_order_access2" (formula "20") (term "1") (inst "#v0=t"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "t_3"))
            (rule "assignment_read_attribute_this" (formula "20"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "assignment_read_attribute" (formula "20"))
            (branch "Normal Execution (t_3 != null)"
                (builtin "One Step Simplification" (formula "20"))
               (rule "blockEmpty" (formula "20") (term "1"))
               (rule "emptyStatement" (formula "20") (term "1"))
               (rule "eval_order_access4_this" (formula "20") (term "1") (inst "#v1=i"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "i"))
               (rule "compound_addition_2" (formula "20") (term "1") (inst "#v1=i_2") (inst "#v0=i_1"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_1"))
               (rule "assignment" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_2"))
               (rule "remove_parentheses_right" (formula "20") (term "1"))
               (rule "condition_not_simple" (formula "20") (term "1") (inst "#v0=b"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_2"))
               (rule "greater_than_comparison_simple" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "condition_simple" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "assignmentAdditionInt" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
               (rule "assignment_write_attribute_this" (formula "20"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "emptyStatement" (formula "20") (term "1"))
               (rule "tryEmpty" (formula "20") (term "1"))
               (rule "blockEmptyLabel" (formula "20") (term "1"))
               (rule "blockEmpty" (formula "20") (term "1"))
               (rule "methodCallEmpty" (formula "20") (term "1"))
               (rule "emptyModality" (formula "20") (term "1"))
               (rule "andRight" (formula "20"))
               (branch "Case 1"
                  (rule "andRight" (formula "20"))
                  (branch "Case 1"
                     (rule "impRight" (formula "20"))
                     (rule "andRight" (formula "21"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "1"))
                        (rule "inEqSimp_gtRight" (formula "20"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "1") (term "0,1,3,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,3,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,1,3,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,3,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,3,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,1,3,0,0"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "Class_invariant_axiom_for_Tree" (formula "12") (inst "k=k") (inst "k_0=k_0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "eqSymm" (formula "12") (term "0,0,0"))
                        (rule "disjointDefinition" (formula "18") (term "1"))
                        (rule "disjointDefinition" (formula "15") (term "1,0,1"))
                        (rule "disjointDefinition" (formula "14") (term "1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "13"))
                        (rule "add_zero_right" (formula "13") (term "0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "20") (term "0,0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")))
                        (rule "inEqSimp_gtToGeq" (formula "20") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "20") (term "0"))
                        (rule "inEqSimp_notGeq" (formula "20") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "21") (term "1") (ifseqformula "26"))
                        (rule "eqSymm" (formula "21"))
                        (rule "Class_invariant_axiom_for_Tree" (formula "9") (inst "k=k") (inst "k_0=k_0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "eqSymm" (formula "9") (term "0,0,0"))
                        (rule "disjointDefinition" (formula "15") (term "1"))
                        (rule "disjointDefinition" (formula "12") (term "1,0,1"))
                        (rule "disjointDefinition" (formula "11") (term "1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "10"))
                        (rule "add_zero_right" (formula "10") (term "0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "29") (term "1,0") (ifseqformula "30"))
                        (rule "distributeIntersection" (formula "29") (term "0"))
                        (rule "distributeIntersection" (formula "29") (term "1,0"))
                        (rule "unionEqualsEmpty" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "unionEqualsEmpty" (formula "30"))
                        (rule "andLeft" (formula "30"))
                        (rule "commuteIntersection" (formula "29") (term "0"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "17") (term "1,0") (ifseqformula "32"))
                        (rule "distributeIntersection" (formula "17") (term "0"))
                        (rule "unionEqualsEmpty" (formula "17"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "notLeft" (formula "17"))
                        (rule "eqSymm" (formula "32"))
                        (rule "distributeIntersection" (formula "17") (term "0"))
                        (rule "unionEqualsEmpty" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "29") (term "1") (ifseqformula "34"))
                        (rule "eqSymm" (formula "29"))
                        (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "26") (term "0,0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "34")))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,0"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "8") (term "1,0") (ifseqformula "36"))
                        (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "28"))
                        (rule "commute_or" (formula "19") (term "0"))
                        (rule "limit_Tree_footprint" (formula "25") (term "1,0,1"))
                        (rule "applyEq" (formula "33") (term "2,1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "30") (term "2,1,1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "25"))
                        (rule "limit_Tree_footprint" (formula "26") (term "0,0,1"))
                        (rule "applyEq" (formula "31") (term "2,0,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "33") (term "2,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "26"))
                        (rule "commute_or" (formula "29") (term "0"))
                        (rule "cnf_rightDist" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "cnf_rightDist" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "commute_or" (formula "9") (term "0"))
                        (rule "limit_Tree_footprint" (formula "15") (term "1,0,1"))
                        (rule "applyEq" (formula "33") (term "2,1,1,0") (ifseqformula "15"))
                        (rule "limit_Tree_footprint" (formula "16") (term "0,0,1"))
                        (rule "applyEq" (formula "34") (term "2,0,1,0") (ifseqformula "16"))
                        (rule "cnf_rightDist" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "29") (term "0,0") (ifseqformula "41"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "inEqSimp_gtToGeq" (formula "29") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "29") (term "0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                        (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "28") (term "0,0") (ifseqformula "41"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,0"))
                        (rule "commute_or_2" (formula "22"))
                        (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "15") (term "0,0") (ifseqformula "43"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_gtToGeq" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "15") (term "0,0") (ifseqformula "44"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                        (rule "commute_or" (formula "28"))
                        (rule "commute_or" (formula "26"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "38") (term "1,0") (ifseqformula "44"))
                        (rule "applyEq" (formula "38") (term "2,0,1,1,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "38") (term "2,1,1,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "36"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "40") (term "0,0") (ifseqformula "44"))
                        (rule "applyEq" (formula "40") (term "2,0,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "40") (term "2,1,1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "36"))
                        (rule "Definition_axiom_for_footprint_in_Tree" (formula "39") (term "0,0") (ifseqformula "44"))
                        (rule "applyEq" (formula "39") (term "2,0,1,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "39") (term "2,1,1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "36"))
                        (rule "commute_or_2" (formula "9"))
                        (rule "commute_or" (formula "34") (term "0"))
                        (rule "commute_or" (formula "14"))
                        (rule "limit_Tree_treeSet" (formula "35") (term "1,0,0,0"))
                        (rule "cnf_rightDist" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "cnf_rightDist" (formula "25"))
                        (rule "andLeft" (formula "25"))
                        (rule "cnf_rightDist" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "commute_or" (formula "33") (term "1,0"))
                        (rule "commute_or" (formula "12"))
                        (rule "commute_or" (formula "32") (term "1,0"))
                        (rule "Definition_axiom_for_treeSet_in_Tree" (formula "39") (term "1,0,0,0") (ifseqformula "48"))
                        (rule "inSetUnion" (formula "39") (term "0,0,0"))
                        (rule "inSetUnion" (formula "39") (term "1,0,0,0"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "nnf_notOr" (formula "39") (term "0,0"))
                        (rule "nnf_notOr" (formula "39") (term "1,0,0"))
                        (rule "commute_or" (formula "17") (term "1,0"))
                        (rule "commute_or" (formula "30"))
                        (rule "commute_or" (formula "27"))
                        (rule "associativeLawUnion" (formula "41") (term "0"))
                        (rule "commute_or" (formula "14"))
                        (rule "cnf_rightDist" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "commute_or" (formula "17") (term "1,0"))
                        (rule "Definition_axiom_for_treeSet_in_Tree" (formula "38") (term "1,0,0,0") (ifseqformula "47"))
                        (rule "inSetUnion" (formula "38") (term "0,0,0"))
                        (rule "inSetUnion" (formula "38") (term "1,0,0,0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "nnf_notOr" (formula "38") (term "0,0"))
                        (rule "nnf_notOr" (formula "38") (term "1,0,0"))
                        (rule "Definition_axiom_for_treeSet_in_Tree" (formula "39") (term "1") (ifseqformula "49"))
                        (rule "eqSymm" (formula "39"))
                        (rule "associativeLawUnion" (formula "41") (term "0"))
                        (rule "commute_or" (formula "12"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "self.right.heightVariant ≤ -1 + self.left.heightVariant TRUE"
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                           (rule "add_literals" (formula "11") (term "0,0"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "2"))
                           (rule "polySimp_addAssoc" (formula "1") (term "1"))
                           (rule "add_literals" (formula "1") (term "0,1"))
                           (rule "applyEq" (formula "12") (term "1,1,1") (ifseqformula "2"))
                           (rule "polySimp_addAssoc" (formula "12") (term "1,1"))
                           (rule "add_literals" (formula "12") (term "0,1,1"))
                           (rule "applyEq" (formula "15") (term "1,1,1") (ifseqformula "2"))
                           (rule "polySimp_addAssoc" (formula "15") (term "1,1"))
                           (rule "add_literals" (formula "15") (term "0,1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "closeFalse" (formula "11"))
                        )
                        (branch "self.right.heightVariant ≤ -1 + self.left.heightVariant FALSE"
                           (rule "inEqSimp_leqRight" (formula "46"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "0,0"))
                           (rule "applyEq" (formula "28") (term "1,1,1") (ifseqformula "2"))
                           (rule "polySimp_addAssoc" (formula "28") (term "1,1"))
                           (rule "add_literals" (formula "28") (term "0,1,1"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "applyEq" (formula "31") (term "1,1,1") (ifseqformula "2"))
                           (rule "polySimp_addAssoc" (formula "31") (term "1,1"))
                           (rule "add_literals" (formula "31") (term "0,1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "closeFalse" (formula "27"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "21"))
                        (branch "Case 1"
                           (rule "orRight" (formula "21"))
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "22"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "20") (term "0"))
                           (rule "inEqSimp_gtRight" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "1") (term "0,1,3,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,3,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,1,3,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "1") (term "0,1,3,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,3,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,1,3,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,3,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,3,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,3,0,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,3,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,3,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,3,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=Tree_heightVariant_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "polySimp_homoEq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "applyEq" (formula "2") (term "1,3,0,0") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "2") (term "3,0,0"))
                           (rule "add_literals" (formula "2") (term "0,3,0,0"))
                           (rule "add_zero_left" (formula "2") (term "3,0,0"))
                           (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                           (rule "simplifySelectOfStore" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "castDel" (formula "2") (term "1,0"))
                           (rule "eqSymm" (formula "2") (term "0,0"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "12") (term "1,0") (ifseqformula "19"))
                           (rule "distributeIntersection" (formula "12") (term "0"))
                           (rule "unionEqualsEmpty" (formula "12"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "notLeft" (formula "12"))
                           (rule "eqSymm" (formula "19"))
                           (rule "distributeIntersection" (formula "12") (term "0"))
                           (rule "unionEqualsEmpty" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "15") (term "0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "21")))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "9") (term "1,0") (ifseqformula "23"))
                           (rule "distributeIntersection" (formula "9") (term "0"))
                           (rule "distributeIntersection" (formula "9") (term "1,0"))
                           (rule "unionEqualsEmpty" (formula "9"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "notLeft" (formula "9"))
                           (rule "eqSymm" (formula "20"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "unionEqualsEmpty" (formula "8"))
                           (rule "andLeft" (formula "8"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "18") (term "1") (ifseqformula "22"))
                           (rule "eqSymm" (formula "18"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "19") (term "0,0") (ifseqformula "24"))
                           (rule "distributeIntersection_2" (formula "19") (term "0"))
                           (rule "distributeIntersection_2" (formula "19") (term "1,0"))
                           (rule "unionEqualsEmpty" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "unionEqualsEmpty" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "commuteIntersection" (formula "21") (term "0"))
                           (rule "commuteIntersection" (formula "20") (term "0"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "17") (term "1") (ifseqformula "26"))
                           (rule "eqSymm" (formula "17"))
                           (rule "Class_invariant_axiom_for_Tree" (formula "10") (inst "k=k") (inst "k_0=k_0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "eqSymm" (formula "10") (term "0,0,0"))
                           (rule "disjointDefinition" (formula "16") (term "1"))
                           (rule "disjointDefinition" (formula "13") (term "1,0,1"))
                           (rule "disjointDefinition" (formula "12") (term "1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "22") (term "0,0") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "32")))
                           (rule "inEqSimp_gtToGeq" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "22") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,0,0"))
                           (rule "Class_invariant_axiom_for_Tree" (formula "20") (inst "k=k") (inst "k_0=k_0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "eqSymm" (formula "20") (term "0,0,0"))
                           (rule "disjointDefinition" (formula "26") (term "1"))
                           (rule "disjointDefinition" (formula "23") (term "1,0,1"))
                           (rule "disjointDefinition" (formula "22") (term "1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "21"))
                           (rule "add_zero_right" (formula "21") (term "0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "commute_or" (formula "27") (term "0"))
                           (rule "commute_or" (formula "10") (term "0"))
                           (rule "limit_Tree_footprint" (formula "16") (term "1,0,1"))
                           (rule "applyEq" (formula "30") (term "2,1,1,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "34") (term "2,1,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "9") (term "2,1,0") (ifseqformula "16"))
                           (rule "limit_Tree_footprint" (formula "17") (term "0,0,1"))
                           (rule "applyEq" (formula "34") (term "2,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "8") (term "2,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "31") (term "2,0,1,0") (ifseqformula "17"))
                           (rule "commute_or" (formula "30") (term "0"))
                           (rule "cnf_rightDist" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "cnf_rightDist" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "commute_or" (formula "24") (term "0"))
                           (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "16") (term "0,0") (ifseqformula "42"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "36") (term "0,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "34"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "37") (term "0,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "34"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "35") (term "1,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "34"))
                           (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "17") (term "0,0") (ifseqformula "42"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_gtToGeq" (formula "17") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "17") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                           (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "28") (term "0,0") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,0,0"))
                           (rule "commute_or_2" (formula "10"))
                           (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "29") (term "0,0") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_gtToGeq" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "29") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                           (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "29") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                           (rule "commute_or" (formula "15"))
                           (rule "commute_or" (formula "13"))
                           (rule "Definition_axiom_for_treeSet_in_Tree" (formula "31") (term "1,0,0,0") (ifseqformula "40"))
                           (rule "inSetUnion" (formula "31") (term "0,0,0"))
                           (rule "inSetUnion" (formula "31") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "nnf_notOr" (formula "31") (term "0,0"))
                           (rule "nnf_notOr" (formula "31") (term "1,0,0"))
                           (rule "commute_or_2" (formula "24"))
                           (rule "associativeLawUnion" (formula "34") (term "0"))
                           (rule "limit_Tree_footprint" (formula "30") (term "1,0,1"))
                           (rule "applyEq" (formula "35") (term "2,1,0") (ifseqformula "30"))
                           (rule "applyEq" (formula "23") (term "2,1,0") (ifseqformula "30"))
                           (rule "limit_Tree_footprint" (formula "31") (term "0,0,1"))
                           (rule "applyEq" (formula "22") (term "2,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "36") (term "2,1,0,0") (ifseqformula "31"))
                           (rule "cnf_rightDist" (formula "27"))
                           (rule "andLeft" (formula "27"))
                           (rule "cnf_rightDist" (formula "26"))
                           (rule "andLeft" (formula "26"))
                           (rule "limit_Tree_treeSet" (formula "36") (term "1,0,0,0"))
                           (rule "cnf_rightDist" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "cnf_rightDist" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "commute_or" (formula "18") (term "1,0"))
                           (rule "commute_or" (formula "19") (term "1,0"))
                           (rule "Definition_axiom_for_treeSet_in_Tree" (formula "39") (term "1,0,0,0") (ifseqformula "49"))
                           (rule "inSetUnion" (formula "39") (term "0,0,0"))
                           (rule "inSetUnion" (formula "39") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "nnf_notOr" (formula "39") (term "0,0"))
                           (rule "nnf_notOr" (formula "39") (term "1,0,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "self.right.heightVariant ≤ -1 + self.left.heightVariant TRUE"
                              (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "2"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1"))
                              (rule "add_literals" (formula "1") (term "0,1"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "self.right.heightVariant ≤ -1 + self.left.heightVariant FALSE"
                              (rule "inEqSimp_leqRight" (formula "45"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "applyEq" (formula "29") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "polySimp_addAssoc" (formula "29") (term "1,0,1"))
                              (rule "add_literals" (formula "29") (term "0,1,0,1"))
                              (rule "applyEq" (formula "31") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "polySimp_addAssoc" (formula "31") (term "1,0,1"))
                              (rule "add_literals" (formula "31") (term "0,1,0,1"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "21"))
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "22"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "1"))
                           (rule "dismissNonSelectedField" (formula "21") (term "1,1"))
                           (rule "dismissNonSelectedField" (formula "20") (term "0"))
                           (rule "inEqSimp_gtRight" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "1") (term "0,1,3,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,3,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,1,3,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "1") (term "0,1,3,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,3,0,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,1,3,0,1,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,3,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,3,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,3,0,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,3,0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,3,0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,1,3,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=Tree_heightVariant_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "polySimp_homoEq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "applyEq" (formula "2") (term "1,3,0,0") (ifseqformula "1"))
                           (rule "polySimp_addAssoc" (formula "2") (term "3,0,0"))
                           (rule "add_literals" (formula "2") (term "0,3,0,0"))
                           (rule "add_zero_left" (formula "2") (term "3,0,0"))
                           (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_heightVariant_1"))
                           (rule "simplifySelectOfStore" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "castDel" (formula "2") (term "1,0"))
                           (rule "eqSymm" (formula "2") (term "0,0"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "16") (term "1") (ifseqformula "21"))
                           (rule "eqSymm" (formula "16"))
                           (rule "Class_invariant_axiom_for_Tree" (formula "10") (inst "k=k") (inst "k_0=k_0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "eqSymm" (formula "10") (term "0,0,0"))
                           (rule "disjointDefinition" (formula "16") (term "1"))
                           (rule "disjointDefinition" (formula "13") (term "1,0,1"))
                           (rule "disjointDefinition" (formula "12") (term "1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "24") (term "0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "22"))
                           (rule "commuteIntersection" (formula "24") (term "0"))
                           (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "21") (term "0,0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")))
                           (rule "inEqSimp_gtToGeq" (formula "21") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "21") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "21") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,0,0"))
                           (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "20") (term "0,0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "25")))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "20") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "20") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "18") (term "1,0") (ifseqformula "25"))
                           (rule "distributeIntersection" (formula "18") (term "0"))
                           (rule "distributeIntersection" (formula "18") (term "1,0"))
                           (rule "unionEqualsEmpty" (formula "18"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "eqSymm" (formula "25"))
                           (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "unionEqualsEmpty" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "Class_invariant_axiom_for_Tree" (formula "19") (inst "k=k") (inst "k_0=k_0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "eqSymm" (formula "19") (term "0,0,0"))
                           (rule "disjointDefinition" (formula "25") (term "1"))
                           (rule "disjointDefinition" (formula "22") (term "1,0,1"))
                           (rule "disjointDefinition" (formula "21") (term "1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "20"))
                           (rule "add_zero_right" (formula "20") (term "0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "29") (term "1") (ifseqformula "32"))
                           (rule "eqSymm" (formula "29"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "8") (term "1,0") (ifseqformula "34"))
                           (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "28"))
                           (rule "commute_or" (formula "9") (term "0"))
                           (rule "limit_Tree_footprint" (formula "15") (term "1,0,1"))
                           (rule "applyEq" (formula "29") (term "2,1,1,0") (ifseqformula "15"))
                           (rule "limit_Tree_footprint" (formula "16") (term "0,0,1"))
                           (rule "applyEq" (formula "30") (term "2,0,1,0") (ifseqformula "16"))
                           (rule "cnf_rightDist" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "commute_or" (formula "30") (term "0"))
                           (rule "cnf_rightDist" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "commute_or" (formula "30") (term "0"))
                           (rule "commute_or" (formula "23") (term "0"))
                           (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "15") (term "0,0") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                           (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "16") (term "0,0") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_gtToGeq" (formula "16") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "16") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                           (rule "Definition_axiom_for_footprint_in_Tree" (formula "34") (term "0,0") (ifseqformula "36"))
                           (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                           (rule "commuteIntersection" (formula "34") (term "0"))
                           (rule "commute_or_2" (formula "9"))
                           (rule "commute_or" (formula "14"))
                           (rule "commute_or" (formula "12"))
                           (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "27") (term "0,0") (ifseqformula "36"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "27") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "27") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "27") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,0,0"))
                           (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "28") (term "0,0") (ifseqformula "36"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_gtToGeq" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,0,0"))
                           (rule "commute_or_2" (formula "23"))
                           (rule "limit_Tree_footprint" (formula "29") (term "1,0,1"))
                           (rule "applyEq" (formula "34") (term "2,1,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "22") (term "2,1,0") (ifseqformula "29"))
                           (rule "limit_Tree_footprint" (formula "30") (term "0,0,1"))
                           (rule "applyEq" (formula "21") (term "2,1,0") (ifseqformula "30"))
                           (rule "applyEq" (formula "35") (term "2,0,1,0") (ifseqformula "30"))
                           (rule "cnf_rightDist" (formula "26"))
                           (rule "andLeft" (formula "26"))
                           (rule "cnf_rightDist" (formula "25"))
                           (rule "andLeft" (formula "25"))
                           (rule "Definition_axiom_for_treeSet_in_Tree" (formula "35") (term "1,0,0,0") (ifseqformula "42"))
                           (rule "inSetUnion" (formula "35") (term "0,0,0"))
                           (rule "inSetUnion" (formula "35") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "nnf_notOr" (formula "35") (term "0,0"))
                           (rule "nnf_notOr" (formula "35") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "Definition_axiom_for_treeSet_in_Tree" (formula "35") (term "1,0,0,0") (ifseqformula "41"))
                           (rule "inSetUnion" (formula "35") (term "0,0,0"))
                           (rule "inSetUnion" (formula "35") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "nnf_notOr" (formula "35") (term "0,0"))
                           (rule "nnf_notOr" (formula "35") (term "1,0,0"))
                           (rule "cnf_rightDist" (formula "11"))
                           (rule "andLeft" (formula "11"))
                           (rule "commute_or" (formula "17") (term "1,0"))
                           (rule "commute_or" (formula "18") (term "1,0"))
                           (rule "commute_or" (formula "30"))
                           (rule "commute_or" (formula "31") (term "1,0"))
                           (rule "commute_or" (formula "28"))
                           (rule "commute_or" (formula "15"))
                           (rule "commute_or" (formula "12"))
                           (rule "associativeLawUnion" (formula "38") (term "0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "self.right.heightVariant ≤ -1 + self.left.heightVariant TRUE"
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "0,0"))
                              (rule "applyEq" (formula "12") (term "1,1,1") (ifseqformula "2"))
                              (rule "polySimp_addAssoc" (formula "12") (term "1,1"))
                              (rule "add_literals" (formula "12") (term "0,1,1"))
                              (rule "applyEq" (formula "15") (term "1,1,1") (ifseqformula "2"))
                              (rule "polySimp_addAssoc" (formula "15") (term "1,1"))
                              (rule "add_literals" (formula "15") (term "0,1,1"))
                              (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "2"))
                              (rule "polySimp_addAssoc" (formula "1") (term "1"))
                              (rule "add_literals" (formula "1") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "self.right.heightVariant ≤ -1 + self.left.heightVariant FALSE"
                              (rule "inEqSimp_leqRight" (formula "41"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "30") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "polySimp_addAssoc" (formula "30") (term "1,0,1"))
                              (rule "add_literals" (formula "30") (term "0,1,0,1"))
                              (rule "applyEq" (formula "28") (term "1,1,0,1") (ifseqformula "2"))
                              (rule "polySimp_addAssoc" (formula "28") (term "1,0,1"))
                              (rule "add_literals" (formula "28") (term "0,1,0,1"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "closeTrue" (formula "20"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "allRight" (formula "20") (inst "sk=f_0"))
                  (rule "allRight" (formula "20") (inst "sk=o_0"))
                  (rule "orRight" (formula "20"))
                  (rule "orRight" (formula "20"))
                  (rule "eqSymm" (formula "22"))
                  (rule "inEqSimp_gtToGeq" (formula "22") (term "0,1,3,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,3,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,1,3,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,1,3,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,3,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,1,3,0,0"))
                  (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "23"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (t_3 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (t_1 = null)"
         (rule "false_right" (formula "20"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Precondition"
   (rule "andRight" (formula "18"))
   (branch "Case 1"
      (rule "andRight" (formula "18"))
      (branch "Case 1"
         (rule "andRight" (formula "18"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "4")))
            (rule "closeTrue" (formula "18"))
         )
         (branch "Case 2"
            (rule "andRight" (formula "18"))
            (branch "Case 1"
               (rule "orRight" (formula "18"))
               (rule "andRight" (formula "19"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "19"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "notLeft" (formula "5"))
                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "disjointDefinition" (formula "19"))
                  (rule "close" (formula "19") (ifseqformula "6"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "19"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "notLeft" (formula "5"))
                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "19")))
                  (rule "closeFalse" (formula "7"))
               )
            )
            (branch "Case 2"
               (rule "orRight" (formula "18"))
               (rule "andRight" (formula "19"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "19"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "disjointDefinition" (formula "19"))
                  (rule "close" (formula "19") (ifseqformula "10"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "19"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "18")))
                  (rule "closeFalse" (formula "11"))
               )
            )
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "18"))
      )
   )
   (branch "Case 2"
      (rule "andRight" (formula "18"))
      (branch "Case 1"
         (rule "andRight" (formula "18"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
            (rule "closeTrue" (formula "18"))
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "2")))
            (rule "closeTrue" (formula "18"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "3")))
         (rule "closeTrue" (formula "18"))
      )
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "19"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "true_left" (formula "20"))
   (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "18"))
   (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=Tree_heightVariant_0"))
   (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "17"))
   (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "17"))
   (rule "simplifySelectOfAnon" (formula "17"))
    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfSingleton" (formula "17") (term "0,0"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "applyEqReverse" (formula "20") (term "0,1") (ifseqformula "17"))
   (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "17"))
   (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
   (rule "hideAuxiliaryEq" (formula "17"))
   (rule "pullOutSelect" (formula "19") (term "1,1") (inst "selectSK=Tree_heightVariant_1"))
   (rule "simplifySelectOfAnon" (formula "19"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "elementOfSingleton" (formula "19") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "pullOutSelect" (formula "18") (term "0,0") (inst "selectSK=Tree_left_0"))
   (rule "applyEq" (formula "19") (term "1,1,1") (ifseqformula "18"))
   (rule "simplifySelectOfAnon" (formula "18"))
    (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfSingleton" (formula "18") (term "0,0"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "applyEqReverse" (formula "19") (term "0,0") (ifseqformula "18"))
   (rule "applyEqReverse" (formula "19") (term "1,1,1") (ifseqformula "18"))
   (rule "hideAuxiliaryEq" (formula "18"))
   (rule "pullOutSelect" (formula "20") (term "0,0") (inst "selectSK=Tree_right_0"))
   (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "20"))
   (rule "applyEq" (formula "19") (term "1,2,0") (ifseqformula "20"))
   (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "20"))
   (rule "applyEq" (formula "19") (term "1,0,0,1,1,0,0") (ifseqformula "20"))
   (rule "applyEq" (formula "19") (term "0,0,0,1,0,0") (ifseqformula "20"))
   (rule "simplifySelectOfAnon" (formula "20"))
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "eqSymm" (formula "19") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "20") (term "0,0"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "applyEqReverse" (formula "19") (term "1,2,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "19") (term "1,0,0,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "19") (term "0,0,0,1,0,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "19") (term "1,1,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "19") (term "1,0,0,1,1,0,0") (ifseqformula "20"))
   (rule "applyEqReverse" (formula "21") (term "0,0") (ifseqformula "20"))
   (rule "hideAuxiliaryEq" (formula "20"))
   (rule "eqSymm" (formula "19") (term "0,0,0"))
   (rule "pullOutSelect" (formula "18") (term "1,1") (inst "selectSK=Tree_heightVariant_2"))
   (rule "simplifySelectOfAnon" (formula "18"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "elementOfSingleton" (formula "18") (term "0,0,0"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "cnf_rightDist" (formula "20") (term "0,0"))
   (rule "commute_or" (formula "20") (term "0,0,0"))
   (rule "commute_or" (formula "20") (term "1,0,0"))
   (rule "cnf_rightDist" (formula "18") (term "0,0"))
   (rule "commute_or" (formula "18") (term "1,0,0"))
   (rule "commute_or" (formula "18") (term "0,0,0"))
   (rule "ifUnfold" (formula "25") (term "1") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "b"))
   (rule "inequality_comparison_simple" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "replace_known_left" (formula "25") (term "0,0,1,0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "ifSplit" (formula "25"))
   (branch "if b true"
       (builtin "One Step Simplification" (formula "26"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if b false"
       (builtin "One Step Simplification" (formula "26"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "25") (term "1"))
       (builtin "JML assert" (formula "25"))
      (branch "Validity"
         (rule "orRight" (formula "25"))
          (builtin "One Step Simplification" (formula "26"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "replaceKnownSelect_taclet2_3" (formula "25") (term "0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "25") (term "0"))
         (rule "replaceKnownSelect_taclet2_3" (formula "26") (term "1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "26") (term "1,0"))
         (rule "replace_known_right" (formula "18") (term "0,0,0,0,0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "notLeft" (formula "5"))
         (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_gtToGeq" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0"))
         (rule "inEqSimp_gtToGeq" (formula "20") (term "1"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
         (rule "inEqSimp_gtToGeq" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1"))
         (rule "mul_literals" (formula "20") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1"))
         (rule "polySimp_rightDist" (formula "18") (term "1"))
         (rule "mul_literals" (formula "18") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1"))
         (rule "limit_Tree_footprint" (formula "26") (term "0"))
         (rule "equalityToElementOfRight" (formula "27") (inst "ov=ov") (inst "fv=fv"))
         (rule "allRight" (formula "27") (inst "sk=ov_0"))
         (rule "allRight" (formula "27") (inst "sk=fv_0"))
         (rule "equiv_right" (formula "27"))
         (branch "Case '->'"
            (rule "ifthenelse_split" (formula "21") (term "0"))
            (branch " (¬self.right = null ∨ self.right = self) ∧ (self.right = self ∨ ¬self.right.<created> = TRUE) TRUE"
               (rule "andLeft" (formula "21"))
               (rule "applyEqReverse" (formula "24") (term "1,1,1") (ifseqformula "23"))
               (rule "hideAuxiliaryEq" (formula "23"))
               (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1"))
               (rule "mul_literals" (formula "23") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
               (rule "ifthenelse_split" (formula "19") (term "0"))
               (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                  (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "20"))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "inEqSimp_homoInEq1" (formula "20"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "mul_literals" (formula "20") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                  (rule "equiv_left" (formula "10"))
                  (branch "Case 1"
                     (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "cut_direct" (formula "12") (term "0"))
                     (branch "CUT: self.right = null TRUE"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "12"))
                        (rule "eqSymm" (formula "20"))
                        (rule "close" (formula "24") (ifseqformula "20"))
                     )
                     (branch "CUT: self.right = null FALSE"
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "cut_direct" (formula "21") (term "0"))
                        (branch "CUT: self.right = self TRUE"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "10") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "25"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "27"))
                           (rule "close" (formula "24") (ifseqformula "3"))
                        )
                        (branch "CUT: self.right = self FALSE"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "26"))
                           (rule "close" (formula "24") (ifseqformula "3"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "21") (term "1") (ifseqformula "18"))
                     (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "18"))
                     (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "10"))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "10"))
                     (rule "eqSymm" (formula "23"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "10"))
                     (rule "eqSymm" (formula "18"))
                     (rule "close" (formula "23") (ifseqformula "18"))
                  )
               )
               (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                  (rule "orRight" (formula "26"))
                  (rule "notRight" (formula "27"))
                  (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "20"))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "equiv_left" (formula "11"))
                  (branch "Case 1"
                     (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "cut_direct" (formula "13") (term "0"))
                     (branch "CUT: self.right = null TRUE"
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "20"))
                        (rule "close" (formula "25") (ifseqformula "13"))
                     )
                     (branch "CUT: self.right = null FALSE"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "cut_direct" (formula "21") (term "0"))
                        (branch "CUT: self.right = self TRUE"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "12") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "21"))
                           (rule "inEqSimp_homoInEq0" (formula "22"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "1,1,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0"))
                           (rule "add_zero_right" (formula "22") (term "0"))
                           (rule "qeq_literals" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                        (branch "CUT: self.right = self FALSE"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "26"))
                           (rule "close" (formula "24") (ifseqformula "4"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "18"))
                     (rule "close" (formula "25") (ifseqformula "11"))
                  )
               )
            )
            (branch " (¬self.right = null ∨ self.right = self) ∧ (self.right = self ∨ ¬self.right.<created> = TRUE) FALSE"
               (rule "applyEqReverse" (formula "22") (term "1,1,1") (ifseqformula "21"))
               (rule "hideAuxiliaryEq" (formula "21"))
               (rule "andRight" (formula "24"))
               (branch "Case 1"
                  (rule "orRight" (formula "24"))
                  (rule "notRight" (formula "24"))
                  (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "21"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "21"))
                  (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                  (rule "limit_java_lang_Object__inv_" (formula "11") (term "1"))
                  (rule "limit_Tree_footprint" (formula "15") (term "1"))
                  (rule "ifthenelse_split" (formula "17") (term "0"))
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "19") (term "1,1") (ifseqformula "18"))
                     (rule "hideAuxiliaryEq" (formula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "18"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1"))
                     (rule "polySimp_rightDist" (formula "18") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                     (rule "mul_literals" (formula "18") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                     (rule "equiv_left" (formula "11"))
                     (branch "Case 1"
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                        (rule "pullOutSelect" (formula "2") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfAnon" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "commute_or" (formula "3"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "cut_direct" (formula "19") (term "0"))
                           (branch "CUT: self.left = self TRUE"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "19"))
                              (rule "inEqSimp_homoInEq0" (formula "20"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                              (rule "add_literals" (formula "20") (term "1,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0"))
                              (rule "add_zero_right" (formula "20") (term "0"))
                              (rule "qeq_literals" (formula "20"))
                              (rule "closeFalse" (formula "20"))
                           )
                           (branch "CUT: self.left = self FALSE"
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "27"))
                              (rule "close" (formula "22") (ifseqformula "5"))
                           )
                        )
                        (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "commute_or" (formula "2"))
                           (rule "cut_direct" (formula "19") (term "0"))
                           (branch "CUT: self.left = self TRUE"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "26") (term "1,2") (ifseqformula "19"))
                              (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "19"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "19"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "19"))
                              (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "19"))
                              (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "19"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "19"))
                              (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "19"))
                              (rule "inEqSimp_homoInEq0" (formula "20"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                              (rule "add_literals" (formula "20") (term "1,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0"))
                              (rule "add_zero_right" (formula "20") (term "0"))
                              (rule "qeq_literals" (formula "20"))
                              (rule "closeFalse" (formula "20"))
                           )
                           (branch "CUT: self.left = self FALSE"
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "26"))
                              (rule "close" (formula "22") (ifseqformula "5"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                        (rule "selectCreatedOfAnonAsFormula" (formula "2") (term "1"))
                        (rule "shift_paren_or" (formula "2"))
                        (rule "cut_direct" (formula "17") (term "0"))
                        (branch "CUT: self.left = self TRUE"
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "18"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "1,1,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0"))
                           (rule "add_zero_right" (formula "18") (term "0"))
                           (rule "qeq_literals" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                        (branch "CUT: self.left = self FALSE"
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "notLeft" (formula "17"))
                           (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "25"))
                           (rule "close" (formula "20") (ifseqformula "5"))
                        )
                     )
                  )
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                     (rule "orRight" (formula "21"))
                     (rule "notRight" (formula "22"))
                     (rule "applyEqReverse" (formula "19") (term "1,1") (ifseqformula "18"))
                     (rule "hideAuxiliaryEq" (formula "18"))
                     (rule "equiv_left" (formula "12"))
                     (branch "Case 1"
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                        (rule "selectCreatedOfAnonAsFormula" (formula "3") (term "1"))
                        (rule "shift_paren_or" (formula "3"))
                        (rule "cut_direct" (formula "3") (term "0,0"))
                        (branch "CUT: ov_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                            (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "26") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "23") (term "0,1,0,0,0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "26")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "22")) (ifInst ""  (formula "12")))
                           (rule "disjointDefinition" (formula "23") (term "0,0"))
                           (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "disjointWithSingleton2" (formula "23") (term "0"))
                           (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                           (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "23"))
                           (rule "applyEq" (formula "4") (term "2") (ifseqformula "23"))
                           (rule "close" (formula "27") (ifseqformula "4"))
                        )
                        (branch "CUT: ov_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "selectCreatedOfAnonAsFormula" (formula "4"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "cut_direct" (formula "3") (term "0"))
                           (branch "CUT: ov_0.<created> = TRUE TRUE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "27") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "22")))
                              (rule "disjointDefinition" (formula "23") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "disjointWithSingleton2" (formula "23") (term "0"))
                              (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                              (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "23"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "23"))
                              (rule "close" (formula "28") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0.<created> = TRUE FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "28") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "22")))
                              (rule "disjointDefinition" (formula "23") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "disjointWithSingleton2" (formula "23") (term "0"))
                              (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                              (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "23"))
                              (rule "close" (formula "29") (ifseqformula "4"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                        (rule "selectCreatedOfAnonAsFormula" (formula "3") (term "1"))
                        (rule "shift_paren_or" (formula "3"))
                        (rule "cut_direct" (formula "3") (term "0,0"))
                        (branch "CUT: ov_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "15"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                            (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "26") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "21") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "20")))
                           (rule "disjointDefinition" (formula "21") (term "0,0"))
                           (rule "measuredByCheckEmpty" (formula "21") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "disjointWithSingleton2" (formula "21") (term "0"))
                           (rule "elementOfSetMinus" (formula "21") (term "0,0"))
                           (rule "disjointAllFields" (formula "21") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "applyEq" (formula "4") (term "2") (ifseqformula "21"))
                           (rule "close" (formula "27") (ifseqformula "4"))
                        )
                        (branch "CUT: ov_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "27")))
                           (rule "true_left" (formula "15"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "simplifySelectOfAnon" (formula "4"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                           (rule "ifthenelse_negated" (formula "4") (term "0"))
                           (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                           (rule "ifEqualsTRUE" (formula "4"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "hideAuxiliaryEqConcrete" (formula "5"))
                           (rule "cnf_rightDist" (formula "4"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "commute_or" (formula "4"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "cut_direct" (formula "3") (term "0"))
                           (branch "CUT: ov_0.<created> = TRUE TRUE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "27") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "21") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "21") (term "0,1,0,0,0,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "20")) (ifInst ""  (formula "12")))
                              (rule "disjointDefinition" (formula "21") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "21") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "disjointWithSingleton2" (formula "21") (term "0"))
                              (rule "elementOfSetMinus" (formula "21") (term "0,0"))
                              (rule "disjointAllFields" (formula "21") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "21"))
                              (rule "close" (formula "28") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0.<created> = TRUE FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "28") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "21") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "20")) (ifInst ""  (formula "12")))
                              (rule "disjointDefinition" (formula "21") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "21") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "disjointWithSingleton2" (formula "21") (term "0"))
                              (rule "elementOfSetMinus" (formula "21") (term "0,0"))
                              (rule "disjointAllFields" (formula "21") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "21"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "21"))
                              (rule "close" (formula "29") (ifseqformula "4"))
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "orRight" (formula "24"))
                  (rule "notRight" (formula "25"))
                  (rule "ifthenelse_split" (formula "20") (term "0"))
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "inEqSimp_homoInEq1" (formula "21"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                     (rule "equiv_left" (formula "11"))
                     (branch "Case 1"
                        (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "cut_direct" (formula "13") (term "0"))
                        (branch "CUT: self.right = null TRUE"
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "13"))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                           (rule "eqSymm" (formula "23"))
                           (rule "limit_Tree_footprint" (formula "17") (term "1"))
                           (rule "limit_java_lang_Object__inv_" (formula "12"))
                           (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "13")))
                           (rule "true_left" (formula "12"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "pullOutSelect" (formula "2") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "simplifySelectOfAnon" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "commute_or" (formula "3"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "cut_direct" (formula "20") (term "0"))
                              (branch "CUT: self.left = self TRUE"
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEq" (formula "11") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "9") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "20"))
                                 (rule "applyEq" (formula "27") (term "1,2") (ifseqformula "20"))
                                 (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                              (branch "CUT: self.left = self FALSE"
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "28"))
                                 (rule "close" (formula "23") (ifseqformula "5"))
                              )
                           )
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_or" (formula "2"))
                              (rule "cut_direct" (formula "20") (term "0"))
                              (branch "CUT: self.left = self TRUE"
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "20"))
                                 (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "26") (term "1,2") (ifseqformula "20"))
                                 (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                              (branch "CUT: self.left = self FALSE"
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "27"))
                                 (rule "close" (formula "23") (ifseqformula "5"))
                              )
                           )
                        )
                        (branch "CUT: self.right = null FALSE"
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "selectCreatedOfAnonAsFormula" (formula "2") (term "1"))
                           (rule "shift_paren_or" (formula "2"))
                           (rule "cut_direct" (formula "21") (term "0"))
                           (branch "CUT: self.left = self TRUE"
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "21"))
                              (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "21"))
                              (rule "applyEq" (formula "28") (term "1") (ifseqformula "21"))
                              (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "1,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0"))
                              (rule "add_zero_right" (formula "22") (term "0"))
                              (rule "qeq_literals" (formula "22"))
                              (rule "closeFalse" (formula "22"))
                           )
                           (branch "CUT: self.left = self FALSE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "31"))
                              (rule "close" (formula "25") (ifseqformula "5"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "applyEq" (formula "21") (term "1") (ifseqformula "11"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "11"))
                        (rule "applyEq" (formula "22") (term "1") (ifseqformula "11"))
                        (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "11"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                        (rule "eqSymm" (formula "23"))
                        (rule "limit_Tree_footprint" (formula "15") (term "1"))
                        (rule "limit_java_lang_Object__inv_" (formula "22"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                        (rule "selectCreatedOfAnonAsFormula" (formula "2") (term "1"))
                        (rule "shift_paren_or" (formula "2"))
                        (rule "cut_direct" (formula "18") (term "0"))
                        (branch "CUT: self.left = self TRUE"
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "add_zero_right" (formula "19") (term "0"))
                           (rule "qeq_literals" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                        (branch "CUT: self.left = self FALSE"
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "26"))
                           (rule "close" (formula "21") (ifseqformula "5"))
                        )
                     )
                  )
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                     (rule "orRight" (formula "25"))
                     (rule "notRight" (formula "26"))
                     (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "equiv_left" (formula "12"))
                     (branch "Case 1"
                        (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "cut_direct" (formula "14") (term "0"))
                        (branch "CUT: self.right = null TRUE"
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "13") (term "1") (ifseqformula "14"))
                           (rule "applyEq" (formula "12") (term "1") (ifseqformula "14"))
                           (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "14"))
                           (rule "eqSymm" (formula "25"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "14"))
                           (rule "eqSymm" (formula "24"))
                           (rule "limit_java_lang_Object__inv_" (formula "13"))
                           (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
                           (rule "true_left" (formula "13"))
                           (rule "limit_Tree_footprint" (formula "18") (term "1"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "commute_or" (formula "4"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "4"))
                              (rule "notLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                              (rule "replaceKnownSelect_taclet001110012_10" (formula "4") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0001110012_11" (formula "4") (term "0,1"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1,2") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "29") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "23")))
                              (rule "disjointDefinition" (formula "24") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "disjointWithSingleton2" (formula "24") (term "0"))
                              (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                              (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "24"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "24"))
                              (rule "close" (formula "30") (ifseqformula "4"))
                           )
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_or" (formula "3"))
                              (rule "cut_direct" (formula "24") (term "0,0"))
                              (branch "CUT: ov_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "false_right" (formula "25"))
                                 (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "1,2") (ifseqformula "6"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "27")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "6"))
                                 (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "18") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "24") (term "0,1,0,0,0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "27")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "23")) (ifInst ""  (formula "12")))
                                 (rule "disjointDefinition" (formula "24") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "disjointWithSingleton2" (formula "24") (term "0"))
                                 (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "5"))
                                 (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                                 (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "24"))
                                 (rule "close" (formula "28") (ifseqformula "4"))
                              )
                              (branch "CUT: ov_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "notRight" (formula "25"))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "1,2") (ifseqformula "6"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "28")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                 (rule "replaceKnownSelect_taclet001110012_10" (formula "4") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1001110012_11" (formula "4") (term "0,1"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "6"))
                                 (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "28") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "24") (term "0,1,0,0,0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "23")) (ifInst ""  (formula "12")))
                                 (rule "disjointDefinition" (formula "24") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "disjointWithSingleton2" (formula "24") (term "0"))
                                 (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                                 (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "24"))
                                 (rule "close" (formula "29") (ifseqformula "4"))
                              )
                           )
                        )
                        (branch "CUT: self.right = null FALSE"
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "selectCreatedOfAnonAsFormula" (formula "3") (term "1"))
                           (rule "shift_paren_or" (formula "3"))
                           (rule "cut_direct" (formula "3") (term "0,0"))
                           (branch "CUT: ov_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "32")))
                              (rule "true_left" (formula "10"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "27")))
                              (rule "true_left" (formula "19"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "18") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "26") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "26") (term "0,1,0,0,0,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "25")) (ifInst ""  (formula "12")))
                              (rule "disjointDefinition" (formula "26") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "26") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "disjointWithSingleton2" (formula "26") (term "0"))
                              (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "18"))
                              (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "5"))
                              (rule "elementOfSetMinus" (formula "26") (term "0,0"))
                              (rule "disjointAllFields" (formula "26") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "26"))
                              (rule "close" (formula "33") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1") (ifseqformula "6"))
                              (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "10"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                              (rule "simplifySelectOfAnon" (formula "4"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "28")))
                              (rule "ifthenelse_negated" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                              (rule "ifEqualsTRUE" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "hideAuxiliaryEqConcrete" (formula "5"))
                              (rule "cnf_rightDist" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "commute_or" (formula "4"))
                              (rule "cut_direct" (formula "3") (term "0"))
                              (branch "CUT: ov_0.<created> = TRUE TRUE"
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "33") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,1,0,0,0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "25")) (ifInst ""  (formula "12")))
                                 (rule "disjointDefinition" (formula "26") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "26") (term "1,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "disjointWithSingleton2" (formula "26") (term "0"))
                                 (rule "elementOfSetMinus" (formula "26") (term "0,0"))
                                 (rule "disjointAllFields" (formula "26") (term "0,0,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "26"))
                                 (rule "close" (formula "34") (ifseqformula "4"))
                              )
                              (branch "CUT: ov_0.<created> = TRUE FALSE"
                                  (builtin "One Step Simplification" (formula "3"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "34") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_right" (formula "26") (term "0,0,0,0,0,0,0") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "25")) (ifInst ""  (formula "12")))
                                 (rule "disjointDefinition" (formula "26") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "26") (term "1,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "disjointWithSingleton2" (formula "26") (term "0"))
                                 (rule "elementOfSetMinus" (formula "26") (term "0,0"))
                                 (rule "disjointAllFields" (formula "26") (term "0,0,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "26"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "26"))
                                 (rule "close" (formula "35") (ifseqformula "4"))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "applyEq" (formula "22") (term "1") (ifseqformula "12"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "12"))
                        (rule "eqSymm" (formula "25"))
                        (rule "applyEq" (formula "21") (term "1") (ifseqformula "12"))
                        (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "12"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "12"))
                        (rule "eqSymm" (formula "24"))
                        (rule "limit_java_lang_Object__inv_" (formula "22"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "true_left" (formula "1"))
                        (rule "limit_Tree_footprint" (formula "16") (term "1"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                        (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "commute_or" (formula "4"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE TRUE"
                           (rule "andLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1,2") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                           (rule "replaceKnownSelect_taclet11110012_10" (formula "4") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet011110012_11" (formula "4") (term "0,1"))
                           (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")))
                           (rule "true_left" (formula "4"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                            (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "16") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "22") (term "0,1,0,0,0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                           (rule "disjointDefinition" (formula "22") (term "0,0"))
                           (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "disjointWithSingleton2" (formula "22") (term "0"))
                           (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "16"))
                           (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                           (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEq" (formula "4") (term "2") (ifseqformula "22"))
                           (rule "close" (formula "30") (ifseqformula "4"))
                        )
                        (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "commute_or" (formula "3"))
                           (rule "cut_direct" (formula "22") (term "0,0"))
                           (branch "CUT: ov_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "false_right" (formula "23"))
                              (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,1") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")))
                              (rule "true_left" (formula "5"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "27") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "replace_known_right" (formula "22") (term "0,0,0,0,0,0,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                              (rule "disjointDefinition" (formula "22") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "disjointWithSingleton2" (formula "22") (term "0"))
                              (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                              (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "22"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "22"))
                              (rule "close" (formula "28") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "notRight" (formula "23"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,2") (ifseqformula "6"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                              (rule "replaceKnownSelect_taclet11110012_10" (formula "4") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet111110012_11" (formula "4") (term "0,1"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "28") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "22") (term "0,1,0,0,0,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                              (rule "disjointDefinition" (formula "22") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "disjointWithSingleton2" (formula "22") (term "0"))
                              (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                              (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "22"))
                              (rule "close" (formula "29") (ifseqformula "4"))
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Case '<-'"
            (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "ifthenelse_split" (formula "21") (term "0"))
            (branch " (¬self.right = null ∨ self.right = self) ∧ (self.right = self ∨ ¬self.right.<created> = TRUE) TRUE"
               (rule "andLeft" (formula "21"))
               (rule "applyEqReverse" (formula "24") (term "1,1,1") (ifseqformula "23"))
               (rule "hideAuxiliaryEq" (formula "23"))
               (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1"))
               (rule "mul_literals" (formula "23") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
               (rule "ifthenelse_split" (formula "19") (term "0"))
               (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                  (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "20"))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "inEqSimp_homoInEq1" (formula "20"))
                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "mul_literals" (formula "20") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                  (rule "equiv_left" (formula "10"))
                  (branch "Case 1"
                     (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "cut_direct" (formula "12") (term "0"))
                     (branch "CUT: self.right = null TRUE"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "12"))
                        (rule "eqSymm" (formula "20"))
                        (rule "close" (formula "25") (ifseqformula "20"))
                     )
                     (branch "CUT: self.right = null FALSE"
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "17"))
                        (rule "cut_direct" (formula "21") (term "0"))
                        (branch "CUT: self.right = self TRUE"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "21"))
                           (rule "applyEq" (formula "10") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "25") (term "1,2") (ifseqformula "21"))
                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "28"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "30"))
                           (rule "close" (formula "24") (ifseqformula "3"))
                        )
                        (branch "CUT: self.right = self FALSE"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "27"))
                           (rule "close" (formula "24") (ifseqformula "3"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "10"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "18"))
                     (rule "eqSymm" (formula "24"))
                     (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "notLeft" (formula "16"))
                     (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "26"))
                     (rule "close" (formula "20") (ifseqformula "3"))
                  )
               )
               (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                  (rule "orRight" (formula "26"))
                  (rule "notRight" (formula "27"))
                  (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "20"))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "equiv_left" (formula "11"))
                  (branch "Case 1"
                     (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "cut_direct" (formula "13") (term "0"))
                     (branch "CUT: self.right = null TRUE"
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
                        (rule "eqSymm" (formula "20"))
                        (rule "close" (formula "26") (ifseqformula "20"))
                     )
                     (branch "CUT: self.right = null FALSE"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "disjointNotInOtherLocset1" (formula "2") (ifseqformula "18"))
                        (rule "cut_direct" (formula "21") (term "0"))
                        (branch "CUT: self.right = self TRUE"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "21"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "25") (term "1,2") (ifseqformula "21"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "21"))
                           (rule "inEqSimp_homoInEq0" (formula "22"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                           (rule "add_literals" (formula "22") (term "1,1,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0"))
                           (rule "add_zero_right" (formula "22") (term "0"))
                           (rule "qeq_literals" (formula "22"))
                           (rule "closeFalse" (formula "22"))
                        )
                        (branch "CUT: self.right = self FALSE"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "27"))
                           (rule "close" (formula "24") (ifseqformula "4"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "18"))
                     (rule "applyEq" (formula "21") (term "1") (ifseqformula "18"))
                     (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "11"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "11"))
                     (rule "eqSymm" (formula "18"))
                     (rule "close" (formula "26") (ifseqformula "18"))
                  )
               )
            )
            (branch " (¬self.right = null ∨ self.right = self) ∧ (self.right = self ∨ ¬self.right.<created> = TRUE) FALSE"
               (rule "applyEqReverse" (formula "22") (term "1,1,1") (ifseqformula "21"))
               (rule "hideAuxiliaryEq" (formula "21"))
               (rule "andRight" (formula "24"))
               (branch "Case 1"
                  (rule "orRight" (formula "24"))
                  (rule "notRight" (formula "24"))
                  (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "21"))
                  (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "22"))
                  (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                  (rule "limit_java_lang_Object__inv_" (formula "11") (term "1"))
                  (rule "limit_Tree_footprint" (formula "15") (term "1"))
                  (rule "ifthenelse_split" (formula "17") (term "0"))
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "19") (term "1,1") (ifseqformula "18"))
                     (rule "hideAuxiliaryEq" (formula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "18"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1"))
                     (rule "polySimp_rightDist" (formula "18") (term "1"))
                     (rule "mul_literals" (formula "18") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                     (rule "equiv_left" (formula "11"))
                     (branch "Case 1"
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                        (rule "cut_direct" (formula "19") (term "0"))
                        (branch "CUT: self.left = self TRUE"
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "19"))
                           (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "20"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                           (rule "add_literals" (formula "20") (term "1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0"))
                           (rule "add_zero_right" (formula "20") (term "0"))
                           (rule "qeq_literals" (formula "20"))
                           (rule "closeFalse" (formula "20"))
                        )
                        (branch "CUT: self.left = self FALSE"
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "26"))
                           (rule "close" (formula "22") (ifseqformula "5"))
                        )
                     )
                     (branch "Case 2"
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                        (rule "cut_direct" (formula "17") (term "0"))
                        (branch "CUT: self.left = self TRUE"
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "26") (term "1,2") (ifseqformula "17"))
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "17"))
                           (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "17"))
                           (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "17"))
                           (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "18"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "1,1,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0"))
                           (rule "add_zero_right" (formula "18") (term "0"))
                           (rule "qeq_literals" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                        (branch "CUT: self.left = self FALSE"
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "notLeft" (formula "17"))
                           (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "26"))
                           (rule "close" (formula "20") (ifseqformula "5"))
                        )
                     )
                  )
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                     (rule "orRight" (formula "21"))
                     (rule "notRight" (formula "22"))
                     (rule "applyEqReverse" (formula "19") (term "1,1") (ifseqformula "18"))
                     (rule "hideAuxiliaryEq" (formula "18"))
                     (rule "equiv_left" (formula "12"))
                     (branch "Case 1"
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                        (rule "cut_direct" (formula "3") (term "0"))
                        (branch "CUT: ov_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "24"))
                           (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "eqSymm" (formula "23"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "12"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                            (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "17") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "23") (term "0,1,0,0,0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "26")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "22")) (ifInst ""  (formula "12")))
                           (rule "disjointDefinition" (formula "23") (term "0,0"))
                           (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "disjointWithSingleton2" (formula "23") (term "0"))
                           (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "17"))
                           (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "5"))
                           (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                           (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEq" (formula "27") (term "2") (ifseqformula "23"))
                           (rule "close" (formula "27") (ifseqformula "4"))
                        )
                        (branch "CUT: ov_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "12"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "17"))
                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                           (rule "true_left" (formula "4"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                            (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "17") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "22")) (ifInst ""  (formula "12")))
                           (rule "disjointDefinition" (formula "23") (term "0,0"))
                           (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "disjointWithSingleton2" (formula "23") (term "0"))
                           (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                           (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "23"))
                           (rule "applyEq" (formula "29") (term "2") (ifseqformula "23"))
                           (rule "close" (formula "29") (ifseqformula "4"))
                        )
                     )
                     (branch "Case 2"
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                        (rule "cut_direct" (formula "3") (term "0"))
                        (branch "CUT: ov_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "24"))
                           (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "eqSymm" (formula "21"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                            (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "15") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "21") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "20")))
                           (rule "disjointDefinition" (formula "21") (term "0,0"))
                           (rule "measuredByCheckEmpty" (formula "21") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "disjointWithSingleton2" (formula "21") (term "0"))
                           (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "15"))
                           (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "5"))
                           (rule "elementOfSetMinus" (formula "21") (term "0,0"))
                           (rule "disjointAllFields" (formula "21") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "applyEq" (formula "27") (term "2") (ifseqformula "21"))
                           (rule "close" (formula "27") (ifseqformula "4"))
                        )
                        (branch "CUT: ov_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "15"))
                           (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                           (rule "true_left" (formula "4"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                            (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "15") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "21") (term "1,1,0,0,0,0"))
                           (rule "replace_known_right" (formula "21") (term "0,0,0,0,0,0,0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "20")) (ifInst ""  (formula "12")))
                           (rule "disjointDefinition" (formula "21") (term "0,0"))
                           (rule "measuredByCheckEmpty" (formula "21") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "disjointWithSingleton2" (formula "21") (term "0"))
                           (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "5"))
                           (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "15"))
                           (rule "elementOfSetMinus" (formula "21") (term "0,0"))
                           (rule "disjointAllFields" (formula "21") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "29") (term "2") (ifseqformula "21"))
                           (rule "close" (formula "29") (ifseqformula "4"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "orRight" (formula "24"))
                  (rule "notRight" (formula "25"))
                  (rule "ifthenelse_split" (formula "20") (term "0"))
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "inEqSimp_homoInEq1" (formula "21"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                     (rule "equiv_left" (formula "11"))
                     (branch "Case 1"
                        (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "cut_direct" (formula "13") (term "0"))
                        (branch "CUT: self.right = null TRUE"
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                           (rule "eqSymm" (formula "23"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "13"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "13"))
                           (rule "eqSymm" (formula "24"))
                           (rule "limit_java_lang_Object__inv_" (formula "12"))
                           (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
                           (rule "true_left" (formula "12"))
                           (rule "limit_Tree_footprint" (formula "17") (term "1"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: self.left = self TRUE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "20"))
                              (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "20"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                              (rule "inEqSimp_homoInEq0" (formula "21"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                              (rule "add_literals" (formula "21") (term "1,1,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0"))
                              (rule "add_zero_right" (formula "21") (term "0"))
                              (rule "qeq_literals" (formula "21"))
                              (rule "closeFalse" (formula "21"))
                           )
                           (branch "CUT: self.left = self FALSE"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "27"))
                              (rule "close" (formula "23") (ifseqformula "5"))
                           )
                        )
                        (branch "CUT: self.right = null FALSE"
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "disjointNotInOtherLocset1" (formula "2") (ifseqformula "18"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "cut_direct" (formula "21") (term "0"))
                           (branch "CUT: self.left = self TRUE"
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "1,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0"))
                              (rule "add_zero_right" (formula "22") (term "0"))
                              (rule "qeq_literals" (formula "22"))
                              (rule "closeFalse" (formula "22"))
                           )
                           (branch "CUT: self.left = self FALSE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "33"))
                              (rule "close" (formula "25") (ifseqformula "5"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "11"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "11"))
                        (rule "eqSymm" (formula "25"))
                        (rule "applyEq" (formula "21") (term "1") (ifseqformula "11"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                        (rule "eqSymm" (formula "23"))
                        (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "11"))
                        (rule "applyEq" (formula "22") (term "1") (ifseqformula "11"))
                        (rule "limit_Tree_footprint" (formula "15") (term "1"))
                        (rule "limit_java_lang_Object__inv_" (formula "22"))
                        (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                        (rule "cut_direct" (formula "18") (term "0"))
                        (branch "CUT: self.left = self TRUE"
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "18"))
                           (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "18"))
                           (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "add_zero_right" (formula "19") (term "0"))
                           (rule "qeq_literals" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                        (branch "CUT: self.left = self FALSE"
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "27"))
                           (rule "close" (formula "21") (ifseqformula "5"))
                        )
                     )
                  )
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                     (rule "orRight" (formula "25"))
                     (rule "notRight" (formula "26"))
                     (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "equiv_left" (formula "12"))
                     (branch "Case 1"
                        (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "cut_direct" (formula "14") (term "0"))
                        (branch "CUT: self.right = null TRUE"
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "14"))
                           (rule "eqSymm" (formula "26"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "14"))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEq" (formula "13") (term "1") (ifseqformula "14"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "12") (term "1") (ifseqformula "14"))
                           (rule "limit_java_lang_Object__inv_" (formula "13"))
                           (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")))
                           (rule "true_left" (formula "13"))
                           (rule "limit_Tree_footprint" (formula "18") (term "1"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "cut_direct" (formula "3") (term "0"))
                           (branch "CUT: ov_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "25"))
                              (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "eqSymm" (formula "24"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "1,2") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "24") (term "0,1,0,0,0,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "27")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "23")) (ifInst ""  (formula "12")))
                              (rule "disjointDefinition" (formula "24") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "disjointWithSingleton2" (formula "24") (term "0"))
                              (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                              (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEq" (formula "28") (term "2") (ifseqformula "24"))
                              (rule "close" (formula "28") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "1,2") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "29")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "18"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "23")) (ifInst ""  (formula "12")))
                              (rule "disjointDefinition" (formula "24") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "disjointWithSingleton2" (formula "24") (term "0"))
                              (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                              (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEq" (formula "30") (term "2") (ifseqformula "24"))
                              (rule "close" (formula "30") (ifseqformula "4"))
                           )
                        )
                        (branch "CUT: self.right = null FALSE"
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "disjointNotInOtherLocset1" (formula "3") (ifseqformula "19"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "cut_direct" (formula "3") (term "0"))
                           (branch "CUT: ov_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                              (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "eqSymm" (formula "26"))
                              (rule "disjointNotInOtherLocset1" (formula "4") (ifseqformula "20"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1") (ifseqformula "6"))
                              (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "33"))
                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "10"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0") (ifseqformula "6"))
                              (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "2")))
                              (rule "true_left" (formula "19"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "20") (term "0,0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "26") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "26") (term "0,1,0,0,0,0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "25")) (ifInst ""  (formula "12")))
                              (rule "disjointDefinition" (formula "26") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "26") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "disjointWithSingleton2" (formula "26") (term "0"))
                              (rule "elementOfSetMinus" (formula "26") (term "0,0"))
                              (rule "disjointAllFields" (formula "26") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "26"))
                              (rule "applyEq" (formula "34") (term "2") (ifseqformula "26"))
                              (rule "close" (formula "34") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,2") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,1") (ifseqformula "6"))
                              (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "29")))
                              (rule "true_left" (formula "19"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "18"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "18") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "26") (term "1,1,0,0,0,0"))
                              (rule "replace_known_right" (formula "26") (term "0,0,0,0,0,0,0") (ifseqformula "35"))
                               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "25")) (ifInst ""  (formula "12")))
                              (rule "disjointDefinition" (formula "26") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "26") (term "1,0") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "disjointWithSingleton2" (formula "26") (term "0"))
                              (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "18"))
                              (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "5"))
                              (rule "elementOfSetMinus" (formula "26") (term "0,0"))
                              (rule "disjointAllFields" (formula "26") (term "0,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "26"))
                              (rule "applyEq" (formula "36") (term "2") (ifseqformula "26"))
                              (rule "close" (formula "36") (ifseqformula "4"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "12"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "12"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "12"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "22") (term "1") (ifseqformula "12"))
                        (rule "applyEq" (formula "21") (term "1") (ifseqformula "12"))
                        (rule "limit_Tree_footprint" (formula "16") (term "1"))
                        (rule "limit_java_lang_Object__inv_" (formula "22"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                        (rule "cut_direct" (formula "3") (term "0"))
                        (branch "CUT: ov_0 = null TRUE"
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "25"))
                           (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "eqSymm" (formula "22"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "6"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "5"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                           (rule "true_left" (formula "4"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                           (rule "true_left" (formula "4"))
                            (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                           (rule "replace_known_right" (formula "22") (term "0,0,0,0,0,0,0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                           (rule "disjointDefinition" (formula "22") (term "0,0"))
                           (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "disjointWithSingleton2" (formula "22") (term "0"))
                           (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                           (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEq" (formula "28") (term "2") (ifseqformula "22"))
                           (rule "close" (formula "28") (ifseqformula "4"))
                        )
                        (branch "CUT: ov_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "16"))
                           (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                           (rule "true_left" (formula "4"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "29")))
                           (rule "true_left" (formula "5"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "6"))
                           (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                            (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "22") (term "0,1,0,0,0,0") (ifseqformula "6"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
                           (rule "disjointDefinition" (formula "22") (term "0,0"))
                           (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "disjointWithSingleton2" (formula "22") (term "0"))
                           (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                           (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "22"))
                           (rule "applyEq" (formula "30") (term "2") (ifseqformula "22"))
                           (rule "close" (formula "30") (ifseqformula "4"))
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Usage"
          (builtin "One Step Simplification" (formula "25"))
         (rule "replaceKnownSelect_taclet2_3" (formula "25") (term "0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "25") (term "0,0,0"))
         (rule "replaceKnownSelect_taclet2_3" (formula "25") (term "1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "25") (term "1,0,1,0"))
         (rule "impRight" (formula "25"))
         (rule "emptyStatement" (formula "26") (term "1"))
         (rule "limit_Tree_footprint" (formula "1") (term "0,1"))
          (builtin "JML assert" (formula "27"))
         (branch "Validity"
            (rule "orRight" (formula "27"))
             (builtin "One Step Simplification" (formula "28"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "replaceKnownSelect_taclet2_5" (formula "27") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "27") (term "0"))
            (rule "replaceKnownSelect_taclet2_5" (formula "28") (term "1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "28") (term "1,0"))
            (rule "replace_known_right" (formula "22") (term "0,0,0,0,0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "13"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_gtToGeq" (formula "21") (term "1"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
            (rule "inEqSimp_gtToGeq" (formula "19"))
            (rule "mul_literals" (formula "19") (term "1,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
            (rule "mul_literals" (formula "21") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
            (rule "mul_literals" (formula "19") (term "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1"))
            (rule "polySimp_rightDist" (formula "23") (term "1"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
            (rule "mul_literals" (formula "23") (term "0,1"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1"))
            (rule "limit_Tree_footprint" (formula "28") (term "0"))
            (rule "equalityToElementOfRight" (formula "29") (inst "ov=ov") (inst "fv=fv"))
            (rule "allRight" (formula "29") (inst "sk=ov_0"))
            (rule "allRight" (formula "29") (inst "sk=fv_0"))
            (rule "equiv_right" (formula "29"))
            (branch "Case '->'"
               (rule "ifthenelse_split" (formula "22") (term "0"))
               (branch " (¬self.left = null ∨ self.left = self) ∧ (self.left = self ∨ ¬self.left.<created> = TRUE) TRUE"
                  (rule "andLeft" (formula "22"))
                  (rule "applyEqReverse" (formula "25") (term "1,1,1") (ifseqformula "24"))
                  (rule "hideAuxiliaryEq" (formula "24"))
                  (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                  (rule "mul_literals" (formula "24") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                  (rule "ifthenelse_split" (formula "25") (term "0"))
                  (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "inEqSimp_homoInEq1" (formula "26"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                     (rule "mul_literals" (formula "26") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                     (rule "cut_direct" (formula "12") (term "0"))
                     (branch "CUT: self.left = null TRUE"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "9"))
                        (rule "eqSymm" (formula "18"))
                        (rule "close" (formula "23") (ifseqformula "18"))
                     )
                     (branch "CUT: self.left = null FALSE"
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "notLeft" (formula "9"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "cut_direct" (formula "21") (term "0"))
                        (branch "CUT: self.left = self TRUE"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "21"))
                           (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "27") (term "1") (ifseqformula "21"))
                           (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "notLeft" (formula "23"))
                           (rule "referencedObjectIsCreatedRight" (formula "26") (ifseqformula "30"))
                           (rule "close" (formula "26") (ifseqformula "5"))
                        )
                        (branch "CUT: self.left = self FALSE"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "referencedObjectIsCreatedRight" (formula "26") (ifseqformula "29"))
                           (rule "close" (formula "26") (ifseqformula "5"))
                        )
                     )
                  )
                  (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                     (rule "orRight" (formula "29"))
                     (rule "notRight" (formula "30"))
                     (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "cut_direct" (formula "13") (term "0"))
                     (branch "CUT: self.left = null TRUE"
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "19"))
                        (rule "close" (formula "24") (ifseqformula "19"))
                     )
                     (branch "CUT: self.left = null FALSE"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                        (rule "cut_direct" (formula "22") (term "0"))
                        (branch "CUT: self.left = self TRUE"
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "22"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "22"))
                           (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "22"))
                           (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq0" (formula "23"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_zero_right" (formula "23") (term "0"))
                           (rule "qeq_literals" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                        (branch "CUT: self.left = self FALSE"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "notLeft" (formula "22"))
                           (rule "referencedObjectIsCreatedRight" (formula "26") (ifseqformula "29"))
                           (rule "close" (formula "26") (ifseqformula "6"))
                        )
                     )
                  )
               )
               (branch " (¬self.left = null ∨ self.left = self) ∧ (self.left = self ∨ ¬self.left.<created> = TRUE) FALSE"
                  (rule "applyEqReverse" (formula "23") (term "1,1,1") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "andRight" (formula "27"))
                  (branch "Case 1"
                     (rule "orRight" (formula "27"))
                     (rule "notRight" (formula "27"))
                     (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "22"))
                     (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                     (rule "limit_Tree_footprint" (formula "4") (term "1"))
                     (rule "limit_java_lang_Object__inv_" (formula "9") (term "1"))
                     (rule "limit_Tree_footprint" (formula "15") (term "1"))
                     (rule "ifthenelse_split" (formula "18") (term "0"))
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "19"))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "inEqSimp_homoInEq1" (formula "19"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "mul_literals" (formula "19") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                        (rule "equiv_left" (formula "9"))
                        (branch "Case 1"
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "pullOutSelect" (formula "2") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "simplifySelectOfAnon" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "commute_or" (formula "3"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "cut_direct" (formula "20") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "14") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "20"))
                                 (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "28"))
                                 (rule "close" (formula "23") (ifseqformula "6"))
                              )
                           )
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_or" (formula "2"))
                              (rule "cut_direct" (formula "20") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "12") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "14") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "26") (term "1,2") (ifseqformula "20"))
                                 (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "21"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0"))
                                 (rule "qeq_literals" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "27"))
                                 (rule "close" (formula "23") (ifseqformula "6"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "pullOutSelect" (formula "2") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "simplifySelectOfAnon" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "commute_or" (formula "3"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "notLeft" (formula "3"))
                              (rule "notLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "cut_direct" (formula "18") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "12") (term "1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "18"))
                                 (rule "applyEq" (formula "27") (term "1,2") (ifseqformula "18"))
                                 (rule "applyEq" (formula "10") (term "1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "18"))
                                 (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                                 (rule "inEqSimp_homoInEq0" (formula "19"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "qeq_literals" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "28"))
                                 (rule "close" (formula "21") (ifseqformula "6"))
                              )
                           )
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_or" (formula "2"))
                              (rule "cut_direct" (formula "18") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "12") (term "1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                                 (rule "inEqSimp_homoInEq0" (formula "19"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "qeq_literals" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "27"))
                                 (rule "close" (formula "21") (ifseqformula "6"))
                              )
                           )
                        )
                     )
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                        (rule "orRight" (formula "22"))
                        (rule "notRight" (formula "23"))
                        (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "19"))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "equiv_left" (formula "10"))
                        (branch "Case 1"
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "commute_or" (formula "4"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "4"))
                              (rule "notLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "7"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                              (rule "replaceKnownSelect_taclet010100112_10" (formula "4") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010100112_11" (formula "4") (term "0,1"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "29") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "24") (term "0,1,0,0,0,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")))
                              (rule "disjointDefinition" (formula "24") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "disjointWithSingleton2" (formula "24") (term "0"))
                              (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                              (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "24"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "24"))
                              (rule "close" (formula "30") (ifseqformula "4"))
                           )
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_or" (formula "3"))
                              (rule "cut_direct" (formula "24") (term "0,0"))
                              (branch "CUT: ov_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "false_right" (formula "25"))
                                 (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                                 (rule "true_left" (formula "15"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "27") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "24") (term "0,1,0,0,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "27")) (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")))
                                 (rule "disjointDefinition" (formula "24") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "disjointWithSingleton2" (formula "24") (term "0"))
                                 (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                                 (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "24"))
                                 (rule "close" (formula "28") (ifseqformula "4"))
                              )
                              (branch "CUT: ov_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "notRight" (formula "25"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                 (rule "replaceKnownSelect_taclet010100112_10" (formula "4") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1010100112_11" (formula "4") (term "0,1"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "28") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")))
                                 (rule "disjointDefinition" (formula "24") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "disjointWithSingleton2" (formula "24") (term "0"))
                                 (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                                 (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "24"))
                                 (rule "close" (formula "29") (ifseqformula "4"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "commute_or" (formula "4"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "4"))
                              (rule "notLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,1") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "29")))
                              (rule "true_left" (formula "17"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                              (rule "replaceKnownSelect_taclet110100112_10" (formula "4") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0110100112_11" (formula "4") (term "0,1"))
                              (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "29") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "21")))
                              (rule "disjointDefinition" (formula "22") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "disjointWithSingleton2" (formula "22") (term "0"))
                              (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                              (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "22"))
                              (rule "close" (formula "30") (ifseqformula "4"))
                           )
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_or" (formula "3"))
                              (rule "cut_direct" (formula "22") (term "0,0"))
                              (branch "CUT: ov_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "false_right" (formula "23"))
                                 (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,1") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "27")))
                                 (rule "true_left" (formula "17"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "27") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "27")) (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "21")))
                                 (rule "disjointDefinition" (formula "22") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "disjointWithSingleton2" (formula "22") (term "0"))
                                 (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                                 (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "22"))
                                 (rule "close" (formula "28") (ifseqformula "4"))
                              )
                              (branch "CUT: ov_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "notRight" (formula "23"))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "2")))
                                 (rule "true_left" (formula "13"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                 (rule "replaceKnownSelect_taclet110100112_10" (formula "4") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1110100112_11" (formula "4") (term "0,1"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "23")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "28") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "22") (term "0,1,0,0,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "21")) (ifInst ""  (formula "13")))
                                 (rule "disjointDefinition" (formula "22") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "disjointWithSingleton2" (formula "22") (term "0"))
                                 (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                                 (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "22"))
                                 (rule "close" (formula "29") (ifseqformula "4"))
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "orRight" (formula "27"))
                     (rule "notRight" (formula "28"))
                     (rule "ifthenelse_split" (formula "24") (term "0"))
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                        (rule "mul_literals" (formula "25") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                        (rule "cut_direct" (formula "13") (term "0"))
                        (branch "CUT: self.left = null TRUE"
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "10"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "10"))
                           (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "10"))
                           (rule "eqSymm" (formula "23"))
                           (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "10"))
                           (rule "limit_java_lang_Object__inv_" (formula "9") (term "1"))
                           (rule "limit_Tree_footprint" (formula "16") (term "1"))
                           (rule "limit_Tree_footprint" (formula "4") (term "1"))
                           (rule "equiv_left" (formula "9"))
                           (branch "Case 1"
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                              (rule "selectCreatedOfAnonAsFormula" (formula "2") (term "1"))
                              (rule "shift_paren_or" (formula "2"))
                              (rule "cut_direct" (formula "21") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "applyEq" (formula "27") (term "1,2") (ifseqformula "21"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "15") (term "1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "21"))
                                 (rule "inEqSimp_homoInEq0" (formula "22"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "qeq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "27"))
                                 (rule "close" (formula "24") (ifseqformula "6"))
                              )
                           )
                           (branch "Case 2"
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                              (rule "selectCreatedOfAnonAsFormula" (formula "2") (term "1"))
                              (rule "shift_paren_or" (formula "2"))
                              (rule "cut_direct" (formula "19") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "13") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "19"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "11") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq0" (formula "20"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "qeq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "27"))
                                 (rule "close" (formula "22") (ifseqformula "6"))
                              )
                           )
                        )
                        (branch "CUT: self.left = null FALSE"
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "pullOutSelect" (formula "2") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
                           (rule "simplifySelectOfAnon" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "commute_or" (formula "3"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "notLeft" (formula "3"))
                              (rule "notLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "cut_direct" (formula "24") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "24"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "24"))
                                 (rule "inEqSimp_homoInEq0" (formula "25"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0"))
                                 (rule "add_literals" (formula "25") (term "0"))
                                 (rule "qeq_literals" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "referencedObjectIsCreatedRight" (formula "27") (ifseqformula "35"))
                                 (rule "close" (formula "27") (ifseqformula "7"))
                              )
                           )
                           (branch "¬ov_0 = null ∧ ¬ov_0.<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_or" (formula "2"))
                              (rule "cut_direct" (formula "24") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "24"))
                                 (rule "eqSymm" (formula "29"))
                                 (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "24"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "16") (term "1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "32") (term "1,2") (ifseqformula "24"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "24"))
                                 (rule "inEqSimp_homoInEq0" (formula "25"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0"))
                                 (rule "add_zero_right" (formula "25") (term "0"))
                                 (rule "qeq_literals" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "referencedObjectIsCreatedRight" (formula "27") (ifseqformula "34"))
                                 (rule "close" (formula "27") (ifseqformula "7"))
                              )
                           )
                        )
                     )
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                        (rule "orRight" (formula "28"))
                        (rule "notRight" (formula "29"))
                        (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "cut_direct" (formula "14") (term "0"))
                        (branch "CUT: self.left = null TRUE"
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "11"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "11"))
                           (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "11"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "11"))
                           (rule "eqSymm" (formula "24"))
                           (rule "limit_java_lang_Object__inv_" (formula "10") (term "1"))
                           (rule "limit_Tree_footprint" (formula "5") (term "1"))
                           (rule "limit_Tree_footprint" (formula "17") (term "1"))
                           (rule "equiv_left" (formula "10"))
                           (branch "Case 1"
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonAsFormula" (formula "3") (term "1"))
                              (rule "shift_paren_or" (formula "3"))
                              (rule "cut_direct" (formula "3") (term "0,0"))
                              (branch "CUT: ov_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "3"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "28")))
                                 (rule "true_left" (formula "20"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "28") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")) (ifInst ""  (formula "16")))
                                 (rule "disjointDefinition" (formula "25") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "25") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "disjointWithSingleton2" (formula "25") (term "0"))
                                 (rule "elementOfSetMinus" (formula "25") (term "0,0"))
                                 (rule "disjointAllFields" (formula "25") (term "0,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "25"))
                                 (rule "close" (formula "29") (ifseqformula "4"))
                              )
                              (branch "CUT: ov_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "selectCreatedOfAnonAsFormula" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "cut_direct" (formula "3") (term "0"))
                                 (branch "CUT: ov_0.<created> = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                     (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "29") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                    (rule "wellFormedAnon" (formula "25") (term "1,1,0,0,0,0"))
                                    (rule "replace_known_left" (formula "25") (term "0,1,0,0,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")) (ifInst ""  (formula "16")))
                                    (rule "disjointDefinition" (formula "25") (term "0,0"))
                                    (rule "measuredByCheckEmpty" (formula "25") (term "1,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "disjointWithSingleton2" (formula "25") (term "0"))
                                    (rule "elementOfSetMinus" (formula "25") (term "0,0"))
                                    (rule "disjointAllFields" (formula "25") (term "0,0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEq" (formula "4") (term "2") (ifseqformula "25"))
                                    (rule "close" (formula "30") (ifseqformula "4"))
                                 )
                                 (branch "CUT: ov_0.<created> = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "3"))
                                     (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "30") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                    (rule "wellFormedAnon" (formula "25") (term "1,1,0,0,0,0"))
                                    (rule "replace_known_right" (formula "25") (term "0,0,0,0,0,0,0") (ifseqformula "30"))
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")) (ifInst ""  (formula "16")))
                                    (rule "disjointDefinition" (formula "25") (term "0,0"))
                                    (rule "measuredByCheckEmpty" (formula "25") (term "1,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "disjointWithSingleton2" (formula "25") (term "0"))
                                    (rule "elementOfSetMinus" (formula "25") (term "0,0"))
                                    (rule "disjointAllFields" (formula "25") (term "0,0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEq" (formula "4") (term "2") (ifseqformula "25"))
                                    (rule "close" (formula "31") (ifseqformula "4"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonAsFormula" (formula "3") (term "1"))
                              (rule "shift_paren_or" (formula "3"))
                              (rule "cut_direct" (formula "3") (term "0,0"))
                              (branch "CUT: ov_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "14"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "28") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,1,0,0,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")))
                                 (rule "disjointDefinition" (formula "23") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "disjointWithSingleton2" (formula "23") (term "0"))
                                 (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                                 (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "23"))
                                 (rule "close" (formula "29") (ifseqformula "4"))
                              )
                              (branch "CUT: ov_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "29")))
                                 (rule "true_left" (formula "14"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "selectCreatedOfAnonAsFormula" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "cut_direct" (formula "3") (term "0"))
                                 (branch "CUT: ov_0.<created> = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                     (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "29") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                    (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "22")))
                                    (rule "disjointDefinition" (formula "23") (term "0,0"))
                                    (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "disjointWithSingleton2" (formula "23") (term "0"))
                                    (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                                    (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "4") (term "2") (ifseqformula "23"))
                                    (rule "close" (formula "30") (ifseqformula "4"))
                                 )
                                 (branch "CUT: ov_0.<created> = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "3"))
                                     (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "30") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                    (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")))
                                    (rule "disjointDefinition" (formula "23") (term "0,0"))
                                    (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "disjointWithSingleton2" (formula "23") (term "0"))
                                    (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                                    (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "4") (term "2") (ifseqformula "23"))
                                    (rule "close" (formula "31") (ifseqformula "4"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: self.left = null FALSE"
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "notLeft" (formula "11"))
                           (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "selectCreatedOfAnonAsFormula" (formula "3") (term "1"))
                           (rule "shift_paren_or" (formula "3"))
                           (rule "cut_direct" (formula "3") (term "0,0"))
                           (branch "CUT: ov_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "1,2") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "34"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,1") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "30")))
                              (rule "true_left" (formula "20"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "34") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "28") (term "1,1,0,0,0,0"))
                              (rule "replace_known_right" (formula "28") (term "0,0,0,0,0,0,0") (ifseqformula "34"))
                               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "27")) (ifInst ""  (formula "17")))
                              (rule "disjointDefinition" (formula "28") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "28") (term "1,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "disjointWithSingleton2" (formula "28") (term "0"))
                              (rule "elementOfSetMinus" (formula "28") (term "0,0"))
                              (rule "disjointAllFields" (formula "28") (term "0,0,0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEq" (formula "4") (term "2") (ifseqformula "28"))
                              (rule "close" (formula "35") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "1,2") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "35"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "5"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                              (rule "simplifySelectOfAnon" (formula "4"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "30")))
                              (rule "ifthenelse_negated" (formula "4") (term "0"))
                              (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                              (rule "ifEqualsTRUE" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "hideAuxiliaryEqConcrete" (formula "5"))
                              (rule "cnf_rightDist" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "commute_or" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,1") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "2")))
                              (rule "true_left" (formula "20"))
                              (rule "cut_direct" (formula "3") (term "0"))
                              (branch "CUT: ov_0.<created> = TRUE TRUE"
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "35") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "28") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_right" (formula "28") (term "0,0,0,0,0,0,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "27")) (ifInst ""  (formula "17")))
                                 (rule "disjointDefinition" (formula "28") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "28") (term "1,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "disjointWithSingleton2" (formula "28") (term "0"))
                                 (rule "elementOfSetMinus" (formula "28") (term "0,0"))
                                 (rule "disjointAllFields" (formula "28") (term "0,0,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "28"))
                                 (rule "close" (formula "36") (ifseqformula "4"))
                              )
                              (branch "CUT: ov_0.<created> = TRUE FALSE"
                                  (builtin "One Step Simplification" (formula "3"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "36") (term "2")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "28") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_right" (formula "28") (term "0,0,0,0,0,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "27")) (ifInst ""  (formula "17")))
                                 (rule "disjointDefinition" (formula "28") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "28") (term "1,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "disjointWithSingleton2" (formula "28") (term "0"))
                                 (rule "elementOfSetMinus" (formula "28") (term "0,0"))
                                 (rule "disjointAllFields" (formula "28") (term "0,0,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "applyEq" (formula "4") (term "2") (ifseqformula "28"))
                                 (rule "close" (formula "37") (ifseqformula "4"))
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Case '<-'"
               (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "14"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "ifthenelse_split" (formula "22") (term "0"))
               (branch " (¬self.left = null ∨ self.left = self) ∧ (self.left = self ∨ ¬self.left.<created> = TRUE) TRUE"
                  (rule "andLeft" (formula "22"))
                  (rule "applyEqReverse" (formula "25") (term "1,1,1") (ifseqformula "24"))
                  (rule "hideAuxiliaryEq" (formula "24"))
                  (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                  (rule "mul_literals" (formula "24") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                  (rule "ifthenelse_split" (formula "25") (term "0"))
                  (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "inEqSimp_homoInEq1" (formula "26"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                     (rule "mul_literals" (formula "26") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                     (rule "cut_direct" (formula "11") (term "0"))
                     (branch "CUT: self.left = null TRUE"
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "9"))
                        (rule "eqSymm" (formula "18"))
                        (rule "close" (formula "24") (ifseqformula "18"))
                     )
                     (branch "CUT: self.left = null FALSE"
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "notLeft" (formula "9"))
                        (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                        (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "19"))
                        (rule "cut_direct" (formula "21") (term "0"))
                        (branch "CUT: self.left = self TRUE"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "27") (term "1,2") (ifseqformula "21"))
                           (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "9") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "21"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "21"))
                           (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "28") (term "1") (ifseqformula "21"))
                           (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "notLeft" (formula "23"))
                           (rule "referencedObjectIsCreatedRight" (formula "26") (ifseqformula "32"))
                           (rule "close" (formula "26") (ifseqformula "5"))
                        )
                        (branch "CUT: self.left = self FALSE"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "referencedObjectIsCreatedRight" (formula "26") (ifseqformula "30"))
                           (rule "close" (formula "26") (ifseqformula "5"))
                        )
                     )
                  )
                  (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                     (rule "orRight" (formula "29"))
                     (rule "notRight" (formula "30"))
                     (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "cut_direct" (formula "12") (term "0"))
                     (branch "CUT: self.left = null TRUE"
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "19"))
                        (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "19"))
                        (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "10"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "19"))
                        (rule "close" (formula "25") (ifseqformula "19"))
                     )
                     (branch "CUT: self.left = null FALSE"
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "12"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                        (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "20"))
                        (rule "cut_direct" (formula "22") (term "0"))
                        (branch "CUT: self.left = self TRUE"
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "applyEq" (formula "10") (term "1") (ifseqformula "22"))
                           (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "22"))
                           (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "22"))
                           (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "22"))
                           (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "22"))
                           (rule "applyEq" (formula "28") (term "1") (ifseqformula "22"))
                           (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq0" (formula "23"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "1,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0"))
                           (rule "add_literals" (formula "23") (term "0"))
                           (rule "qeq_literals" (formula "23"))
                           (rule "closeFalse" (formula "23"))
                        )
                        (branch "CUT: self.left = self FALSE"
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "notLeft" (formula "22"))
                           (rule "referencedObjectIsCreatedRight" (formula "26") (ifseqformula "30"))
                           (rule "close" (formula "26") (ifseqformula "6"))
                        )
                     )
                  )
               )
               (branch " (¬self.left = null ∨ self.left = self) ∧ (self.left = self ∨ ¬self.left.<created> = TRUE) FALSE"
                  (rule "applyEqReverse" (formula "23") (term "1,1,1") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "andRight" (formula "27"))
                  (branch "Case 1"
                     (rule "orRight" (formula "27"))
                     (rule "notRight" (formula "27"))
                     (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "22"))
                     (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "1"))
                     (rule "limit_Tree_footprint" (formula "4") (term "1"))
                     (rule "limit_Tree_footprint" (formula "15") (term "1"))
                     (rule "limit_java_lang_Object__inv_" (formula "9") (term "1"))
                     (rule "ifthenelse_split" (formula "18") (term "0"))
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "19"))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "inEqSimp_homoInEq1" (formula "19"))
                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "mul_literals" (formula "19") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                        (rule "equiv_left" (formula "9"))
                        (branch "Case 1"
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: self.right = self TRUE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                              (rule "inEqSimp_homoInEq0" (formula "21"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                              (rule "add_literals" (formula "21") (term "1,1,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0"))
                              (rule "add_zero_right" (formula "21") (term "0"))
                              (rule "qeq_literals" (formula "21"))
                              (rule "closeFalse" (formula "21"))
                           )
                           (branch "CUT: self.right = self FALSE"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "27"))
                              (rule "close" (formula "23") (ifseqformula "6"))
                           )
                        )
                        (branch "Case 2"
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "cut_direct" (formula "18") (term "0"))
                           (branch "CUT: self.right = self TRUE"
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "18"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "10") (term "1") (ifseqformula "18"))
                              (rule "applyEq" (formula "27") (term "1,2") (ifseqformula "18"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "12") (term "1") (ifseqformula "18"))
                              (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                              (rule "inEqSimp_homoInEq0" (formula "19"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "1,1,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0"))
                              (rule "add_zero_right" (formula "19") (term "0"))
                              (rule "qeq_literals" (formula "19"))
                              (rule "closeFalse" (formula "19"))
                           )
                           (branch "CUT: self.right = self FALSE"
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "27"))
                              (rule "close" (formula "21") (ifseqformula "6"))
                           )
                        )
                     )
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                        (rule "orRight" (formula "22"))
                        (rule "notRight" (formula "23"))
                        (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "19"))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "equiv_left" (formula "10"))
                        (branch "Case 1"
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "cut_direct" (formula "3") (term "0"))
                           (branch "CUT: ov_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "25"))
                              (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                              (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "eqSymm" (formula "24"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,0") (ifseqformula "7"))
                              (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "14"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "19") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "24") (term "0,1,0,0,0,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "27")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "23")) (ifInst ""  (formula "15")))
                              (rule "disjointDefinition" (formula "24") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "disjointWithSingleton2" (formula "24") (term "0"))
                              (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                              (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEq" (formula "28") (term "2") (ifseqformula "24"))
                              (rule "close" (formula "28") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "29")))
                              (rule "true_left" (formula "14"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "19"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "19") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "23")))
                              (rule "disjointDefinition" (formula "24") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "24") (term "1,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "disjointWithSingleton2" (formula "24") (term "0"))
                              (rule "elementOfSetMinus" (formula "24") (term "0,0"))
                              (rule "disjointAllFields" (formula "24") (term "0,0,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "24"))
                              (rule "applyEq" (formula "30") (term "2") (ifseqformula "24"))
                              (rule "close" (formula "30") (ifseqformula "4"))
                           )
                        )
                        (branch "Case 2"
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "cut_direct" (formula "3") (term "0"))
                           (branch "CUT: ov_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "25"))
                              (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "eqSymm" (formula "22"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,0") (ifseqformula "7"))
                              (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "12"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "17") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "27")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "21")))
                              (rule "disjointDefinition" (formula "22") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "disjointWithSingleton2" (formula "22") (term "0"))
                              (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                              (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "22"))
                              (rule "applyEq" (formula "28") (term "2") (ifseqformula "22"))
                              (rule "close" (formula "28") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "17"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "17") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "22") (term "0,1,0,0,0,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "21")) (ifInst ""  (formula "13")))
                              (rule "disjointDefinition" (formula "22") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "22") (term "1,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "disjointWithSingleton2" (formula "22") (term "0"))
                              (rule "elementOfSetMinus" (formula "22") (term "0,0"))
                              (rule "disjointAllFields" (formula "22") (term "0,0,0") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "22"))
                              (rule "applyEq" (formula "30") (term "2") (ifseqformula "22"))
                              (rule "close" (formula "30") (ifseqformula "4"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "orRight" (formula "27"))
                     (rule "notRight" (formula "28"))
                     (rule "ifthenelse_split" (formula "24") (term "0"))
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                        (rule "mul_literals" (formula "25") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                        (rule "cut_direct" (formula "13") (term "0"))
                        (branch "CUT: self.left = null TRUE"
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "10"))
                           (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "10"))
                           (rule "eqSymm" (formula "23"))
                           (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "10"))
                           (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "10"))
                           (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "10"))
                           (rule "limit_Tree_footprint" (formula "4") (term "1"))
                           (rule "limit_java_lang_Object__inv_" (formula "9") (term "1"))
                           (rule "limit_Tree_footprint" (formula "16") (term "1"))
                           (rule "equiv_left" (formula "9"))
                           (branch "Case 1"
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                              (rule "cut_direct" (formula "21") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "21"))
                                 (rule "inEqSimp_homoInEq0" (formula "22"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "qeq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "28"))
                                 (rule "close" (formula "24") (ifseqformula "6"))
                              )
                           )
                           (branch "Case 2"
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                              (rule "cut_direct" (formula "19") (term "0"))
                              (branch "CUT: self.right = self TRUE"
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEq" (formula "13") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "19"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq0" (formula "20"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "qeq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "CUT: self.right = self FALSE"
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "28"))
                                 (rule "close" (formula "22") (ifseqformula "6"))
                              )
                           )
                        )
                        (branch "CUT: self.left = null FALSE"
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                           (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "20"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "cut_direct" (formula "24") (term "0"))
                           (branch "CUT: self.right = self TRUE"
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "24"))
                              (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "24"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "24"))
                              (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "24"))
                              (rule "eqSymm" (formula "29"))
                              (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "24"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "3") (term "1,2") (ifseqformula "24"))
                              (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "25"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,1,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0"))
                              (rule "add_literals" (formula "25") (term "0"))
                              (rule "qeq_literals" (formula "25"))
                              (rule "closeFalse" (formula "25"))
                           )
                           (branch "CUT: self.right = self FALSE"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "notLeft" (formula "24"))
                              (rule "referencedObjectIsCreatedRight" (formula "27") (ifseqformula "35"))
                              (rule "close" (formula "27") (ifseqformula "7"))
                           )
                        )
                     )
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                        (rule "orRight" (formula "28"))
                        (rule "notRight" (formula "29"))
                        (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "cut_direct" (formula "14") (term "0"))
                        (branch "CUT: self.left = null TRUE"
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "11"))
                           (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "11"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "11"))
                           (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "11"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "11"))
                           (rule "eqSymm" (formula "24"))
                           (rule "limit_java_lang_Object__inv_" (formula "10") (term "1"))
                           (rule "limit_Tree_footprint" (formula "5") (term "1"))
                           (rule "limit_Tree_footprint" (formula "17") (term "1"))
                           (rule "equiv_left" (formula "10"))
                           (branch "Case 1"
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "cut_direct" (formula "3") (term "0"))
                              (branch "CUT: ov_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "3"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "eqSymm" (formula "25"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
                                 (rule "true_left" (formula "14"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                 (rule "true_left" (formula "4"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "20") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")) (ifInst ""  (formula "16")))
                                 (rule "disjointDefinition" (formula "25") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "25") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "disjointWithSingleton2" (formula "25") (term "0"))
                                 (rule "elementOfSetMinus" (formula "25") (term "0,0"))
                                 (rule "disjointAllFields" (formula "25") (term "0,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "25"))
                                 (rule "applyEq" (formula "29") (term "2") (ifseqformula "25"))
                                 (rule "close" (formula "29") (ifseqformula "4"))
                              )
                              (branch "CUT: ov_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "14"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "20"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "26")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "20") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_right" (formula "25") (term "0,0,0,0,0,0,0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")) (ifInst ""  (formula "16")))
                                 (rule "disjointDefinition" (formula "25") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "25") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "disjointWithSingleton2" (formula "25") (term "0"))
                                 (rule "elementOfSetMinus" (formula "25") (term "0,0"))
                                 (rule "disjointAllFields" (formula "25") (term "0,0,0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "applyEq" (formula "31") (term "2") (ifseqformula "25"))
                                 (rule "close" (formula "31") (ifseqformula "4"))
                              )
                           )
                           (branch "Case 2"
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "cut_direct" (formula "3") (term "0"))
                              (branch "CUT: ov_0 = null TRUE"
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "3"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                 (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1") (ifseqformula "7"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "12"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                 (rule "true_left" (formula "4"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,1,0,0,0,0") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")))
                                 (rule "disjointDefinition" (formula "23") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "disjointWithSingleton2" (formula "23") (term "0"))
                                 (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                                 (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "23"))
                                 (rule "applyEq" (formula "29") (term "2") (ifseqformula "23"))
                                 (rule "close" (formula "29") (ifseqformula "4"))
                              )
                              (branch "CUT: ov_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "30")))
                                 (rule "true_left" (formula "12"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "18"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "24")))
                                 (rule "true_left" (formula "4"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "7"))
                                 (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                  (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "22")))
                                 (rule "disjointDefinition" (formula "23") (term "0,0"))
                                 (rule "measuredByCheckEmpty" (formula "23") (term "1,0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "disjointWithSingleton2" (formula "23") (term "0"))
                                 (rule "elementOfSetMinus" (formula "23") (term "0,0"))
                                 (rule "disjointAllFields" (formula "23") (term "0,0,0") (ifseqformula "13"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "23"))
                                 (rule "applyEq" (formula "31") (term "2") (ifseqformula "23"))
                                 (rule "close" (formula "31") (ifseqformula "4"))
                              )
                           )
                        )
                        (branch "CUT: self.left = null FALSE"
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "notLeft" (formula "11"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                           (rule "disjointNotInOtherLocset2" (formula "3") (ifseqformula "21"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "cut_direct" (formula "3") (term "0"))
                           (branch "CUT: ov_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "33"))
                              (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "22"))
                              (rule "disjointNotInOtherLocset2" (formula "4") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "eqSymm" (formula "28"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "1,2") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "35"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "8"))
                              (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
                              (rule "true_left" (formula "6"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "4"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "22") (term "1,0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "28") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "28") (term "0,1,0,0,0,0") (ifseqformula "8"))
                               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "1")) (ifInst ""  (formula "8")) (ifInst ""  (formula "27")) (ifInst ""  (formula "17")))
                              (rule "disjointDefinition" (formula "28") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "28") (term "1,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "disjointWithSingleton2" (formula "28") (term "0"))
                              (rule "elementOfSetMinus" (formula "28") (term "0,0"))
                              (rule "disjointAllFields" (formula "28") (term "0,0,0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "28"))
                              (rule "applyEq" (formula "36") (term "2") (ifseqformula "28"))
                              (rule "close" (formula "36") (ifseqformula "4"))
                           )
                           (branch "CUT: ov_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "onlyCreatedObjectsAreObservedInLocSetsEQ" (formula "4") (ifseqformula "21"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")))
                              (rule "true_left" (formula "4"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,1") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "37")))
                              (rule "true_left" (formula "21"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,1") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "32")))
                              (rule "true_left" (formula "20"))
                               (builtin "Use Dependency Contract" (formula "5") (term "1") (ifInst ""  (formula "22") (term "1,0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "28") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "28") (term "1,0,0,0") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "37")) (ifInst ""  (formula "1")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "27")))
                              (rule "disjointDefinition" (formula "28") (term "0,0"))
                              (rule "measuredByCheckEmpty" (formula "28") (term "1,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "disjointWithSingleton2" (formula "28") (term "0"))
                              (rule "elementOfSetMinus" (formula "28") (term "0,0"))
                              (rule "disjointAllFields" (formula "28") (term "0,0,0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "28"))
                              (rule "applyEq" (formula "38") (term "2") (ifseqformula "28"))
                              (rule "close" (formula "38") (ifseqformula "4"))
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Usage"
             (builtin "One Step Simplification" (formula "27"))
            (rule "replaceKnownSelect_taclet2_5" (formula "27") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "27") (term "0,0,0"))
            (rule "replaceKnownSelect_taclet2_5" (formula "27") (term "1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "27") (term "1,0,1,0"))
            (rule "impRight" (formula "27"))
            (rule "emptyStatement" (formula "28") (term "1"))
            (rule "limit_Tree_footprint" (formula "1") (term "0,1"))
             (builtin "JML assert" (formula "29"))
            (branch "Validity"
               (rule "orRight" (formula "29"))
                (builtin "One Step Simplification" (formula "30"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "replaceKnownSelect_taclet2_3" (formula "29") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "29") (term "0"))
               (rule "replaceKnownSelect_taclet2_3" (formula "30") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "30") (term "1,0"))
               (rule "replace_known_right" (formula "22") (term "0,0,0,0,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "12"))
               (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "notLeft" (formula "9"))
               (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_gtToGeq" (formula "24") (term "1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
               (rule "inEqSimp_gtToGeq" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0"))
               (rule "inEqSimp_gtToGeq" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1"))
               (rule "mul_literals" (formula "24") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1"))
               (rule "polySimp_rightDist" (formula "22") (term "1"))
               (rule "mul_literals" (formula "22") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1"))
               (rule "limit_Tree_treeSet" (formula "30") (term "1"))
               (rule "limit_Tree_treeSet" (formula "31") (term "0"))
               (rule "ifthenelse_split" (formula "25") (term "0"))
               (branch " (¬self.right = null ∨ self.right = self) ∧ (self.right = self ∨ ¬self.right.<created> = TRUE) TRUE"
                  (rule "andLeft" (formula "25"))
                  (rule "applyEqReverse" (formula "28") (term "1,1,1") (ifseqformula "27"))
                  (rule "hideAuxiliaryEq" (formula "27"))
                  (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                  (rule "mul_literals" (formula "27") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                  (rule "ifthenelse_split" (formula "23") (term "0"))
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                     (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "24"))
                     (rule "hideAuxiliaryEq" (formula "24"))
                     (rule "inEqSimp_homoInEq1" (formula "24"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1"))
                     (rule "polySimp_rightDist" (formula "24") (term "1"))
                     (rule "mul_literals" (formula "24") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                     (rule "equiv_left" (formula "14"))
                     (branch "Case 1"
                        (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "cut_direct" (formula "4") (term "0"))
                        (branch "CUT: self.right = null TRUE"
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "4"))
                           (rule "eqSymm" (formula "23"))
                           (rule "close" (formula "27") (ifseqformula "23"))
                        )
                        (branch "CUT: self.right = null FALSE"
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "cut_direct" (formula "25") (term "0"))
                           (branch "CUT: self.right = self TRUE"
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "14") (term "1") (ifseqformula "25"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "25"))
                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq0" (formula "26"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0"))
                              (rule "add_zero_right" (formula "26") (term "0"))
                              (rule "qeq_literals" (formula "26"))
                              (rule "closeFalse" (formula "26"))
                           )
                           (branch "CUT: self.right = self FALSE"
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "notLeft" (formula "25"))
                              (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "30"))
                              (rule "close" (formula "28") (ifseqformula "7"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "13"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "13"))
                        (rule "eqSymm" (formula "26"))
                        (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "13"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "25") (term "1") (ifseqformula "21"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
                        (rule "eqSymm" (formula "21"))
                        (rule "close" (formula "26") (ifseqformula "21"))
                     )
                  )
                  (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                     (rule "orRight" (formula "30"))
                     (rule "notRight" (formula "31"))
                     (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "24"))
                     (rule "hideAuxiliaryEq" (formula "24"))
                     (rule "equiv_left" (formula "15"))
                     (branch "Case 1"
                        (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "cut_direct" (formula "5") (term "0"))
                        (branch "CUT: self.right = null TRUE"
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "23"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "27"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "23"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "23"))
                           (rule "close" (formula "27") (ifseqformula "23"))
                        )
                        (branch "CUT: self.right = null FALSE"
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                           (rule "cut_direct" (formula "25") (term "0"))
                           (branch "CUT: self.right = self TRUE"
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq0" (formula "26"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0"))
                              (rule "add_zero_right" (formula "26") (term "0"))
                              (rule "qeq_literals" (formula "26"))
                              (rule "closeFalse" (formula "26"))
                           )
                           (branch "CUT: self.right = self FALSE"
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "notLeft" (formula "25"))
                              (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "30"))
                              (rule "close" (formula "28") (ifseqformula "8"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "16"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "applyEq" (formula "27") (term "0") (ifseqformula "21"))
                        (rule "eqSymm" (formula "27"))
                        (rule "applyEq" (formula "25") (term "1") (ifseqformula "14"))
                        (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "14"))
                        (rule "applyEq" (formula "24") (term "1") (ifseqformula "14"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "21"))
                        (rule "close" (formula "27") (ifseqformula "14"))
                     )
                  )
               )
               (branch " (¬self.right = null ∨ self.right = self) ∧ (self.right = self ∨ ¬self.right.<created> = TRUE) FALSE"
                  (rule "applyEqReverse" (formula "26") (term "1,1,1") (ifseqformula "25"))
                  (rule "hideAuxiliaryEq" (formula "25"))
                  (rule "andRight" (formula "28"))
                  (branch "Case 1"
                     (rule "orRight" (formula "28"))
                     (rule "notRight" (formula "28"))
                     (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "25"))
                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24"))
                     (rule "limit_Tree_footprint" (formula "18") (term "1"))
                     (rule "limit_java_lang_Object__inv_" (formula "14") (term "1"))
                     (rule "limit_Tree_footprint" (formula "4") (term "1"))
                     (rule "ifthenelse_split" (formula "20") (term "0"))
                     (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "21"))
                        (rule "hideAuxiliaryEq" (formula "21"))
                        (rule "inEqSimp_homoInEq1" (formula "21"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                        (rule "mul_literals" (formula "21") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                        (rule "equiv_left" (formula "14"))
                        (branch "Case 1"
                           (rule "cut_direct" (formula "21") (term "0"))
                           (branch "CUT: self.left = self TRUE"
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "21"))
                              (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "21"))
                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "13") (term "1") (ifseqformula "21"))
                              (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "1,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0"))
                              (rule "add_zero_right" (formula "22") (term "0"))
                              (rule "qeq_literals" (formula "22"))
                              (rule "closeFalse" (formula "22"))
                           )
                           (branch "CUT: self.left = self FALSE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "27"))
                              (rule "close" (formula "24") (ifseqformula "7"))
                           )
                        )
                        (branch "Case 2"
                           (rule "cut_direct" (formula "19") (term "0"))
                           (branch "CUT: self.left = self TRUE"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "13") (term "1") (ifseqformula "19"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "19"))
                              (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "19"))
                              (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "19"))
                              (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "19"))
                              (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "19"))
                              (rule "inEqSimp_homoInEq0" (formula "20"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                              (rule "add_literals" (formula "20") (term "1,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0"))
                              (rule "add_literals" (formula "20") (term "0"))
                              (rule "qeq_literals" (formula "20"))
                              (rule "closeFalse" (formula "20"))
                           )
                           (branch "CUT: self.left = self FALSE"
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "27"))
                              (rule "close" (formula "22") (ifseqformula "7"))
                           )
                        )
                     )
                     (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                        (rule "orRight" (formula "24"))
                        (rule "notRight" (formula "25"))
                        (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "21"))
                        (rule "hideAuxiliaryEq" (formula "21"))
                        (rule "equiv_left" (formula "15"))
                        (branch "Case 1"
                           (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                            (builtin "Use Dependency Contract" (formula "28") (term "0") (ifInst ""  (formula "28") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "25") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "25") (term "0,1,1,0,0,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")) (ifInst ""  (formula "1")) (ifInst ""  (formula "8")) (ifInst ""  (formula "24")) (ifInst ""  (formula "14")) (ifInst ""  (formula "29")))
                           (rule "notLeft" (formula "25"))
                           (rule "disjointDefinition" (formula "25") (term "0"))
                           (rule "measuredByCheckEmpty" (formula "25") (term "1") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "disjointWithSingleton2" (formula "25"))
                           (rule "notRight" (formula "25"))
                           (rule "elementOfSetMinus" (formula "1"))
                           (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                           (rule "true_left" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                            (builtin "Use Dependency Contract" (formula "28") (term "0") (ifInst ""  (formula "28") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "23") (term "0,1,0,0,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "1")) (ifInst ""  (formula "8")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "29")))
                           (rule "notLeft" (formula "23"))
                           (rule "disjointDefinition" (formula "23") (term "0"))
                           (rule "measuredByCheckEmpty" (formula "23") (term "1") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "disjointWithSingleton2" (formula "23"))
                           (rule "notRight" (formula "23"))
                           (rule "elementOfSetMinus" (formula "1"))
                           (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "orRight" (formula "28"))
                     (rule "notRight" (formula "29"))
                     (rule "ifthenelse_split" (formula "24") (term "0"))
                     (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1"))
                        (rule "mul_literals" (formula "25") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                        (rule "equiv_left" (formula "15"))
                        (branch "Case 1"
                           (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "cut_direct" (formula "5") (term "0"))
                           (branch "CUT: self.right = null TRUE"
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "applyEq" (formula "15") (term "1") (ifseqformula "5"))
                              (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "5"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "5"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "5"))
                              (rule "eqSymm" (formula "26"))
                              (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "5"))
                              (rule "limit_java_lang_Object__inv_" (formula "16"))
                              (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "17")))
                              (rule "true_left" (formula "16"))
                              (rule "limit_Tree_footprint" (formula "20") (term "1"))
                              (rule "limit_Tree_footprint" (formula "4") (term "1"))
                              (rule "cut_direct" (formula "22") (term "0"))
                              (branch "CUT: self.left = self TRUE"
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "14") (term "1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "22"))
                                 (rule "inEqSimp_homoInEq0" (formula "23"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0"))
                                 (rule "add_literals" (formula "23") (term "0"))
                                 (rule "qeq_literals" (formula "23"))
                                 (rule "closeFalse" (formula "23"))
                              )
                              (branch "CUT: self.left = self FALSE"
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "28"))
                                 (rule "close" (formula "25") (ifseqformula "8"))
                              )
                           )
                           (branch "CUT: self.right = null FALSE"
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                              (rule "cut_direct" (formula "24") (term "0"))
                              (branch "CUT: self.left = self TRUE"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "applyEq" (formula "31") (term "1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "12") (term "1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "24"))
                                 (rule "inEqSimp_homoInEq0" (formula "25"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0"))
                                 (rule "add_zero_right" (formula "25") (term "0"))
                                 (rule "qeq_literals" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                              (branch "CUT: self.left = self FALSE"
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "34"))
                                 (rule "close" (formula "28") (ifseqformula "8"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "14"))
                           (rule "eqSymm" (formula "26"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "24") (term "1") (ifseqformula "14"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "14"))
                           (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "14"))
                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "14"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "14"))
                           (rule "eqSymm" (formula "26"))
                           (rule "limit_Tree_footprint" (formula "18") (term "1"))
                           (rule "limit_Tree_footprint" (formula "4") (term "1"))
                           (rule "limit_java_lang_Object__inv_" (formula "25"))
                           (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                           (rule "true_left" (formula "1"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: self.left = self TRUE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "20"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "20"))
                              (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "13") (term "1") (ifseqformula "20"))
                              (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "20"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                              (rule "inEqSimp_homoInEq0" (formula "21"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                              (rule "add_literals" (formula "21") (term "1,1,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0"))
                              (rule "add_literals" (formula "21") (term "0"))
                              (rule "qeq_literals" (formula "21"))
                              (rule "closeFalse" (formula "21"))
                           )
                           (branch "CUT: self.left = self FALSE"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "28"))
                              (rule "close" (formula "23") (ifseqformula "7"))
                           )
                        )
                     )
                     (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                        (rule "orRight" (formula "29"))
                        (rule "notRight" (formula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "equiv_left" (formula "16"))
                        (branch "Case 1"
                           (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "cut_direct" (formula "6") (term "0"))
                           (branch "CUT: self.right = null TRUE"
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "6"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "6"))
                              (rule "eqSymm" (formula "28"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "6"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "6"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "6"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "6"))
                              (rule "limit_java_lang_Object__inv_" (formula "17"))
                              (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")))
                              (rule "true_left" (formula "17"))
                              (rule "limit_Tree_footprint" (formula "5") (term "1"))
                              (rule "limit_Tree_footprint" (formula "21") (term "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "9"))
                              (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "20"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0") (ifseqformula "9"))
                              (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                               (builtin "Use Dependency Contract" (formula "29") (term "0") (ifInst ""  (formula "29") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "26") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "26") (term "1,0,0,0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")) (ifInst ""  (formula "1")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "25")) (ifInst ""  (formula "30")))
                              (rule "notLeft" (formula "26"))
                              (rule "disjointDefinition" (formula "26") (term "0"))
                              (rule "measuredByCheckEmpty" (formula "26") (term "1") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "disjointWithSingleton2" (formula "26"))
                              (rule "notRight" (formula "26"))
                              (rule "elementOfSetMinus" (formula "1"))
                              (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: self.right = null FALSE"
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "29"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "9"))
                              (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "35")))
                              (rule "true_left" (formula "7"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1,0") (ifseqformula "9"))
                              (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "30")))
                              (rule "true_left" (formula "22"))
                               (builtin "Use Dependency Contract" (formula "35") (term "0") (ifInst ""  (formula "35") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                              (rule "wellFormedAnon" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "replace_known_left" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "28")) (ifInst ""  (formula "15")) (ifInst ""  (formula "36")))
                              (rule "notLeft" (formula "29"))
                              (rule "disjointDefinition" (formula "29") (term "0"))
                              (rule "measuredByCheckEmpty" (formula "29") (term "1") (ifseqformula "12"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "disjointWithSingleton2" (formula "29"))
                              (rule "notRight" (formula "29"))
                              (rule "elementOfSetMinus" (formula "1"))
                              (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "15"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "15"))
                           (rule "eqSymm" (formula "27"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "15"))
                           (rule "eqSymm" (formula "27"))
                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "15"))
                           (rule "applyEq" (formula "24") (term "1") (ifseqformula "15"))
                           (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "15"))
                           (rule "limit_Tree_footprint" (formula "5") (term "1"))
                           (rule "limit_java_lang_Object__inv_" (formula "25"))
                           (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                           (rule "true_left" (formula "1"))
                           (rule "limit_Tree_footprint" (formula "19") (term "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "18"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                            (builtin "Use Dependency Contract" (formula "29") (term "0") (ifInst ""  (formula "29") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "24") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "23")) (ifInst ""  (formula "14")) (ifInst ""  (formula "30")))
                           (rule "notLeft" (formula "24"))
                           (rule "disjointDefinition" (formula "24") (term "0"))
                           (rule "measuredByCheckEmpty" (formula "24") (term "1") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "disjointWithSingleton2" (formula "24"))
                           (rule "notRight" (formula "24"))
                           (rule "elementOfSetMinus" (formula "1"))
                           (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
            )
            (branch "Usage"
                (builtin "One Step Simplification" (formula "29"))
               (rule "replaceKnownSelect_taclet2_3" (formula "29") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "29") (term "0,0,0"))
               (rule "replaceKnownSelect_taclet2_3" (formula "29") (term "1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "29") (term "1,0,1,0"))
               (rule "impRight" (formula "29"))
               (rule "emptyStatement" (formula "30") (term "1"))
               (rule "limit_Tree_treeSet" (formula "1") (term "0,1"))
               (rule "limit_Tree_treeSet" (formula "2") (term "1,1"))
                (builtin "JML assert" (formula "32"))
               (branch "Validity"
                  (rule "orRight" (formula "32"))
                   (builtin "One Step Simplification" (formula "33"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "replaceKnownSelect_taclet2_5" (formula "32") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "32") (term "0"))
                  (rule "replaceKnownSelect_taclet2_5" (formula "33") (term "1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "33") (term "1,0"))
                  (rule "replace_known_right" (formula "27") (term "0,0,0,0,0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_gtToGeq" (formula "26") (term "1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                  (rule "inEqSimp_gtToGeq" (formula "24"))
                  (rule "mul_literals" (formula "24") (term "1,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                  (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                  (rule "mul_literals" (formula "26") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                  (rule "mul_literals" (formula "24") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1"))
                  (rule "polySimp_rightDist" (formula "28") (term "1"))
                  (rule "mul_literals" (formula "28") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                  (rule "limit_Tree_treeSet" (formula "33") (term "1"))
                  (rule "limit_Tree_treeSet" (formula "34") (term "0"))
                  (rule "cut_direct" (formula "9") (term "0"))
                  (branch "CUT: self.left = null TRUE"
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "22") (term "1,0,0,1,1,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "22") (term "0,0,1,0,0") (ifseqformula "8"))
                     (rule "eqSymm" (formula "22") (term "0,1,0,0"))
                     (rule "replace_known_right" (formula "22") (term "0,1,0,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "8"))
                     (rule "applyEq" (formula "22") (term "1,2,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "22") (term "0,0,0,0") (ifseqformula "8"))
                     (rule "eqSymm" (formula "22") (term "0,0,0"))
                     (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "hideAuxiliaryEq" (formula "22"))
                     (rule "limit_Tree_treeSet" (formula "4") (term "1"))
                     (rule "limit_Tree_footprint" (formula "7") (term "1"))
                     (rule "limit_Tree_treeSet" (formula "3") (term "1"))
                     (rule "limit_Tree_footprint" (formula "19") (term "1"))
                     (rule "limit_java_lang_Object__inv_" (formula "13") (term "1"))
                     (rule "ifthenelse_split" (formula "22") (term "0"))
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "23"))
                        (rule "hideAuxiliaryEq" (formula "23"))
                        (rule "inEqSimp_homoInEq1" (formula "23"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "equiv_left" (formula "13"))
                        (branch "Case 1"
                           (rule "cut_direct" (formula "23") (term "0"))
                           (branch "CUT: self.right = self TRUE"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "23"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "23"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "23"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq0" (formula "24"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "1,1,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0"))
                              (rule "add_zero_right" (formula "24") (term "0"))
                              (rule "qeq_literals" (formula "24"))
                              (rule "closeFalse" (formula "24"))
                           )
                           (branch "CUT: self.right = self FALSE"
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "notLeft" (formula "23"))
                              (rule "referencedObjectIsCreatedRight" (formula "26") (ifseqformula "29"))
                              (rule "close" (formula "26") (ifseqformula "9"))
                           )
                        )
                        (branch "Case 2"
                           (rule "cut_direct" (formula "21") (term "0"))
                           (branch "CUT: self.right = self TRUE"
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "21"))
                              (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                              (rule "add_literals" (formula "22") (term "1,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0"))
                              (rule "add_literals" (formula "22") (term "0"))
                              (rule "qeq_literals" (formula "22"))
                              (rule "closeFalse" (formula "22"))
                           )
                           (branch "CUT: self.right = self FALSE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "29"))
                              (rule "close" (formula "24") (ifseqformula "9"))
                           )
                        )
                     )
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                        (rule "orRight" (formula "26"))
                        (rule "notRight" (formula "27"))
                        (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "23"))
                        (rule "hideAuxiliaryEq" (formula "23"))
                        (rule "equiv_left" (formula "14"))
                        (branch "Case 1"
                           (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,1") (ifseqformula "10"))
                           (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "30")))
                           (rule "true_left" (formula "7"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "10"))
                           (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                            (builtin "Use Dependency Contract" (formula "30") (term "0") (ifInst ""  (formula "30") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "27") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "27") (term "0,1,0,0,0,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "30")) (ifInst ""  (formula "1")) (ifInst ""  (formula "10")) (ifInst ""  (formula "26")) (ifInst ""  (formula "18")) (ifInst ""  (formula "31")))
                           (rule "notLeft" (formula "27"))
                           (rule "disjointDefinition" (formula "27") (term "0"))
                           (rule "measuredByCheckEmpty" (formula "27") (term "1") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "disjointWithSingleton2" (formula "27"))
                           (rule "notRight" (formula "27"))
                           (rule "elementOfSetMinus" (formula "1"))
                           (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,1") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "7"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "10"))
                           (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                            (builtin "Use Dependency Contract" (formula "30") (term "0") (ifInst ""  (formula "30") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "25") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "25") (term "0,1,0,0,0,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "1")) (ifInst ""  (formula "10")) (ifInst ""  (formula "24")) (ifInst ""  (formula "16")) (ifInst ""  (formula "31")))
                           (rule "notLeft" (formula "25"))
                           (rule "disjointDefinition" (formula "25") (term "0"))
                           (rule "measuredByCheckEmpty" (formula "25") (term "1") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "disjointWithSingleton2" (formula "25"))
                           (rule "notRight" (formula "25"))
                           (rule "elementOfSetMinus" (formula "1"))
                           (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "CUT: self.left = null FALSE"
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "replace_known_right" (formula "27") (term "0,0,0,0,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "5"))
                     (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                     (rule "ifthenelse_split" (formula "28") (term "0"))
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "30") (term "1,1") (ifseqformula "29"))
                        (rule "hideAuxiliaryEq" (formula "29"))
                        (rule "inEqSimp_homoInEq1" (formula "29"))
                        (rule "polySimp_addComm1" (formula "29") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1"))
                        (rule "polySimp_rightDist" (formula "29") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                        (rule "mul_literals" (formula "29") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                        (rule "ifthenelse_split" (formula "26") (term "0"))
                        (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "inEqSimp_homoInEq1" (formula "27"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                           (rule "mul_literals" (formula "27") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                           (rule "cut_direct" (formula "28") (term "0"))
                           (branch "CUT: self.right = self TRUE"
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "applyEq" (formula "19") (term "1") (ifseqformula "28"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "28"))
                              (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "28"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "28"))
                              (rule "eqSymm" (formula "32"))
                              (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "32"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "notLeft" (formula "26"))
                              (rule "referencedObjectIsCreatedRight" (formula "31") (ifseqformula "33"))
                              (rule "close" (formula "31") (ifseqformula "10"))
                           )
                           (branch "CUT: self.right = self FALSE"
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "referencedObjectIsCreatedRight" (formula "31") (ifseqformula "36"))
                              (rule "close" (formula "31") (ifseqformula "10"))
                           )
                        )
                        (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                           (rule "orRight" (formula "32"))
                           (rule "notRight" (formula "33"))
                           (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "cut_direct" (formula "28") (term "0"))
                           (branch "CUT: self.right = self TRUE"
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "28"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "28"))
                              (rule "applyEq" (formula "18") (term "1") (ifseqformula "28"))
                              (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "28"))
                              (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "28"))
                              (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "28"))
                              (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq0" (formula "29"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                              (rule "add_literals" (formula "29") (term "1,1,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0"))
                              (rule "add_literals" (formula "29") (term "0"))
                              (rule "qeq_literals" (formula "29"))
                              (rule "closeFalse" (formula "29"))
                           )
                           (branch "CUT: self.right = self FALSE"
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "referencedObjectIsCreatedRight" (formula "31") (ifseqformula "37"))
                              (rule "close" (formula "31") (ifseqformula "11"))
                           )
                        )
                     )
                     (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                        (rule "orRight" (formula "32"))
                        (rule "notRight" (formula "33"))
                        (rule "applyEqReverse" (formula "30") (term "1,1") (ifseqformula "29"))
                        (rule "hideAuxiliaryEq" (formula "29"))
                        (rule "ifthenelse_split" (formula "27") (term "0"))
                        (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "inEqSimp_homoInEq1" (formula "28"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1"))
                           (rule "polySimp_rightDist" (formula "28") (term "1"))
                           (rule "mul_literals" (formula "28") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                           (rule "cut_direct" (formula "27") (term "0"))
                           (branch "CUT: self.left = self TRUE"
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "27"))
                              (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq0" (formula "28"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,1,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0"))
                              (rule "add_literals" (formula "28") (term "0"))
                              (rule "qeq_literals" (formula "28"))
                              (rule "closeFalse" (formula "28"))
                           )
                           (branch "CUT: self.left = self FALSE"
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "referencedObjectIsCreatedRight" (formula "31") (ifseqformula "35"))
                              (rule "close" (formula "31") (ifseqformula "11"))
                           )
                        )
                        (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                           (rule "orRight" (formula "32"))
                           (rule "notRight" (formula "33"))
                           (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0") (ifseqformula "12"))
                           (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "38")))
                           (rule "true_left" (formula "8"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "36"))
                            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "10"))
                            (builtin "Use Dependency Contract" (formula "38") (term "0") (ifInst ""  (formula "38") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                           (rule "wellFormedAnon" (formula "32") (term "1,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "32") (term "1,0,0,0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "38")) (ifInst ""  (formula "2")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "31")) (ifInst ""  (formula "39")))
                           (rule "notLeft" (formula "32"))
                           (rule "disjointDefinition" (formula "32") (term "0"))
                           (rule "measuredByCheckEmpty" (formula "32") (term "1") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "disjointWithSingleton2" (formula "32"))
                           (rule "notRight" (formula "32"))
                           (rule "elementOfSetMinus" (formula "1"))
                           (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
               (branch "Usage"
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "replaceKnownSelect_taclet2_5" (formula "32") (term "0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "32") (term "0,0,0"))
                  (rule "replaceKnownSelect_taclet2_5" (formula "32") (term "1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "32") (term "1,0,1,0"))
                  (rule "impRight" (formula "32"))
                  (rule "emptyStatement" (formula "33") (term "1"))
                  (rule "limit_Tree_treeSet" (formula "1") (term "0,1"))
                  (rule "limit_Tree_treeSet" (formula "2") (term "1,1"))
                   (builtin "JML assert" (formula "35"))
                  (branch "Validity"
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "cut_direct" (formula "18") (term "0"))
                     (branch "CUT: self.left = null TRUE"
                        (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "36") (term "0"))
                        (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "36") (term "1"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "replaceKnownSelect_taclet2_3" (formula "35") (term "0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "35") (term "0,0,0,0"))
                        (rule "replaceKnownSelect_taclet2_3" (formula "35") (term "1,0,0,0,2,0,0"))
                        (rule "replaceKnownSelect_taclet2_3" (formula "35") (term "1,1,1,1,2,0,0"))
                        (rule "replaceKnownSelect_taclet2_3" (formula "35") (term "1,1,2,1,2,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "35") (term "1,0,0,0,2,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "35") (term "1,1,1,1,2,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "35") (term "1,1,2,1,2,0,0"))
                        (rule "replaceKnownSelect_taclet2_3" (formula "35") (term "1,1,1,0,1,2,0,0"))
                        (rule "replaceKnownSelect_taclet2_3" (formula "35") (term "1,1,0,0,1,2,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "35") (term "1,1,1,0,1,2,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "35") (term "1,1,0,0,1,2,0,0"))
                        (rule "castDel" (formula "35") (term "1"))
                        (rule "castDel" (formula "35") (term "0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "18")))
                        (rule "closeTrue" (formula "35"))
                     )
                     (branch "CUT: self.left = null FALSE"
                        (rule "eqTermCut" (formula "36") (term "1,0") (inst "s=Tree::select(heap, self, Tree::$left)"))
                        (branch "Assume self.left@heap[anon({(self, Tree::$heightVariant)}, anonOut_heap«anonHeapFunction»)] = self.left"
                           (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                            (builtin "Use Dependency Contract" (formula "37") (term "0") (ifInst ""  (formula "37") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "replaceKnownSelect_taclet2_3" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "wellFormedAnon" (formula "34") (term "1,0,0,0,0,0"))
                           (rule "replace_known_right" (formula "28") (term "0,0,0,0,0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "notLeft" (formula "15"))
                           (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "35"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "replace_known_left" (formula "33") (term "0,0,0,0,0,0") (ifseqformula "11"))
                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "11")) (ifInst ""  (formula "32")) (ifInst ""  (formula "35")) (ifInst ""  (formula "35")) (ifInst ""  (formula "17")) (ifInst ""  (formula "35")) (ifInst ""  (formula "35")) (ifInst ""  (formula "35")) (ifInst ""  (formula "37")))
                           (rule "notLeft" (formula "33"))
                           (rule "inEqSimp_gtToGeq" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "26"))
                           (rule "mul_literals" (formula "26") (term "1,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0"))
                           (rule "disjointDefinition" (formula "33") (term "1,0"))
                           (rule "measuredByCheckEmpty" (formula "33") (term "1") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "disjointWithSingleton2" (formula "33") (term "1"))
                           (rule "inEqSimp_gtToGeq" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "applyEq" (formula "4") (term "1") (ifseqformula "6"))
                           (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                           (rule "mul_literals" (formula "26") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1"))
                           (rule "polySimp_rightDist" (formula "28") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                           (rule "mul_literals" (formula "28") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                           (rule "elementOfSetMinus" (formula "33") (term "0,1"))
                           (rule "disjointAllFields" (formula "33") (term "0,0,1") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "referencedObjectIsCreatedRight" (formula "33") (ifseqformula "35"))
                           (rule "close" (formula "33") (ifseqformula "11"))
                        )
                        (branch "Assume self.left@heap[anon({(self, Tree::$heightVariant)}, anonOut_heap«anonHeapFunction»)] != self.left"
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "replaceKnownSelect_taclet2_3" (formula "37") (term "1,0"))
                           (rule "replaceKnownSelect_taclet2_3" (formula "1") (term "0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "37") (term "1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Usage"
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "replaceKnownSelect_taclet2_3" (formula "35") (term "1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "35") (term "1,0,0"))
                     (rule "impRight" (formula "35"))
                     (rule "emptyStatement" (formula "36") (term "1"))
                     (rule "limit_Tree_blackHeight_static_Tree" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                     (rule "limit_Tree_blackHeight_static_Tree" (formula "2") (term "1"))
                      (builtin "JML assert" (formula "38"))
                     (branch "Validity"
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "cut_direct" (formula "23") (term "0"))
                        (branch "CUT: self.right = null TRUE"
                           (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "39") (term "0"))
                           (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "39") (term "1"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "replaceKnownSelect_taclet2_5" (formula "38") (term "0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "38") (term "0,0,0,0"))
                           (rule "replaceKnownSelect_taclet2_5" (formula "38") (term "1,0,0,0,2,0,0"))
                           (rule "replaceKnownSelect_taclet2_5" (formula "38") (term "1,1,1,1,2,0,0"))
                           (rule "replaceKnownSelect_taclet2_5" (formula "38") (term "1,1,2,1,2,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "38") (term "1,0,0,0,2,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "38") (term "1,1,1,1,2,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "38") (term "1,1,2,1,2,0,0"))
                           (rule "replaceKnownSelect_taclet2_5" (formula "38") (term "1,1,1,0,1,2,0,0"))
                           (rule "replaceKnownSelect_taclet2_5" (formula "38") (term "1,1,0,0,1,2,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "38") (term "1,1,1,0,1,2,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "38") (term "1,1,0,0,1,2,0,0"))
                           (rule "castDel" (formula "38") (term "1"))
                           (rule "castDel" (formula "38") (term "0"))
                           (rule "replace_known_left" (formula "33") (term "0,0,0,0,0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "replace_known_left" (formula "38") (term "0,1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "23")))
                           (rule "closeTrue" (formula "38"))
                        )
                        (branch "CUT: self.right = null FALSE"
                           (rule "eqTermCut" (formula "39") (term "1,1") (inst "s=Tree::select(anon(heap,
                  singleton(self, Tree::$heightVariant),
                  anonOut_heap<<anonHeapFunction>>),
             self<<origin(\"assignable @ file Tree.java @ line 1366\",\"[assignable @ file Tree.java @ line 1366]\")>>,
             Tree::$right)"))
                           (branch "Assume self.right = self.right@heap[anon({(self, Tree::$heightVariant)}, anonOut_heap«anonHeapFunction»)]"
                              (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "1"))
                               (builtin "Use Dependency Contract" (formula "40") (term "0") (ifInst ""  (formula "40") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "replaceKnownSelect_taclet2_5" (formula "1") (term "1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "1") (term "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "wellFormedAnon" (formula "37") (term "1,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "33") (term "0,0,0,0,0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "24"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "replace_known_right" (formula "37") (term "0,1,0,0,0,0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")) (ifInst ""  (formula "36")) (ifInst ""  (formula "38")) (ifInst ""  (formula "24")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                              (rule "notLeft" (formula "37"))
                              (rule "inEqSimp_gtToGeq" (formula "32") (term "1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                              (rule "inEqSimp_gtToGeq" (formula "30"))
                              (rule "mul_literals" (formula "30") (term "1,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0"))
                              (rule "disjointDefinition" (formula "37") (term "1,0"))
                              (rule "measuredByCheckEmpty" (formula "37") (term "1") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "disjointWithSingleton2" (formula "37") (term "1"))
                              (rule "inEqSimp_gtToGeq" (formula "34"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                              (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                              (rule "applyEq" (formula "4") (term "1") (ifseqformula "6"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                              (rule "mul_literals" (formula "30") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1"))
                              (rule "polySimp_rightDist" (formula "34") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                              (rule "mul_literals" (formula "34") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                              (rule "elementOfSetMinus" (formula "37") (term "0,1"))
                              (rule "disjointAllFields" (formula "37") (term "0,0,1") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "38"))
                              (rule "close" (formula "37") (ifseqformula "14"))
                           )
                           (branch "Assume self.right != self.right@heap[anon({(self, Tree::$heightVariant)}, anonOut_heap«anonHeapFunction»)]"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "replaceKnownSelect_taclet2_5" (formula "1") (term "1,0"))
                              (rule "replaceKnownSelect_taclet2_5" (formula "40") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "1") (term "1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Usage"
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "replaceKnownSelect_taclet2_5" (formula "38") (term "1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "38") (term "1,0,0"))
                        (rule "impRight" (formula "38"))
                        (rule "emptyStatement" (formula "39") (term "1"))
                        (rule "limit_Tree_blackHeight_static_Tree" (formula "1") (term "0"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                        (rule "limit_Tree_blackHeight_static_Tree" (formula "2") (term "1"))
                         (builtin "JML assert" (formula "41"))
                        (branch "Validity"
                           (rule "orRight" (formula "41"))
                            (builtin "One Step Simplification" (formula "42"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "replaceKnownSelect_taclet2_3" (formula "41") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "41") (term "0"))
                           (rule "replaceKnownSelect_taclet2_3" (formula "42") (term "1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "42") (term "1,0"))
                           (rule "replace_known_right" (formula "34") (term "0,0,0,0,0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "41"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "inEqSimp_gtToGeq" (formula "36") (term "1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "32"))
                           (rule "mul_literals" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                           (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                           (rule "applyEq" (formula "10") (term "1") (ifseqformula "12"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1"))
                           (rule "mul_literals" (formula "36") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                           (rule "mul_literals" (formula "32") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1"))
                           (rule "mul_literals" (formula "34") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                           (rule "limit_Tree_blackBalanced" (formula "42") (term "1"))
                           (rule "limit_Tree_blackBalanced" (formula "43") (term "0"))
                           (rule "ifthenelse_split" (formula "37") (term "0"))
                           (branch " (¬self.right = null ∨ self.right = self) ∧ (self.right = self ∨ ¬self.right.<created> = TRUE) TRUE"
                              (rule "andLeft" (formula "37"))
                              (rule "applyEqReverse" (formula "40") (term "1,1,1") (ifseqformula "39"))
                              (rule "hideAuxiliaryEq" (formula "39"))
                              (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                              (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                              (rule "mul_literals" (formula "39") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                              (rule "ifthenelse_split" (formula "35") (term "0"))
                              (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "inEqSimp_homoInEq1" (formula "36"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                 (rule "mul_literals" (formula "36") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                 (rule "cut_direct" (formula "11") (term "0"))
                                 (branch "CUT: self.right = null TRUE"
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "11"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "33"))
                                    (rule "close" (formula "37") (ifseqformula "11"))
                                 )
                                 (branch "CUT: self.right = null FALSE"
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "11"))
                                    (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                                    (rule "cut_direct" (formula "37") (term "0"))
                                    (branch "CUT: self.right = self TRUE"
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "37"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "28") (term "1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "38"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0"))
                                       (rule "add_literals" (formula "38") (term "0"))
                                       (rule "qeq_literals" (formula "38"))
                                       (rule "closeFalse" (formula "38"))
                                    )
                                    (branch "CUT: self.right = self FALSE"
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "notLeft" (formula "37"))
                                       (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "42"))
                                       (rule "close" (formula "40") (ifseqformula "19"))
                                    )
                                 )
                              )
                              (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                 (rule "orRight" (formula "42"))
                                 (rule "notRight" (formula "43"))
                                 (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "cut_direct" (formula "12") (term "0"))
                                 (branch "CUT: self.right = null TRUE"
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "33"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "12"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "33"))
                                    (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "33"))
                                    (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "33"))
                                    (rule "close" (formula "37") (ifseqformula "12"))
                                 )
                                 (branch "CUT: self.right = null FALSE"
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "29"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                                    (rule "applyEq" (formula "10") (term "1") (ifseqformula "12"))
                                    (rule "cut_direct" (formula "37") (term "0"))
                                    (branch "CUT: self.right = self TRUE"
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "41") (term "0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "29") (term "1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "42") (term "0") (ifseqformula "37"))
                                       (rule "eqSymm" (formula "42"))
                                       (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "27") (term "1") (ifseqformula "37"))
                                       (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "37"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "37"))
                                       (rule "inEqSimp_homoInEq0" (formula "38"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0"))
                                       (rule "add_zero_right" (formula "38") (term "0"))
                                       (rule "qeq_literals" (formula "38"))
                                       (rule "closeFalse" (formula "38"))
                                    )
                                    (branch "CUT: self.right = self FALSE"
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "notLeft" (formula "37"))
                                       (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "42"))
                                       (rule "close" (formula "40") (ifseqformula "20"))
                                    )
                                 )
                              )
                           )
                           (branch " (¬self.right = null ∨ self.right = self) ∧ (self.right = self ∨ ¬self.right.<created> = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "38") (term "1,1,1") (ifseqformula "37"))
                              (rule "hideAuxiliaryEq" (formula "37"))
                              (rule "andRight" (formula "40"))
                              (branch "Case 1"
                                 (rule "orRight" (formula "40"))
                                 (rule "notRight" (formula "40"))
                                 (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
                                 (rule "limit_Tree_blackHeight_static_Tree" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                                 (rule "limit_Tree_footprint" (formula "29") (term "1"))
                                 (rule "limit_Tree_blackHeight_static_Tree" (formula "4") (term "1"))
                                 (rule "limit_Tree_treeSet" (formula "10") (term "1"))
                                 (rule "limit_java_lang_Object__inv_" (formula "25") (term "1"))
                                 (rule "limit_Tree_treeSet" (formula "11") (term "1"))
                                 (rule "limit_Tree_footprint" (formula "15") (term "1"))
                                 (rule "ifthenelse_split" (formula "31") (term "0"))
                                 (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "33") (term "1,1") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "32"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                    (rule "mul_literals" (formula "32") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                    (rule "equiv_left" (formula "25"))
                                    (branch "Case 1"
                                       (rule "cut_direct" (formula "32") (term "0"))
                                       (branch "CUT: self.left = self TRUE"
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "applyEq" (formula "24") (term "1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "32"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "32"))
                                          (rule "inEqSimp_homoInEq0" (formula "33"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                          (rule "add_literals" (formula "33") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "33") (term "1,0"))
                                          (rule "add_zero_right" (formula "33") (term "0"))
                                          (rule "qeq_literals" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                       (branch "CUT: self.left = self FALSE"
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "38"))
                                          (rule "close" (formula "35") (ifseqformula "18"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "cut_direct" (formula "30") (term "0"))
                                       (branch "CUT: self.left = self TRUE"
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "30"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "22") (term "1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "24") (term "1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "30"))
                                          (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "30"))
                                          (rule "inEqSimp_homoInEq0" (formula "31"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0"))
                                          (rule "add_zero_right" (formula "31") (term "0"))
                                          (rule "qeq_literals" (formula "31"))
                                          (rule "closeFalse" (formula "31"))
                                       )
                                       (branch "CUT: self.left = self FALSE"
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "notLeft" (formula "30"))
                                          (rule "referencedObjectIsCreatedRight" (formula "33") (ifseqformula "38"))
                                          (rule "close" (formula "33") (ifseqformula "18"))
                                       )
                                    )
                                 )
                                 (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                    (rule "orRight" (formula "35"))
                                    (rule "notRight" (formula "36"))
                                    (rule "applyEqReverse" (formula "33") (term "1,1") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "equiv_left" (formula "26"))
                                    (branch "Case 1"
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,1") (ifseqformula "19"))
                                       (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")))
                                       (rule "true_left" (formula "18"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "19"))
                                       (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                        (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "19")) (ifInst ""  (formula "19")) (ifInst ""  (formula "35")) (ifInst ""  (formula "39")) (ifInst ""  (formula "1")) (ifInst ""  (formula "39")) (ifInst ""  (formula "25")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                       (rule "true_left" (formula "36"))
                                        (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "9") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "36") (term "0,0,0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "19")) (ifInst ""  (formula "35")) (ifInst ""  (formula "39")) (ifInst ""  (formula "1")) (ifInst ""  (formula "39")) (ifInst ""  (formula "25")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                       (rule "disjointDefinition" (formula "36") (term "0,0"))
                                       (rule "measuredByCheckEmpty" (formula "36") (term "1,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "disjointWithSingleton2" (formula "36") (term "0"))
                                       (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "8"))
                                       (rule "eqSymm" (formula "36") (term "1"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                        (builtin "Use Dependency Contract" (formula "39") (term "0") (ifInst ""  (formula "39") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "36") (term "1,1,0,0,0,0"))
                                       (rule "replace_known_left" (formula "36") (term "0,1,0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "39")) (ifInst ""  (formula "1")) (ifInst ""  (formula "19")) (ifInst ""  (formula "35")) (ifInst ""  (formula "25")) (ifInst ""  (formula "40")))
                                       (rule "notLeft" (formula "36"))
                                       (rule "disjointDefinition" (formula "36") (term "0"))
                                       (rule "measuredByCheckEmpty" (formula "36") (term "1") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "disjointWithSingleton2" (formula "36"))
                                       (rule "notRight" (formula "36"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,1") (ifseqformula "19"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "18"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "19"))
                                       (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                        (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "34") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "34") (term "0,1,1,0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "19")) (ifInst ""  (formula "19")) (ifInst ""  (formula "33")) (ifInst ""  (formula "39")) (ifInst ""  (formula "1")) (ifInst ""  (formula "39")) (ifInst ""  (formula "25")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "10")))
                                       (rule "true_left" (formula "34"))
                                        (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "9") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "34") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "34") (term "0,0,0,0,0,0") (ifseqformula "19"))
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "19")) (ifInst ""  (formula "33")) (ifInst ""  (formula "39")) (ifInst ""  (formula "1")) (ifInst ""  (formula "39")) (ifInst ""  (formula "25")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                       (rule "disjointDefinition" (formula "34") (term "0,0"))
                                       (rule "measuredByCheckEmpty" (formula "34") (term "1,0") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "disjointWithSingleton2" (formula "34") (term "0"))
                                       (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "8"))
                                       (rule "eqSymm" (formula "34") (term "1"))
                                       (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                        (builtin "Use Dependency Contract" (formula "39") (term "0") (ifInst ""  (formula "39") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "34") (term "1,1,0,0,0,0"))
                                       (rule "replace_known_left" (formula "34") (term "1,0,0,0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")) (ifInst ""  (formula "1")) (ifInst ""  (formula "19")) (ifInst ""  (formula "19")) (ifInst ""  (formula "33")) (ifInst ""  (formula "40")))
                                       (rule "notLeft" (formula "34"))
                                       (rule "disjointDefinition" (formula "34") (term "0"))
                                       (rule "measuredByCheckEmpty" (formula "34") (term "1") (ifseqformula "22"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "disjointWithSingleton2" (formula "34"))
                                       (rule "notRight" (formula "34"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "40"))
                                 (rule "notRight" (formula "41"))
                                 (rule "ifthenelse_split" (formula "36") (term "0"))
                                 (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "inEqSimp_homoInEq1" (formula "37"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                    (rule "mul_literals" (formula "37") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                    (rule "cut_direct" (formula "12") (term "0"))
                                    (branch "CUT: self.right = null TRUE"
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "12"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "36") (term "0") (ifseqformula "12"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "12"))
                                       (rule "limit_java_lang_Object__inv_" (formula "26") (term "1"))
                                       (rule "limit_Tree_treeSet" (formula "10") (term "1"))
                                       (rule "limit_Tree_blackHeight_static_Tree" (formula "6") (term "1"))
                                       (rule "limit_Tree_footprint" (formula "30") (term "1"))
                                       (rule "limit_Tree_footprint" (formula "16") (term "1"))
                                       (rule "limit_Tree_blackHeight_static_Tree" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                                       (rule "limit_Tree_treeSet" (formula "11") (term "1"))
                                       (rule "equiv_left" (formula "26"))
                                       (branch "Case 1"
                                          (rule "cut_direct" (formula "33") (term "0"))
                                          (branch "CUT: self.left = self TRUE"
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "25") (term "1") (ifseqformula "33"))
                                             (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "33"))
                                             (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "33"))
                                             (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "33"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "33"))
                                             (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "33"))
                                             (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "33"))
                                             (rule "inEqSimp_homoInEq0" (formula "34"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "qeq_literals" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                          (branch "CUT: self.left = self FALSE"
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "notLeft" (formula "33"))
                                             (rule "referencedObjectIsCreatedRight" (formula "36") (ifseqformula "39"))
                                             (rule "close" (formula "36") (ifseqformula "19"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "cut_direct" (formula "31") (term "0"))
                                          (branch "CUT: self.left = self TRUE"
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "31"))
                                             (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "31"))
                                             (rule "inEqSimp_homoInEq0" (formula "32"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0"))
                                             (rule "add_literals" (formula "32") (term "0"))
                                             (rule "qeq_literals" (formula "32"))
                                             (rule "closeFalse" (formula "32"))
                                          )
                                          (branch "CUT: self.left = self FALSE"
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "referencedObjectIsCreatedRight" (formula "34") (ifseqformula "39"))
                                             (rule "close" (formula "34") (ifseqformula "19"))
                                          )
                                       )
                                    )
                                    (branch "CUT: self.right = null FALSE"
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                                       (rule "applyEq" (formula "10") (term "1") (ifseqformula "12"))
                                       (rule "cut_direct" (formula "36") (term "0"))
                                       (branch "CUT: self.left = self TRUE"
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "24") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "26") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "43") (term "1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "36"))
                                          (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "36"))
                                          (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq0" (formula "37"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                          (rule "add_literals" (formula "37") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0"))
                                          (rule "add_zero_right" (formula "37") (term "0"))
                                          (rule "qeq_literals" (formula "37"))
                                          (rule "closeFalse" (formula "37"))
                                       )
                                       (branch "CUT: self.left = self FALSE"
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "notLeft" (formula "36"))
                                          (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "46"))
                                          (rule "close" (formula "40") (ifseqformula "20"))
                                       )
                                    )
                                 )
                                 (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                    (rule "orRight" (formula "41"))
                                    (rule "notRight" (formula "42"))
                                    (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "cut_direct" (formula "13") (term "0"))
                                    (branch "CUT: self.right = null TRUE"
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "13"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "13"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "13"))
                                       (rule "limit_Tree_blackHeight_static_Tree" (formula "7") (term "1"))
                                       (rule "limit_Tree_treeSet" (formula "12") (term "1"))
                                       (rule "limit_Tree_footprint" (formula "17") (term "1"))
                                       (rule "limit_java_lang_Object__inv_" (formula "27") (term "1"))
                                       (rule "limit_Tree_blackHeight_static_Tree" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                       (rule "limit_Tree_footprint" (formula "31") (term "1"))
                                       (rule "limit_Tree_treeSet" (formula "11") (term "1"))
                                       (rule "equiv_left" (formula "27"))
                                       (branch "Case 1"
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "1,1") (ifseqformula "20"))
                                          (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "40")))
                                          (rule "true_left" (formula "18"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "20"))
                                          (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                           (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "37") (term "0,0,1,0,0,0") (ifseqformula "40"))
                                           (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "36")) (ifInst ""  (formula "40")) (ifInst ""  (formula "1")) (ifInst ""  (formula "26")) (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "10")))
                                          (rule "true_left" (formula "37"))
                                           (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "9") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "37") (term "0,0,0,0,0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "20")) (ifInst ""  (formula "36")) (ifInst ""  (formula "40")) (ifInst ""  (formula "1")) (ifInst ""  (formula "40")) (ifInst ""  (formula "26")) (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                                          (rule "disjointDefinition" (formula "37") (term "0,0"))
                                          (rule "measuredByCheckEmpty" (formula "37") (term "1,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "disjointWithSingleton2" (formula "37") (term "0"))
                                          (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "8"))
                                          (rule "eqSymm" (formula "37") (term "1"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                           (builtin "Use Dependency Contract" (formula "40") (term "0") (ifInst ""  (formula "40") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "37") (term "1,1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "37") (term "0,1,0,0,0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "40")) (ifInst ""  (formula "1")) (ifInst ""  (formula "20")) (ifInst ""  (formula "36")) (ifInst ""  (formula "26")) (ifInst ""  (formula "41")))
                                          (rule "notLeft" (formula "37"))
                                          (rule "disjointDefinition" (formula "37") (term "0"))
                                          (rule "measuredByCheckEmpty" (formula "37") (term "1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "disjointWithSingleton2" (formula "37"))
                                          (rule "notRight" (formula "37"))
                                          (rule "elementOfSetMinus" (formula "1"))
                                          (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1") (ifseqformula "20"))
                                          (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "40")))
                                          (rule "true_left" (formula "14"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "20"))
                                          (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                           (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "35") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "35") (term "0,0,0,0,0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "20")) (ifInst ""  (formula "34")) (ifInst ""  (formula "40")) (ifInst ""  (formula "1")) (ifInst ""  (formula "40")) (ifInst ""  (formula "26")) (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "10")))
                                          (rule "true_left" (formula "35"))
                                           (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "9") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "35") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "35") (term "0,0,0,0,0,0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "20")) (ifInst ""  (formula "34")) (ifInst ""  (formula "40")) (ifInst ""  (formula "1")) (ifInst ""  (formula "40")) (ifInst ""  (formula "26")) (ifInst ""  (formula "40")) (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                                          (rule "disjointDefinition" (formula "35") (term "0,0"))
                                          (rule "measuredByCheckEmpty" (formula "35") (term "1,0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "disjointWithSingleton2" (formula "35") (term "0"))
                                          (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "8"))
                                          (rule "eqSymm" (formula "35") (term "1"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                           (builtin "Use Dependency Contract" (formula "40") (term "0") (ifInst ""  (formula "40") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "35") (term "1,1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "35") (term "1,0,0,0") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "40")) (ifInst ""  (formula "1")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "34")) (ifInst ""  (formula "41")))
                                          (rule "notLeft" (formula "35"))
                                          (rule "disjointDefinition" (formula "35") (term "0"))
                                          (rule "measuredByCheckEmpty" (formula "35") (term "1") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "disjointWithSingleton2" (formula "35"))
                                          (rule "notRight" (formula "35"))
                                          (rule "elementOfSetMinus" (formula "1"))
                                          (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "CUT: self.right = null FALSE"
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "30"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "applyEq" (formula "11") (term "1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,1") (ifseqformula "21"))
                                       (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "9"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "21"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
                                       (rule "true_left" (formula "6"))
                                        (builtin "Use Dependency Contract" (formula "7") (term "0") (ifInst ""  (formula "7") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "41") (term "1,1,0,0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "40")) (ifInst ""  (formula "42")) (ifInst ""  (formula "42")) (ifInst ""  (formula "30")) (ifInst ""  (formula "42")) (ifInst ""  (formula "42")) (ifInst ""  (formula "42")) (ifInst ""  (formula "7")))
                                       (rule "true_left" (formula "41"))
                                        (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "40")) (ifInst ""  (formula "47")) (ifInst ""  (formula "1")) (ifInst ""  (formula "47")) (ifInst ""  (formula "27")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                                       (rule "true_left" (formula "41"))
                                        (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "9") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "21")) (ifInst ""  (formula "40")) (ifInst ""  (formula "47")) (ifInst ""  (formula "1")) (ifInst ""  (formula "47")) (ifInst ""  (formula "27")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                                       (rule "disjointDefinition" (formula "41") (term "0,0"))
                                       (rule "measuredByCheckEmpty" (formula "41") (term "1,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "disjointWithSingleton2" (formula "41") (term "0"))
                                       (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "8"))
                                       (rule "eqSymm" (formula "41") (term "1"))
                                       (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                        (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "6") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "21")) (ifInst ""  (formula "40")) (ifInst ""  (formula "42")) (ifInst ""  (formula "2")) (ifInst ""  (formula "42")) (ifInst ""  (formula "30")) (ifInst ""  (formula "42")) (ifInst ""  (formula "42")) (ifInst ""  (formula "42")))
                                       (rule "disjointDefinition" (formula "41") (term "0,0"))
                                       (rule "measuredByCheckEmpty" (formula "41") (term "1,0") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "disjointWithSingleton2" (formula "41") (term "0"))
                                       (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "5"))
                                       (rule "eqSymm" (formula "41") (term "1"))
                                       (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                        (builtin "Use Dependency Contract" (formula "47") (term "0") (ifInst ""  (formula "47") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "41") (term "1,1,0,0,0,0"))
                                       (rule "replace_known_left" (formula "41") (term "1,0,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "47")) (ifInst ""  (formula "1")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "40")) (ifInst ""  (formula "48")))
                                       (rule "notLeft" (formula "41"))
                                       (rule "disjointDefinition" (formula "41") (term "0"))
                                       (rule "measuredByCheckEmpty" (formula "41") (term "1") (ifseqformula "24"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "disjointWithSingleton2" (formula "41"))
                                       (rule "notRight" (formula "41"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "replaceKnownSelect_taclet2_3" (formula "41") (term "0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "41") (term "0,0,0"))
                           (rule "replaceKnownSelect_taclet2_3" (formula "41") (term "1,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "41") (term "1,0,1,0"))
                           (rule "impRight" (formula "41"))
                           (rule "emptyStatement" (formula "42") (term "1"))
                           (rule "limit_Tree_blackBalanced" (formula "1") (term "0,1"))
                           (rule "limit_Tree_blackBalanced" (formula "2") (term "1,1"))
                            (builtin "JML assert" (formula "44"))
                           (branch "Validity"
                              (rule "orRight" (formula "44"))
                               (builtin "One Step Simplification" (formula "45"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "replaceKnownSelect_taclet2_5" (formula "44") (term "0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "44") (term "0"))
                              (rule "replaceKnownSelect_taclet2_5" (formula "45") (term "1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "45") (term "1,0"))
                              (rule "replace_known_right" (formula "39") (term "0,0,0,0,0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "30"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "inEqSimp_gtToGeq" (formula "36"))
                              (rule "mul_literals" (formula "36") (term "1,0,0"))
                              (rule "add_zero_right" (formula "36") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "38") (term "1"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                              (rule "inEqSimp_gtToGeq" (formula "40"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                              (rule "applyEq" (formula "10") (term "1") (ifseqformula "12"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                              (rule "mul_literals" (formula "36") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                              (rule "mul_literals" (formula "38") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1"))
                              (rule "polySimp_rightDist" (formula "40") (term "1"))
                              (rule "mul_literals" (formula "40") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                              (rule "limit_Tree_blackBalanced" (formula "45") (term "1"))
                              (rule "limit_Tree_blackBalanced" (formula "46") (term "0"))
                              (rule "cut_direct" (formula "28") (term "0"))
                              (branch "CUT: self.left = null TRUE"
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "replace_known_left" (formula "39") (term "0,0,0,0,0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "33") (term "0,0,0,0") (ifseqformula "24"))
                                 (rule "eqSymm" (formula "33") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "38"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "24"))
                                 (rule "eqSymm" (formula "9"))
                                 (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "24"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "24"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "24"))
                                 (rule "eqSymm" (formula "9"))
                                 (rule "limit_Tree_blackBalanced" (formula "3") (term "1"))
                                 (rule "limit_Tree_footprint" (formula "30") (term "1"))
                                 (rule "limit_Tree_blackHeight_static_Tree" (formula "8") (term "1"))
                                 (rule "limit_Tree_footprint" (formula "18") (term "1"))
                                 (rule "limit_Tree_treeSet" (formula "14") (term "1"))
                                 (rule "limit_Tree_treeSet" (formula "15") (term "1"))
                                 (rule "limit_Tree_blackHeight_static_Tree" (formula "10") (term "0"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "limit_java_lang_Object__inv_" (formula "23") (term "1"))
                                 (rule "limit_Tree_blackBalanced" (formula "4") (term "1"))
                                 (rule "ifthenelse_split" (formula "33") (term "0"))
                                 (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "35") (term "1,1") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "34"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                    (rule "equiv_left" (formula "23"))
                                    (branch "Case 1"
                                       (rule "cut_direct" (formula "34") (term "0"))
                                       (branch "CUT: self.right = self TRUE"
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "28") (term "1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "26") (term "1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "34"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq0" (formula "35"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0"))
                                          (rule "add_zero_right" (formula "35") (term "0"))
                                          (rule "qeq_literals" (formula "35"))
                                          (rule "closeFalse" (formula "35"))
                                       )
                                       (branch "CUT: self.right = self FALSE"
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "notLeft" (formula "34"))
                                          (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "40"))
                                          (rule "close" (formula "37") (ifseqformula "19"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "cut_direct" (formula "32") (term "0"))
                                       (branch "CUT: self.right = self TRUE"
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "32"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "32"))
                                          (rule "inEqSimp_homoInEq0" (formula "33"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                          (rule "add_literals" (formula "33") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "33") (term "1,0"))
                                          (rule "add_literals" (formula "33") (term "0"))
                                          (rule "qeq_literals" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                       (branch "CUT: self.right = self FALSE"
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "notLeft" (formula "32"))
                                          (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "40"))
                                          (rule "close" (formula "35") (ifseqformula "19"))
                                       )
                                    )
                                 )
                                 (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                    (rule "orRight" (formula "37"))
                                    (rule "notRight" (formula "38"))
                                    (rule "applyEqReverse" (formula "35") (term "1,1") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "equiv_left" (formula "24"))
                                    (branch "Case 1"
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "1,1") (ifseqformula "20"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "17"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "20"))
                                       (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                        (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "8") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "38") (term "0,0,0,0,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "20")) (ifInst ""  (formula "37")) (ifInst ""  (formula "41")) (ifInst ""  (formula "1")) (ifInst ""  (formula "41")) (ifInst ""  (formula "29")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")) (ifInst ""  (formula "8")))
                                       (rule "true_left" (formula "38"))
                                        (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "7") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "38") (term "0,0,0,0,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "20")) (ifInst ""  (formula "37")) (ifInst ""  (formula "41")) (ifInst ""  (formula "1")) (ifInst ""  (formula "41")) (ifInst ""  (formula "29")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                       (rule "disjointDefinition" (formula "38") (term "0,0"))
                                       (rule "measuredByCheckEmpty" (formula "38") (term "1,0") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "disjointWithSingleton2" (formula "38") (term "0"))
                                       (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "6"))
                                       (rule "eqSymm" (formula "38") (term "1"))
                                       (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                        (builtin "Use Dependency Contract" (formula "41") (term "0") (ifInst ""  (formula "41") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "38") (term "1,1,0,0,0,0"))
                                       (rule "replace_known_left" (formula "38") (term "1,0,0,0") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "41")) (ifInst ""  (formula "1")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "37")) (ifInst ""  (formula "42")))
                                       (rule "notLeft" (formula "38"))
                                       (rule "disjointDefinition" (formula "38") (term "0"))
                                       (rule "measuredByCheckEmpty" (formula "38") (term "1") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "disjointWithSingleton2" (formula "38"))
                                       (rule "notRight" (formula "38"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "29"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1") (ifseqformula "20"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "14"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "20"))
                                       (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                        (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "8") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "35")) (ifInst ""  (formula "41")) (ifInst ""  (formula "1")) (ifInst ""  (formula "41")) (ifInst ""  (formula "27")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                       (rule "true_left" (formula "36"))
                                        (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "7") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "36") (term "0,1,1,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "35")) (ifInst ""  (formula "41")) (ifInst ""  (formula "1")) (ifInst ""  (formula "41")) (ifInst ""  (formula "27")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                       (rule "disjointDefinition" (formula "36") (term "0,0"))
                                       (rule "measuredByCheckEmpty" (formula "36") (term "1,0") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "disjointWithSingleton2" (formula "36") (term "0"))
                                       (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "6"))
                                       (rule "eqSymm" (formula "36") (term "1"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                        (builtin "Use Dependency Contract" (formula "41") (term "0") (ifInst ""  (formula "41") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "36") (term "1,1,0,0,0,0"))
                                       (rule "replace_known_right" (formula "36") (term "0,0,0,0,0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")) (ifInst ""  (formula "20")) (ifInst ""  (formula "20")) (ifInst ""  (formula "35")) (ifInst ""  (formula "27")) (ifInst ""  (formula "42")))
                                       (rule "notLeft" (formula "36"))
                                       (rule "disjointDefinition" (formula "36") (term "0"))
                                       (rule "measuredByCheckEmpty" (formula "36") (term "1") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "disjointWithSingleton2" (formula "36"))
                                       (rule "notRight" (formula "36"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "CUT: self.left = null FALSE"
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "replace_known_right" (formula "39") (term "0,0,0,0,0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "notLeft" (formula "26"))
                                 (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "45"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "applyEq" (formula "20") (term "1") (ifseqformula "21"))
                                 (rule "applyEq" (formula "15") (term "1") (ifseqformula "17"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "5"))
                                 (rule "ifthenelse_split" (formula "40") (term "0"))
                                 (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "inEqSimp_homoInEq1" (formula "41"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                    (rule "mul_literals" (formula "41") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                    (rule "ifthenelse_split" (formula "38") (term "0"))
                                    (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "39"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1"))
                                       (rule "mul_literals" (formula "39") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                       (rule "cut_direct" (formula "40") (term "0"))
                                       (branch "CUT: self.right = self TRUE"
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "40"))
                                          (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "31") (term "1") (ifseqformula "40"))
                                          (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "40"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "40"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "40"))
                                          (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "40"))
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "40"))
                                          (rule "eqSymm" (formula "7"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "40"))
                                          (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "40"))
                                          (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "40"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "40"))
                                          (rule "eqSymm" (formula "44"))
                                          (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "notLeft" (formula "38"))
                                          (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "45"))
                                          (rule "close" (formula "43") (ifseqformula "22"))
                                       )
                                       (branch "CUT: self.right = self FALSE"
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "48"))
                                          (rule "close" (formula "43") (ifseqformula "22"))
                                       )
                                    )
                                    (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "44"))
                                       (rule "notRight" (formula "45"))
                                       (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "cut_direct" (formula "40") (term "0"))
                                       (branch "CUT: self.right = self TRUE"
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "40"))
                                          (rule "eqSymm" (formula "45"))
                                          (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "40"))
                                          (rule "inEqSimp_homoInEq0" (formula "41"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0"))
                                          (rule "add_literals" (formula "41") (term "0"))
                                          (rule "qeq_literals" (formula "41"))
                                          (rule "closeFalse" (formula "41"))
                                       )
                                       (branch "CUT: self.right = self FALSE"
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "49"))
                                          (rule "close" (formula "43") (ifseqformula "23"))
                                       )
                                    )
                                 )
                                 (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                    (rule "orRight" (formula "44"))
                                    (rule "notRight" (formula "45"))
                                    (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "ifthenelse_split" (formula "39") (term "0"))
                                    (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "inEqSimp_homoInEq1" (formula "40"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1"))
                                       (rule "mul_literals" (formula "40") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                       (rule "cut_direct" (formula "39") (term "0"))
                                       (branch "CUT: self.left = self TRUE"
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "39"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "45") (term "1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "27") (term "1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "29") (term "1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq0" (formula "40"))
                                          (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                          (rule "add_literals" (formula "40") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0"))
                                          (rule "add_zero_right" (formula "40") (term "0"))
                                          (rule "qeq_literals" (formula "40"))
                                          (rule "closeFalse" (formula "40"))
                                       )
                                       (branch "CUT: self.left = self FALSE"
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "notLeft" (formula "39"))
                                          (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "47"))
                                          (rule "close" (formula "43") (ifseqformula "23"))
                                       )
                                    )
                                    (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "44"))
                                       (rule "notRight" (formula "45"))
                                       (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1") (ifseqformula "24"))
                                       (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "48")))
                                       (rule "true_left" (formula "13"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "24"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                                       (rule "true_left" (formula "15"))
                                        (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "13") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "44") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "43")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "30")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "13")))
                                       (rule "true_left" (formula "44"))
                                        (builtin "Use Dependency Contract" (formula "11") (term "0") (ifInst ""  (formula "12") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "44") (term "0,1,0,0,0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "43")) (ifInst ""  (formula "1")) (ifInst ""  (formula "48")) (ifInst ""  (formula "30")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                       (rule "disjointDefinition" (formula "44") (term "0,0"))
                                       (rule "measuredByCheckEmpty" (formula "44") (term "1,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "disjointWithSingleton2" (formula "44") (term "0"))
                                       (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "11"))
                                       (rule "eqSymm" (formula "44") (term "1"))
                                       (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                        (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "43")) (ifInst ""  (formula "50")) (ifInst ""  (formula "2")) (ifInst ""  (formula "50")) (ifInst ""  (formula "33")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                       (rule "true_left" (formula "44"))
                                        (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "9") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "44") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "43")) (ifInst ""  (formula "2")) (ifInst ""  (formula "50")) (ifInst ""  (formula "33")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                       (rule "disjointDefinition" (formula "44") (term "0,0"))
                                       (rule "measuredByCheckEmpty" (formula "44") (term "1,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "disjointWithSingleton2" (formula "44") (term "0"))
                                       (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "8"))
                                       (rule "eqSymm" (formula "44") (term "1"))
                                       (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                        (builtin "Use Dependency Contract" (formula "50") (term "0") (ifInst ""  (formula "50") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                       (rule "wellFormedAnon" (formula "44") (term "1,1,0,0,0,0"))
                                       (rule "replace_known_left" (formula "44") (term "1,0,0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "50")) (ifInst ""  (formula "2")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "43")) (ifInst ""  (formula "51")))
                                       (rule "notLeft" (formula "44"))
                                       (rule "disjointDefinition" (formula "44") (term "0"))
                                       (rule "measuredByCheckEmpty" (formula "44") (term "1") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "disjointWithSingleton2" (formula "44"))
                                       (rule "notRight" (formula "44"))
                                       (rule "elementOfSetMinus" (formula "1"))
                                       (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "Usage"
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "replaceKnownSelect_taclet2_5" (formula "44") (term "0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "44") (term "0,0,0"))
                              (rule "replaceKnownSelect_taclet2_5" (formula "44") (term "1,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "44") (term "1,0,1,0"))
                              (rule "impRight" (formula "44"))
                              (rule "emptyStatement" (formula "45") (term "1"))
                              (rule "limit_Tree_blackBalanced" (formula "1") (term "1,1"))
                              (rule "limit_Tree_blackBalanced" (formula "2") (term "0,1"))
                               (builtin "JML assert" (formula "47"))
                              (branch "Validity"
                                 (rule "orRight" (formula "47"))
                                  (builtin "One Step Simplification" (formula "48"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "replaceKnownSelect_taclet2_3" (formula "47") (term "0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "47") (term "0"))
                                 (rule "replaceKnownSelect_taclet2_3" (formula "48") (term "1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "48") (term "1,0"))
                                 (rule "replace_known_right" (formula "40") (term "0,0,0,0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "notLeft" (formula "27"))
                                 (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "29"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_gtToGeq" (formula "42") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                 (rule "inEqSimp_gtToGeq" (formula "38"))
                                 (rule "mul_literals" (formula "38") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                 (rule "applyEq" (formula "16") (term "1") (ifseqformula "18"))
                                 (rule "applyEq" (formula "21") (term "1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "4") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                 (rule "mul_literals" (formula "38") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1"))
                                 (rule "mul_literals" (formula "40") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                 (rule "limit_Tree_noDoubleRed" (formula "48") (term "1"))
                                 (rule "limit_Tree_noDoubleRed" (formula "49") (term "0"))
                                 (rule "cut_direct" (formula "5") (term "0"))
                                 (branch "CUT: self.right = null TRUE"
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "replace_known_left" (formula "43") (term "0,0,0,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEq" (formula "38") (term "0,0,0,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "38") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "38") (term "0,0,0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "40"))
                                    (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "limit_Tree_blackHeight_static_Tree" (formula "9") (term "1"))
                                    (rule "limit_Tree_treeSet" (formula "16") (term "1"))
                                    (rule "limit_Tree_footprint" (formula "20") (term "1"))
                                    (rule "limit_Tree_blackBalanced" (formula "4") (term "1"))
                                    (rule "limit_java_lang_Object__inv_" (formula "30") (term "1"))
                                    (rule "limit_Tree_footprint" (formula "34") (term "1"))
                                    (rule "limit_Tree_blackHeight_static_Tree" (formula "11") (term "0"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "9"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "limit_Tree_treeSet" (formula "15") (term "1"))
                                    (rule "limit_Tree_blackBalanced" (formula "3") (term "1"))
                                    (rule "ifthenelse_split" (formula "36") (term "0"))
                                    (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "inEqSimp_homoInEq1" (formula "37"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                       (rule "mul_literals" (formula "37") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                       (rule "equiv_left" (formula "30"))
                                       (branch "Case 1"
                                          (rule "cut_direct" (formula "37") (term "0"))
                                          (branch "CUT: self.left = self TRUE"
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "37"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "37"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "42") (term "0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "29") (term "1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "37"))
                                             (rule "inEqSimp_homoInEq0" (formula "38"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0"))
                                             (rule "add_zero_right" (formula "38") (term "0"))
                                             (rule "qeq_literals" (formula "38"))
                                             (rule "closeFalse" (formula "38"))
                                          )
                                          (branch "CUT: self.left = self FALSE"
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "notLeft" (formula "37"))
                                             (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "43"))
                                             (rule "close" (formula "40") (ifseqformula "23"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "cut_direct" (formula "35") (term "0"))
                                          (branch "CUT: self.left = self TRUE"
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "applyEq" (formula "29") (term "1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "27") (term "1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "35"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "35"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq0" (formula "36"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0"))
                                             (rule "add_literals" (formula "36") (term "0"))
                                             (rule "qeq_literals" (formula "36"))
                                             (rule "closeFalse" (formula "36"))
                                          )
                                          (branch "CUT: self.left = self FALSE"
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "notLeft" (formula "35"))
                                             (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "43"))
                                             (rule "close" (formula "38") (ifseqformula "23"))
                                          )
                                       )
                                    )
                                    (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "40"))
                                       (rule "notRight" (formula "41"))
                                       (rule "applyEqReverse" (formula "38") (term "1,1") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "equiv_left" (formula "31"))
                                       (branch "Case 1"
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "24"))
                                          (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "20"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0") (ifseqformula "24"))
                                          (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                           (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "15") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "41") (term "0,1,0,0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "40")) (ifInst ""  (formula "1")) (ifInst ""  (formula "44")) (ifInst ""  (formula "30")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")) (ifInst ""  (formula "15")))
                                          (rule "true_left" (formula "41"))
                                           (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "14") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "41") (term "0,1,0,0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "40")) (ifInst ""  (formula "1")) (ifInst ""  (formula "44")) (ifInst ""  (formula "30")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                                          (rule "disjointDefinition" (formula "41") (term "0,0"))
                                          (rule "measuredByCheckEmpty" (formula "41") (term "1,0") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "disjointWithSingleton2" (formula "41") (term "0"))
                                          (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "13"))
                                          (rule "eqSymm" (formula "41") (term "1"))
                                          (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                           (builtin "Use Dependency Contract" (formula "44") (term "0") (ifInst ""  (formula "44") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "41") (term "1,1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "44")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "40")) (ifInst ""  (formula "30")) (ifInst ""  (formula "45")))
                                          (rule "notLeft" (formula "41"))
                                          (rule "disjointDefinition" (formula "41") (term "0"))
                                          (rule "measuredByCheckEmpty" (formula "41") (term "1") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "disjointWithSingleton2" (formula "41"))
                                          (rule "notRight" (formula "41"))
                                          (rule "elementOfSetMinus" (formula "1"))
                                          (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "24"))
                                          (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "20"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0") (ifseqformula "24"))
                                          (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                           (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "15") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "39") (term "0,1,1,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "38")) (ifInst ""  (formula "44")) (ifInst ""  (formula "1")) (ifInst ""  (formula "44")) (ifInst ""  (formula "30")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")) (ifInst ""  (formula "15")))
                                          (rule "true_left" (formula "39"))
                                           (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "14") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "39") (term "0,1,0,0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "38")) (ifInst ""  (formula "1")) (ifInst ""  (formula "44")) (ifInst ""  (formula "30")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                                          (rule "disjointDefinition" (formula "39") (term "0,0"))
                                          (rule "measuredByCheckEmpty" (formula "39") (term "1,0") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "disjointWithSingleton2" (formula "39") (term "0"))
                                          (rule "applyEq" (formula "39") (term "0,1") (ifseqformula "13"))
                                          (rule "eqSymm" (formula "39") (term "1"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                           (builtin "Use Dependency Contract" (formula "44") (term "0") (ifInst ""  (formula "44") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "39") (term "1,1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "39") (term "1,0,0,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "44")) (ifInst ""  (formula "1")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "38")) (ifInst ""  (formula "45")))
                                          (rule "notLeft" (formula "39"))
                                          (rule "disjointDefinition" (formula "39") (term "0"))
                                          (rule "measuredByCheckEmpty" (formula "39") (term "1") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "disjointWithSingleton2" (formula "39"))
                                          (rule "notRight" (formula "39"))
                                          (rule "elementOfSetMinus" (formula "1"))
                                          (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "CUT: self.right = null FALSE"
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_right" (formula "43") (term "0,0,0,0,0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "34"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEq" (formula "15") (term "1") (ifseqformula "17"))
                                    (rule "applyEq" (formula "21") (term "1") (ifseqformula "22"))
                                    (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                    (rule "ifthenelse_split" (formula "41") (term "0"))
                                    (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "inEqSimp_homoInEq1" (formula "42"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                       (rule "mul_literals" (formula "42") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                       (rule "ifthenelse_split" (formula "43") (term "0"))
                                       (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "inEqSimp_homoInEq1" (formula "44"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1"))
                                          (rule "mul_literals" (formula "44") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                          (rule "cut_direct" (formula "41") (term "0"))
                                          (branch "CUT: self.left = self TRUE"
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "true_left" (formula "42"))
                                             (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "29") (term "1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "41"))
                                             (rule "applyEq" (formula "31") (term "1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "41"))
                                             (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq0" (formula "42"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0"))
                                             (rule "add_literals" (formula "42") (term "0"))
                                             (rule "qeq_literals" (formula "42"))
                                             (rule "closeFalse" (formula "42"))
                                          )
                                          (branch "CUT: self.left = self FALSE"
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "notLeft" (formula "41"))
                                             (rule "referencedObjectIsCreatedRight" (formula "46") (ifseqformula "51"))
                                             (rule "close" (formula "46") (ifseqformula "25"))
                                          )
                                       )
                                       (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                          (rule "orRight" (formula "47"))
                                          (rule "notRight" (formula "48"))
                                          (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "cut_direct" (formula "42") (term "0"))
                                          (branch "CUT: self.left = self TRUE"
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "applyEq" (formula "49") (term "1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "42"))
                                             (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "42"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "applyEq" (formula "50") (term "0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "42"))
                                             (rule "inEqSimp_homoInEq0" (formula "43"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0"))
                                             (rule "add_zero_right" (formula "43") (term "0"))
                                             (rule "qeq_literals" (formula "43"))
                                             (rule "closeFalse" (formula "43"))
                                          )
                                          (branch "CUT: self.left = self FALSE"
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "notLeft" (formula "42"))
                                             (rule "referencedObjectIsCreatedRight" (formula "46") (ifseqformula "52"))
                                             (rule "close" (formula "46") (ifseqformula "26"))
                                          )
                                       )
                                    )
                                    (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                       (rule "orRight" (formula "47"))
                                       (rule "notRight" (formula "48"))
                                       (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "ifthenelse_split" (formula "43") (term "0"))
                                       (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "inEqSimp_homoInEq1" (formula "44"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1"))
                                          (rule "mul_literals" (formula "44") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                          (rule "cut_direct" (formula "43") (term "0"))
                                          (branch "CUT: self.right = self TRUE"
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "43"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "33") (term "1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "35") (term "1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "43"))
                                             (rule "eqSymm" (formula "49"))
                                             (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "43"))
                                             (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "43"))
                                             (rule "inEqSimp_homoInEq0" (formula "44"))
                                             (rule "polySimp_pullOutFactor1b" (formula "44") (term "0"))
                                             (rule "add_literals" (formula "44") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0"))
                                             (rule "add_zero_right" (formula "44") (term "0"))
                                             (rule "qeq_literals" (formula "44"))
                                             (rule "closeFalse" (formula "44"))
                                          )
                                          (branch "CUT: self.right = self FALSE"
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "notLeft" (formula "43"))
                                             (rule "referencedObjectIsCreatedRight" (formula "46") (ifseqformula "49"))
                                             (rule "close" (formula "46") (ifseqformula "26"))
                                          )
                                       )
                                       (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                          (rule "orRight" (formula "47"))
                                          (rule "notRight" (formula "48"))
                                          (rule "applyEqReverse" (formula "45") (term "1,1") (ifseqformula "44"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0") (ifseqformula "27"))
                                          (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "13"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,0") (ifseqformula "27"))
                                          (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")))
                                          (rule "true_left" (formula "8"))
                                           (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "46")) (ifInst ""  (formula "53")) (ifInst ""  (formula "2")) (ifInst ""  (formula "53")) (ifInst ""  (formula "33")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")))
                                          (rule "true_left" (formula "47"))
                                           (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "15") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "47") (term "0,0,1,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "46")) (ifInst ""  (formula "53")) (ifInst ""  (formula "2")) (ifInst ""  (formula "53")) (ifInst ""  (formula "33")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")))
                                          (rule "disjointDefinition" (formula "47") (term "0,0"))
                                          (rule "measuredByCheckEmpty" (formula "47") (term "1,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "disjointWithSingleton2" (formula "47") (term "0"))
                                          (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "14"))
                                          (rule "eqSymm" (formula "47") (term "1"))
                                          (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                           (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "13") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "47") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "27")) (ifInst ""  (formula "46")) (ifInst ""  (formula "50")) (ifInst ""  (formula "1")) (ifInst ""  (formula "50")) (ifInst ""  (formula "36")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "13")))
                                          (rule "true_left" (formula "47"))
                                           (builtin "Use Dependency Contract" (formula "11") (term "0") (ifInst ""  (formula "12") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "47") (term "1,0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "47") (term "0,0,1,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "46")) (ifInst ""  (formula "50")) (ifInst ""  (formula "1")) (ifInst ""  (formula "50")) (ifInst ""  (formula "36")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                          (rule "disjointDefinition" (formula "47") (term "0,0"))
                                          (rule "measuredByCheckEmpty" (formula "47") (term "1,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "disjointWithSingleton2" (formula "47") (term "0"))
                                          (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "11"))
                                          (rule "eqSymm" (formula "47") (term "1"))
                                          (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                           (builtin "Use Dependency Contract" (formula "53") (term "0") (ifInst ""  (formula "53") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "47") (term "1,1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "47") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "53")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "46")) (ifInst ""  (formula "33")) (ifInst ""  (formula "54")))
                                          (rule "notLeft" (formula "47"))
                                          (rule "disjointDefinition" (formula "47") (term "0"))
                                          (rule "measuredByCheckEmpty" (formula "47") (term "1") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "disjointWithSingleton2" (formula "47"))
                                          (rule "notRight" (formula "47"))
                                          (rule "elementOfSetMinus" (formula "1"))
                                          (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch "Usage"
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "replaceKnownSelect_taclet2_3" (formula "47") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "47") (term "0,0,0"))
                                 (rule "replaceKnownSelect_taclet2_3" (formula "47") (term "1,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "47") (term "1,0,1,0"))
                                 (rule "impRight" (formula "47"))
                                 (rule "emptyStatement" (formula "48") (term "1"))
                                 (rule "limit_Tree_noDoubleRed" (formula "1") (term "0,1"))
                                 (rule "limit_Tree_noDoubleRed" (formula "2") (term "1,1"))
                                  (builtin "JML assert" (formula "50"))
                                 (branch "Validity"
                                    (rule "orRight" (formula "50"))
                                     (builtin "One Step Simplification" (formula "51"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "replaceKnownSelect_taclet2_5" (formula "50") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "50") (term "0"))
                                    (rule "replaceKnownSelect_taclet2_5" (formula "51") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "51") (term "1,0"))
                                    (rule "replace_known_right" (formula "45") (term "0,0,0,0,0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "replace_known_right" (formula "41") (term "1,0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_gtToGeq" (formula "44") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                    (rule "inEqSimp_gtToGeq" (formula "42"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                    (rule "applyEq" (formula "22") (term "1") (ifseqformula "23"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "16") (term "1") (ifseqformula "18"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                    (rule "mul_literals" (formula "44") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                    (rule "mul_literals" (formula "42") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1"))
                                    (rule "mul_literals" (formula "46") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                    (rule "limit_Tree_noDoubleRed" (formula "51") (term "1"))
                                    (rule "limit_Tree_noDoubleRed" (formula "52") (term "0"))
                                    (rule "cut_direct" (formula "27") (term "0"))
                                    (branch "CUT: self.left = null TRUE"
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "replace_known_left" (formula "45") (term "0,0,0,0,0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "true_left" (formula "46"))
                                       (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "26"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "applyEq" (formula "38") (term "1,0,0,1,1,0,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "38") (term "0,0,0,0") (ifseqformula "24"))
                                       (rule "eqSymm" (formula "38") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "38") (term "0,0,0") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "24"))
                                       (rule "eqSymm" (formula "9"))
                                       (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "24"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "24"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "24"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "24"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "24"))
                                       (rule "eqSymm" (formula "9"))
                                       (rule "limit_Tree_blackHeight_static_Tree" (formula "15") (term "0"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                                       (rule "eqSymm" (formula "15"))
                                       (rule "limit_Tree_noDoubleRed" (formula "3") (term "1"))
                                       (rule "limit_java_lang_Object__inv_" (formula "29") (term "1"))
                                       (rule "limit_Tree_footprint" (formula "35") (term "1"))
                                       (rule "limit_Tree_blackHeight_static_Tree" (formula "15") (term "1"))
                                       (rule "limit_Tree_treeSet" (formula "20") (term "1"))
                                       (rule "limit_Tree_treeSet" (formula "19") (term "1"))
                                       (rule "limit_Tree_footprint" (formula "23") (term "1"))
                                       (rule "limit_Tree_blackBalanced" (formula "8") (term "1"))
                                       (rule "limit_Tree_noDoubleRed" (formula "4") (term "1"))
                                       (rule "limit_Tree_blackBalanced" (formula "9") (term "1"))
                                       (rule "ifthenelse_split" (formula "38") (term "0"))
                                       (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "39"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                          (rule "equiv_left" (formula "29"))
                                          (branch "Case 1"
                                             (rule "cut_direct" (formula "39") (term "0"))
                                             (branch "CUT: self.right = self TRUE"
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "39"))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "33") (term "1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "39"))
                                                (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "39"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "39"))
                                                (rule "inEqSimp_homoInEq0" (formula "40"))
                                                (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0"))
                                                (rule "add_zero_right" (formula "40") (term "0"))
                                                (rule "qeq_literals" (formula "40"))
                                                (rule "closeFalse" (formula "40"))
                                             )
                                             (branch "CUT: self.right = self FALSE"
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "notLeft" (formula "39"))
                                                (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "45"))
                                                (rule "close" (formula "42") (ifseqformula "25"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "cut_direct" (formula "37") (term "0"))
                                             (branch "CUT: self.right = self TRUE"
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "31") (term "1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "37"))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "29") (term "1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "37"))
                                                (rule "eqSymm" (formula "11"))
                                                (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "37"))
                                                (rule "inEqSimp_homoInEq0" (formula "38"))
                                                (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                                (rule "add_literals" (formula "38") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0"))
                                                (rule "add_zero_right" (formula "38") (term "0"))
                                                (rule "qeq_literals" (formula "38"))
                                                (rule "closeFalse" (formula "38"))
                                             )
                                             (branch "CUT: self.right = self FALSE"
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "notLeft" (formula "37"))
                                                (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "45"))
                                                (rule "close" (formula "40") (ifseqformula "25"))
                                             )
                                          )
                                       )
                                       (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                          (rule "orRight" (formula "42"))
                                          (rule "notRight" (formula "43"))
                                          (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "equiv_left" (formula "30"))
                                          (branch "Case 1"
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "1,1") (ifseqformula "26"))
                                             (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "1")))
                                             (rule "true_left" (formula "38"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "26"))
                                             (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                              (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "13") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "26")) (ifInst ""  (formula "42")) (ifInst ""  (formula "46")) (ifInst ""  (formula "1")) (ifInst ""  (formula "46")) (ifInst ""  (formula "34")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "13")))
                                             (rule "true_left" (formula "43"))
                                              (builtin "Use Dependency Contract" (formula "11") (term "0") (ifInst ""  (formula "12") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "26")) (ifInst ""  (formula "42")) (ifInst ""  (formula "46")) (ifInst ""  (formula "1")) (ifInst ""  (formula "46")) (ifInst ""  (formula "34")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                             (rule "disjointDefinition" (formula "43") (term "0,0"))
                                             (rule "measuredByCheckEmpty" (formula "43") (term "1,0") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "disjointWithSingleton2" (formula "43") (term "0"))
                                             (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "11"))
                                             (rule "eqSymm" (formula "43") (term "1"))
                                             (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                              (builtin "Use Dependency Contract" (formula "46") (term "0") (ifInst ""  (formula "46") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "replace_known_left" (formula "43") (term "0,1,0,0,0,0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "46")) (ifInst ""  (formula "1")) (ifInst ""  (formula "26")) (ifInst ""  (formula "42")) (ifInst ""  (formula "34")) (ifInst ""  (formula "47")))
                                             (rule "notLeft" (formula "43"))
                                             (rule "disjointDefinition" (formula "43") (term "0"))
                                             (rule "measuredByCheckEmpty" (formula "43") (term "1") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "disjointWithSingleton2" (formula "43"))
                                             (rule "notRight" (formula "43"))
                                             (rule "elementOfSetMinus" (formula "1"))
                                             (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "34"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "1,1") (ifseqformula "26"))
                                             (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")))
                                             (rule "true_left" (formula "36"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "26"))
                                             (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                              (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "13") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_right" (formula "41") (term "0,1,1,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "40")) (ifInst ""  (formula "46")) (ifInst ""  (formula "1")) (ifInst ""  (formula "46")) (ifInst ""  (formula "32")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "13")))
                                             (rule "true_left" (formula "41"))
                                              (builtin "Use Dependency Contract" (formula "11") (term "0") (ifInst ""  (formula "12") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "41") (term "1,0,1,0,0,0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "40")) (ifInst ""  (formula "46")) (ifInst ""  (formula "1")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                             (rule "disjointDefinition" (formula "41") (term "0,0"))
                                             (rule "measuredByCheckEmpty" (formula "41") (term "1,0") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "disjointWithSingleton2" (formula "41") (term "0"))
                                             (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "11"))
                                             (rule "eqSymm" (formula "41") (term "1"))
                                             (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                              (builtin "Use Dependency Contract" (formula "46") (term "0") (ifInst ""  (formula "46") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "41") (term "1,1,0,0,0,0"))
                                             (rule "replace_known_right" (formula "41") (term "0,0,0,0,0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "1")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "40")) (ifInst ""  (formula "32")) (ifInst ""  (formula "47")))
                                             (rule "notLeft" (formula "41"))
                                             (rule "disjointDefinition" (formula "41") (term "0"))
                                             (rule "measuredByCheckEmpty" (formula "41") (term "1") (ifseqformula "29"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "disjointWithSingleton2" (formula "41"))
                                             (rule "notRight" (formula "41"))
                                             (rule "elementOfSetMinus" (formula "1"))
                                             (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "32"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch "CUT: self.left = null FALSE"
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "replace_known_right" (formula "45") (term "0,0,0,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "notLeft" (formula "32"))
                                       (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "applyEq" (formula "26") (term "1") (ifseqformula "27"))
                                       (rule "applyEq" (formula "9") (term "1") (ifseqformula "11"))
                                       (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                       (rule "applyEq" (formula "3") (term "1") (ifseqformula "5"))
                                       (rule "ifthenelse_split" (formula "46") (term "0"))
                                       (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "inEqSimp_homoInEq1" (formula "47"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                          (rule "mul_literals" (formula "47") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                          (rule "ifthenelse_split" (formula "44") (term "0"))
                                          (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "45"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "inEqSimp_homoInEq1" (formula "45"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                                             (rule "cut_direct" (formula "46") (term "0"))
                                             (branch "CUT: self.right = self TRUE"
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "36") (term "1,1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "46"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "46"))
                                                (rule "inEqSimp_homoInEq0" (formula "47"))
                                                (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                (rule "add_literals" (formula "47") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0"))
                                                (rule "add_literals" (formula "47") (term "0"))
                                                (rule "qeq_literals" (formula "47"))
                                                (rule "closeFalse" (formula "47"))
                                             )
                                             (branch "CUT: self.right = self FALSE"
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "notLeft" (formula "46"))
                                                (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "54"))
                                                (rule "close" (formula "49") (ifseqformula "28"))
                                             )
                                          )
                                          (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                             (rule "orRight" (formula "50"))
                                             (rule "notRight" (formula "51"))
                                             (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "45"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "cut_direct" (formula "46") (term "0"))
                                             (branch "CUT: self.right = self TRUE"
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "55") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "46"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "applyEq" (formula "36") (term "1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "46"))
                                                (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "46"))
                                                (rule "inEqSimp_homoInEq0" (formula "47"))
                                                (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                (rule "add_literals" (formula "47") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0"))
                                                (rule "add_zero_right" (formula "47") (term "0"))
                                                (rule "qeq_literals" (formula "47"))
                                                (rule "closeFalse" (formula "47"))
                                             )
                                             (branch "CUT: self.right = self FALSE"
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "notLeft" (formula "46"))
                                                (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "55"))
                                                (rule "close" (formula "49") (ifseqformula "29"))
                                             )
                                          )
                                       )
                                       (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                          (rule "orRight" (formula "50"))
                                          (rule "notRight" (formula "51"))
                                          (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "ifthenelse_split" (formula "45") (term "0"))
                                          (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                             (rule "hideAuxiliaryEq" (formula "46"))
                                             (rule "inEqSimp_homoInEq1" (formula "46"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1"))
                                             (rule "mul_literals" (formula "46") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                             (rule "cut_direct" (formula "45") (term "0"))
                                             (branch "CUT: self.left = self TRUE"
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "45"))
                                                (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "45"))
                                                (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "45"))
                                                (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "45"))
                                                (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "45"))
                                                (rule "inEqSimp_homoInEq0" (formula "46"))
                                                (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0"))
                                                (rule "add_zero_right" (formula "46") (term "0"))
                                                (rule "qeq_literals" (formula "46"))
                                                (rule "closeFalse" (formula "46"))
                                             )
                                             (branch "CUT: self.left = self FALSE"
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "53"))
                                                (rule "close" (formula "49") (ifseqformula "29"))
                                             )
                                          )
                                          (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                             (rule "orRight" (formula "50"))
                                             (rule "notRight" (formula "51"))
                                             (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                             (rule "hideAuxiliaryEq" (formula "46"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0") (ifseqformula "30"))
                                             (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "54")))
                                             (rule "true_left" (formula "28"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "1,0") (ifseqformula "30"))
                                             (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "2")))
                                             (rule "true_left" (formula "43"))
                                              (builtin "Use Dependency Contract" (formula "19") (term "0") (ifInst ""  (formula "19") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "50") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "49")) (ifInst ""  (formula "54")) (ifInst ""  (formula "1")) (ifInst ""  (formula "54")) (ifInst ""  (formula "36")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "true_left" (formula "50"))
                                              (builtin "Use Dependency Contract" (formula "17") (term "0") (ifInst ""  (formula "18") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "50") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_right" (formula "50") (term "0,1,1,0,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "49")) (ifInst ""  (formula "54")) (ifInst ""  (formula "1")) (ifInst ""  (formula "54")) (ifInst ""  (formula "36")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                             (rule "disjointDefinition" (formula "50") (term "0,0"))
                                             (rule "measuredByCheckEmpty" (formula "50") (term "1,0") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "disjointWithSingleton2" (formula "50") (term "0"))
                                             (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "17"))
                                             (rule "eqSymm" (formula "50") (term "1"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "18"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                              (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "50") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "50") (term "0,0,0,0,0,0") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "30")) (ifInst ""  (formula "49")) (ifInst ""  (formula "56")) (ifInst ""  (formula "2")) (ifInst ""  (formula "56")) (ifInst ""  (formula "39")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")) (ifInst ""  (formula "16")))
                                             (rule "true_left" (formula "50"))
                                              (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "15") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "50") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_right" (formula "50") (term "0,1,1,0,0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "49")) (ifInst ""  (formula "56")) (ifInst ""  (formula "2")) (ifInst ""  (formula "56")) (ifInst ""  (formula "39")) (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                             (rule "disjointDefinition" (formula "50") (term "0,0"))
                                             (rule "measuredByCheckEmpty" (formula "50") (term "1,0") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "disjointWithSingleton2" (formula "50") (term "0"))
                                             (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "14"))
                                             (rule "eqSymm" (formula "50") (term "1"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                              (builtin "Use Dependency Contract" (formula "56") (term "0") (ifInst ""  (formula "56") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                             (rule "wellFormedAnon" (formula "50") (term "1,1,0,0,0,0"))
                                             (rule "replace_known_left" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "56")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "49")) (ifInst ""  (formula "39")) (ifInst ""  (formula "57")))
                                             (rule "notLeft" (formula "50"))
                                             (rule "disjointDefinition" (formula "50") (term "0"))
                                             (rule "measuredByCheckEmpty" (formula "50") (term "1") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "disjointWithSingleton2" (formula "50"))
                                             (rule "notRight" (formula "50"))
                                             (rule "elementOfSetMinus" (formula "1"))
                                             (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "39"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Usage"
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "replaceKnownSelect_taclet2_5" (formula "50") (term "0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "50") (term "0,0,0"))
                                    (rule "replaceKnownSelect_taclet2_5" (formula "50") (term "1,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "50") (term "1,0,1,0"))
                                    (rule "impRight" (formula "50"))
                                    (rule "emptyStatement" (formula "51") (term "1"))
                                    (rule "limit_Tree_noDoubleRed" (formula "1") (term "0,1"))
                                    (rule "limit_Tree_noDoubleRed" (formula "2") (term "1,1"))
                                     (builtin "JML assert" (formula "53"))
                                    (branch "Validity"
                                       (rule "andRight" (formula "53"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "53"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "53"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "53"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "53"))
                                                   (branch "Case 1"
                                                      (rule "orRight" (formula "53"))
                                                      (rule "orRight" (formula "53"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replaceKnownSelect_taclet2_5" (formula "55") (term "0"))
                                                      (rule "replaceKnownSelect_taclet2_3" (formula "54") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "55") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "54") (term "0"))
                                                      (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "0,0"))
                                                      (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "1,0"))
                                                      (rule "notRight" (formula "53"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "replace_known_right" (formula "47") (term "0,0,0,0,0") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_right" (formula "49") (term "0,0,0,0,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "54")))
                                                      (rule "closeFalse" (formula "34"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "orRight" (formula "53"))
                                                      (rule "andRight" (formula "54"))
                                                      (branch "Case 1"
                                                          (builtin "One Step Simplification" (formula "54"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "0"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "54") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "54") (term "1,1"))
                                                         (rule "replace_known_right" (formula "46") (term "0,0,0,0,0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "replace_known_right" (formula "43") (term "0,0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "disjointDefinition" (formula "54"))
                                                         (rule "inEqSimp_gtToGeq" (formula "48") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1"))
                                                         (rule "inEqSimp_gtToGeq" (formula "44"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "46"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                         (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "28"))
                                                         (rule "close" (formula "54") (ifseqformula "34"))
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "One Step Simplification" (formula "54"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "54") (term "1"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "54") (term "1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "0"))
                                                         (rule "replace_known_right" (formula "46") (term "0,0,0,0,0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "replace_known_right" (formula "43") (term "0,0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "inEqSimp_gtToGeq" (formula "48") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1"))
                                                         (rule "inEqSimp_gtToGeq" (formula "44"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "46"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                         (rule "applyEq" (formula "10") (term "1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                         (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                         (rule "mul_literals" (formula "44") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                         (rule "limit_java_lang_Object__inv_" (formula "54"))
                                                         (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "cut_direct" (formula "38") (term "0"))
                                                         (branch "CUT: self.right = null TRUE"
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "true_left" (formula "39"))
                                                            (rule "replace_known_left" (formula "47") (term "0,0,0,0,0") (ifseqformula "38"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "38"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "37"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "36"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "35"))
                                                             (builtin "One Step Simplification" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "35"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "35"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "42") (term "1,2,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "42") (term "0,0,1,0,0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "42") (term "0,1,0,0"))
                                                            (rule "replace_known_right" (formula "42") (term "0,1,0,0") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "7"))
                                                            (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "46") (term "0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "46"))
                                                            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "7"))
                                                            (rule "applyEq" (formula "42") (term "1,0,0,1,0,0") (ifseqformula "34"))
                                                            (rule "applyEq" (formula "42") (term "0,0,0,0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "42") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "hideAuxiliaryEq" (formula "42"))
                                                            (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "34"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "limit_Tree_footprint" (formula "23") (term "1"))
                                                            (rule "limit_Tree_treeSet" (formula "18") (term "1"))
                                                            (rule "limit_Tree_blackHeight_static_Tree" (formula "14") (term "0"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "12"))
                                                            (rule "eqSymm" (formula "14"))
                                                            (rule "limit_Tree_blackBalanced" (formula "8") (term "1"))
                                                            (rule "limit_Tree_blackHeight_static_Tree" (formula "12") (term "1"))
                                                            (rule "limit_Tree_footprint" (formula "38") (term "1"))
                                                            (rule "limit_Tree_treeSet" (formula "19") (term "1"))
                                                            (rule "limit_java_lang_Object__inv_" (formula "33") (term "1"))
                                                            (rule "limit_Tree_blackBalanced" (formula "7") (term "1"))
                                                            (rule "ifthenelse_split" (formula "40") (term "0"))
                                                            (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                                               (rule "hideAuxiliaryEq" (formula "41"))
                                                               (rule "inEqSimp_homoInEq1" (formula "41"))
                                                               (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                               (rule "mul_literals" (formula "41") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                               (rule "equiv_left" (formula "33"))
                                                               (branch "Case 1"
                                                                  (rule "cut_direct" (formula "41") (term "0"))
                                                                  (branch "CUT: self.left = self TRUE"
                                                                      (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "true_left" (formula "42"))
                                                                     (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "41"))
                                                                     (rule "eqSymm" (formula "10"))
                                                                     (rule "applyEq" (formula "30") (term "1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "47") (term "0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "41"))
                                                                     (rule "eqSymm" (formula "16"))
                                                                     (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "45") (term "1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "47") (term "1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "32") (term "1") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "41"))
                                                                     (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "41"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "42"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "42") (term "0"))
                                                                     (rule "qeq_literals" (formula "42"))
                                                                     (rule "closeFalse" (formula "42"))
                                                                  )
                                                                  (branch "CUT: self.left = self FALSE"
                                                                      (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "notLeft" (formula "41"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "48"))
                                                                     (rule "close" (formula "44") (ifseqformula "26"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "cut_direct" (formula "39") (term "0"))
                                                                  (branch "CUT: self.left = self TRUE"
                                                                      (builtin "One Step Simplification" (formula "40"))
                                                                     (rule "true_left" (formula "40"))
                                                                     (rule "applyEq" (formula "48") (term "1") (ifseqformula "39"))
                                                                     (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "39"))
                                                                     (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "39"))
                                                                     (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "39"))
                                                                     (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "39"))
                                                                     (rule "eqSymm" (formula "16"))
                                                                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "39"))
                                                                     (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "39"))
                                                                     (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "39"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "40"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                                     (rule "add_literals" (formula "40") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "40") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "40") (term "0"))
                                                                     (rule "qeq_literals" (formula "40"))
                                                                     (rule "closeFalse" (formula "40"))
                                                                  )
                                                                  (branch "CUT: self.left = self FALSE"
                                                                      (builtin "One Step Simplification" (formula "39"))
                                                                     (rule "notLeft" (formula "39"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "48"))
                                                                     (rule "close" (formula "42") (ifseqformula "26"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                                               (rule "orRight" (formula "44"))
                                                               (rule "notRight" (formula "45"))
                                                               (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                                               (rule "hideAuxiliaryEq" (formula "41"))
                                                               (rule "equiv_left" (formula "34"))
                                                               (branch "Case 1"
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,1") (ifseqformula "27"))
                                                                  (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "49"))
                                                                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "27"))
                                                                  (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "37"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "true_left" (formula "36"))
                                                                   (builtin "Use Dependency Contract" (formula "18") (term "0") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "45") (term "1,0,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "45") (term "1,0,1,0,0,0") (ifseqformula "33"))
                                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "44")) (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "18")))
                                                                  (rule "true_left" (formula "45"))
                                                                   (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "17") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "45") (term "1,0,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "45") (term "1,0,1,0,0,0") (ifseqformula "33"))
                                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "44")) (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                                                  (rule "disjointDefinition" (formula "45") (term "0,0"))
                                                                  (rule "measuredByCheckEmpty" (formula "45") (term "1,0") (ifseqformula "30"))
                                                                   (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "disjointWithSingleton2" (formula "45") (term "0"))
                                                                  (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "16"))
                                                                  (rule "eqSymm" (formula "45") (term "1"))
                                                                  (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "17"))
                                                                   (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "true_left" (formula "45"))
                                                                   (builtin "Use Dependency Contract" (formula "49") (ifInst ""  (formula "33")) (contract "Tree[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "45") (term "1,1,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "45") (term "0,0,0,0,0,0,0") (ifseqformula "49"))
                                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "1")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "44")) (ifInst ""  (formula "33")) (ifInst ""  (formula "50")) (ifInst ""  (formula "33")))
                                                                  (rule "notLeft" (formula "45"))
                                                                  (rule "disjointDefinition" (formula "45") (term "0"))
                                                                  (rule "measuredByCheckEmpty" (formula "45") (term "1") (ifseqformula "30"))
                                                                   (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "disjointWithSingleton2" (formula "45"))
                                                                  (rule "notRight" (formula "45"))
                                                                  (rule "elementOfSetMinus" (formula "1"))
                                                                  (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "33"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,1") (ifseqformula "27"))
                                                                  (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "49")))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "27"))
                                                                  (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "35"))
                                                                   (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "true_left" (formula "34"))
                                                                   (builtin "Use Dependency Contract" (formula "18") (term "0") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "43") (term "1,0,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "43") (term "0,0,1,0") (ifseqformula "49"))
                                                                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "42")) (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "49")) (ifInst ""  (formula "33")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "18")))
                                                                  (rule "true_left" (formula "43"))
                                                                   (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "17") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "43") (term "1,0,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                                                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "27")) (ifInst ""  (formula "42")) (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "49")) (ifInst ""  (formula "33")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                                                  (rule "disjointDefinition" (formula "43") (term "0,0"))
                                                                  (rule "measuredByCheckEmpty" (formula "43") (term "1,0") (ifseqformula "30"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "disjointWithSingleton2" (formula "43") (term "0"))
                                                                  (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "16"))
                                                                  (rule "eqSymm" (formula "43") (term "1"))
                                                                  (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "17"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "true_left" (formula "43"))
                                                                   (builtin "Use Dependency Contract" (formula "49") (ifInst ""  (formula "33")) (contract "Tree[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "43") (term "1,1,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "49")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "42")) (ifInst ""  (formula "33")) (ifInst ""  (formula "50")) (ifInst ""  (formula "33")))
                                                                  (rule "notLeft" (formula "43"))
                                                                  (rule "disjointDefinition" (formula "43") (term "0"))
                                                                  (rule "measuredByCheckEmpty" (formula "43") (term "1") (ifseqformula "30"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "disjointWithSingleton2" (formula "43"))
                                                                  (rule "notRight" (formula "43"))
                                                                  (rule "elementOfSetMinus" (formula "1"))
                                                                  (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "33"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: self.right = null FALSE"
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "replace_known_right" (formula "47") (term "0,0,0,0,0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "38"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "applyEq" (formula "19") (term "1") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                                                            (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
                                                            (rule "ifthenelse_split" (formula "45") (term "0"))
                                                            (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                                               (rule "hideAuxiliaryEq" (formula "46"))
                                                               (rule "inEqSimp_homoInEq1" (formula "46"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                               (rule "mul_literals" (formula "46") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                               (rule "ifthenelse_split" (formula "47") (term "0"))
                                                               (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                                                  (rule "hideAuxiliaryEq" (formula "48"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "48"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                                  (rule "cut_direct" (formula "45") (term "0"))
                                                                  (branch "CUT: self.left = self TRUE"
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "true_left" (formula "46"))
                                                                     (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "52") (term "1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "56") (term "1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "33") (term "1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "45"))
                                                                     (rule "eqSymm" (formula "11"))
                                                                     (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "35") (term "1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "45"))
                                                                     (rule "applyEq" (formula "53") (term "1") (ifseqformula "45"))
                                                                     (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "53"))
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "notLeft" (formula "47"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "50") (ifseqformula "51"))
                                                                     (rule "close" (formula "50") (ifseqformula "29"))
                                                                  )
                                                                  (branch "CUT: self.left = self FALSE"
                                                                      (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "notLeft" (formula "45"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "50") (ifseqformula "56"))
                                                                     (rule "close" (formula "50") (ifseqformula "29"))
                                                                  )
                                                               )
                                                               (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                                                  (rule "orRight" (formula "51"))
                                                                  (rule "notRight" (formula "52"))
                                                                  (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                                                  (rule "hideAuxiliaryEq" (formula "48"))
                                                                  (rule "cut_direct" (formula "46") (term "0"))
                                                                  (branch "CUT: self.left = self TRUE"
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "true_left" (formula "47"))
                                                                     (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "12"))
                                                                     (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "34") (term "1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "54") (term "1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "56") (term "1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "36") (term "1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "53") (term "1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "46"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "47"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "47") (term "0"))
                                                                     (rule "qeq_literals" (formula "47"))
                                                                     (rule "closeFalse" (formula "47"))
                                                                  )
                                                                  (branch "CUT: self.left = self FALSE"
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "notLeft" (formula "46"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "50") (ifseqformula "57"))
                                                                     (rule "close" (formula "50") (ifseqformula "30"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                                               (rule "orRight" (formula "51"))
                                                               (rule "notRight" (formula "52"))
                                                               (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                                               (rule "hideAuxiliaryEq" (formula "46"))
                                                               (rule "ifthenelse_split" (formula "47") (term "0"))
                                                               (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                                                  (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                                                  (rule "hideAuxiliaryEq" (formula "48"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "48"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                                  (rule "cut_direct" (formula "47") (term "0"))
                                                                  (branch "CUT: self.right = self TRUE"
                                                                      (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "true_left" (formula "48"))
                                                                     (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "39") (term "1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "52") (term "0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "37") (term "1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "47"))
                                                                     (rule "eqSymm" (formula "8"))
                                                                     (rule "applyEq" (formula "53") (term "0") (ifseqformula "47"))
                                                                     (rule "eqSymm" (formula "53"))
                                                                     (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "47"))
                                                                     (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "47"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "48"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                                     (rule "add_literals" (formula "48") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "48") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "48") (term "0"))
                                                                     (rule "qeq_literals" (formula "48"))
                                                                     (rule "closeFalse" (formula "48"))
                                                                  )
                                                                  (branch "CUT: self.right = self FALSE"
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "notLeft" (formula "47"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "50") (ifseqformula "53"))
                                                                     (rule "close" (formula "50") (ifseqformula "30"))
                                                                  )
                                                               )
                                                               (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                                                  (rule "orRight" (formula "51"))
                                                                  (rule "notRight" (formula "52"))
                                                                  (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                                                  (rule "hideAuxiliaryEq" (formula "48"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "31"))
                                                                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "54"))
                                                                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
                                                                  (rule "true_left" (formula "10"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "1,1") (ifseqformula "31"))
                                                                  (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "58"))
                                                                   (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "2")))
                                                                  (rule "true_left" (formula "43"))
                                                                   (builtin "Use Dependency Contract" (formula "20") (term "0") (ifInst ""  (formula "20") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "51") (term "1,0,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "51") (term "0,1,1,0,0,0") (ifseqformula "58"))
                                                                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "58")) (ifInst ""  (formula "2")) (ifInst ""  (formula "58")) (ifInst ""  (formula "37")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "20")))
                                                                  (rule "true_left" (formula "51"))
                                                                   (builtin "Use Dependency Contract" (formula "18") (term "0") (ifInst ""  (formula "19") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "51") (term "1,0,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "51") (term "0,1,0,0,0,0") (ifseqformula "58"))
                                                                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "2")) (ifInst ""  (formula "58")) (ifInst ""  (formula "37")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                                                  (rule "disjointDefinition" (formula "51") (term "0,0"))
                                                                  (rule "measuredByCheckEmpty" (formula "51") (term "1,0") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "disjointWithSingleton2" (formula "51") (term "0"))
                                                                  (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "18"))
                                                                  (rule "eqSymm" (formula "51") (term "1"))
                                                                  (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "19"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "true_left" (formula "51"))
                                                                   (builtin "Use Dependency Contract" (formula "17") (term "0") (ifInst ""  (formula "17") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "51") (term "1,0,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "51") (term "0,1,1,0,0") (ifseqformula "54"))
                                                                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "54")) (ifInst ""  (formula "1")) (ifInst ""  (formula "54")) (ifInst ""  (formula "40")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "17")))
                                                                  (rule "true_left" (formula "51"))
                                                                   (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "16") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "51") (term "1,0,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "51") (term "0,1,0,0,0,0") (ifseqformula "54"))
                                                                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "1")) (ifInst ""  (formula "54")) (ifInst ""  (formula "40")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                                                  (rule "disjointDefinition" (formula "51") (term "0,0"))
                                                                  (rule "measuredByCheckEmpty" (formula "51") (term "1,0") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "disjointWithSingleton2" (formula "51") (term "0"))
                                                                  (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "15"))
                                                                  (rule "eqSymm" (formula "51") (term "1"))
                                                                  (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "16"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "true_left" (formula "51"))
                                                                   (builtin "Use Dependency Contract" (formula "58") (ifInst ""  (formula "37")) (contract "Tree[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                  (rule "wellFormedAnon" (formula "51") (term "1,1,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "51") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "58")) (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "37")) (ifInst ""  (formula "59")) (ifInst ""  (formula "37")))
                                                                  (rule "notLeft" (formula "51"))
                                                                  (rule "disjointDefinition" (formula "51") (term "0"))
                                                                  (rule "measuredByCheckEmpty" (formula "51") (term "1") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "disjointWithSingleton2" (formula "51"))
                                                                  (rule "notRight" (formula "51"))
                                                                  (rule "elementOfSetMinus" (formula "1"))
                                                                  (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "37"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "orRight" (formula "53"))
                                                   (rule "andRight" (formula "54"))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "0"))
                                                      (rule "replaceKnownSelect_taclet2_5" (formula "54") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "54") (term "1,1"))
                                                      (rule "replace_known_right" (formula "48") (term "0,0,0,0,0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "replace_known_right" (formula "44") (term "1,0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "disjointDefinition" (formula "54"))
                                                      (rule "inEqSimp_gtToGeq" (formula "45"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "47") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1"))
                                                      (rule "inEqSimp_gtToGeq" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                      (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "26"))
                                                      (rule "close" (formula "54") (ifseqformula "38"))
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "54"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replaceKnownSelect_taclet2_5" (formula "54") (term "1"))
                                                      (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "54") (term "1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "0"))
                                                      (rule "replace_known_right" (formula "48") (term "0,0,0,0,0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "39"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "replace_known_right" (formula "44") (term "1,0") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_gtToGeq" (formula "45"))
                                                      (rule "mul_literals" (formula "45") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "47") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1"))
                                                      (rule "inEqSimp_gtToGeq" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                      (rule "applyEq" (formula "19") (term "1") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                                      (rule "mul_literals" (formula "45") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,1"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                      (rule "mul_literals" (formula "49") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                      (rule "limit_java_lang_Object__inv_" (formula "54"))
                                                      (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "cut_direct" (formula "12") (term "0"))
                                                      (branch "CUT: self.left = null TRUE"
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "replace_known_left" (formula "46") (term "0,0,0,0,0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "true_left" (formula "33"))
                                                         (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "12"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "applyEq" (formula "40") (term "1,0,0,1,1,0,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "40") (term "1,1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "40") (term "1,2,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "12"))
                                                         (rule "eqSymm" (formula "17"))
                                                         (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "40") (term "0,0,0,0") (ifseqformula "12"))
                                                         (rule "eqSymm" (formula "40") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "40") (term "0,0,0") (ifseqformula "46"))
                                                          (builtin "One Step Simplification" (formula "40"))
                                                         (rule "hideAuxiliaryEq" (formula "40"))
                                                         (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "12"))
                                                         (rule "eqSymm" (formula "11"))
                                                         (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "12"))
                                                         (rule "eqSymm" (formula "11"))
                                                         (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "12"))
                                                         (rule "eqSymm" (formula "17"))
                                                         (rule "limit_java_lang_Object__inv_" (formula "31") (term "1"))
                                                         (rule "limit_Tree_blackHeight_static_Tree" (formula "18") (term "0"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                                                         (rule "limit_Tree_blackBalanced" (formula "10") (term "1"))
                                                         (rule "limit_Tree_blackHeight_static_Tree" (formula "18") (term "1"))
                                                         (rule "limit_Tree_treeSet" (formula "23") (term "1"))
                                                         (rule "limit_Tree_footprint" (formula "37") (term "1"))
                                                         (rule "limit_Tree_footprint" (formula "26") (term "1"))
                                                         (rule "limit_Tree_treeSet" (formula "22") (term "1"))
                                                         (rule "limit_Tree_blackBalanced" (formula "11") (term "1"))
                                                         (rule "ifthenelse_split" (formula "40") (term "0"))
                                                         (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                                            (rule "hideAuxiliaryEq" (formula "41"))
                                                            (rule "inEqSimp_homoInEq1" (formula "41"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                            (rule "mul_literals" (formula "41") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                                                            (rule "equiv_left" (formula "31"))
                                                            (branch "Case 1"
                                                               (rule "cut_direct" (formula "41") (term "0"))
                                                               (branch "CUT: self.right = self TRUE"
                                                                   (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "true_left" (formula "42"))
                                                                  (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "47") (term "0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "35") (term "1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "41"))
                                                                  (rule "eqSymm" (formula "7"))
                                                                  (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "47") (term "1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "45") (term "1") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "41"))
                                                                  (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "41"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "42"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                                  (rule "add_literals" (formula "42") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "42") (term "0"))
                                                                  (rule "qeq_literals" (formula "42"))
                                                                  (rule "closeFalse" (formula "42"))
                                                               )
                                                               (branch "CUT: self.right = self FALSE"
                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "notLeft" (formula "41"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "48"))
                                                                  (rule "close" (formula "44") (ifseqformula "27"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "cut_direct" (formula "39") (term "0"))
                                                               (branch "CUT: self.right = self TRUE"
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "true_left" (formula "40"))
                                                                  (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "33") (term "1") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "39"))
                                                                  (rule "eqSymm" (formula "7"))
                                                                  (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "39"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "40"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0"))
                                                                  (rule "add_literals" (formula "40") (term "0"))
                                                                  (rule "qeq_literals" (formula "40"))
                                                                  (rule "closeFalse" (formula "40"))
                                                               )
                                                               (branch "CUT: self.right = self FALSE"
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "notLeft" (formula "39"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "48"))
                                                                  (rule "close" (formula "42") (ifseqformula "27"))
                                                               )
                                                            )
                                                         )
                                                         (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                                            (rule "orRight" (formula "44"))
                                                            (rule "notRight" (formula "45"))
                                                            (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "41"))
                                                            (rule "hideAuxiliaryEq" (formula "41"))
                                                            (rule "equiv_left" (formula "32"))
                                                            (branch "Case 1"
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,0") (ifseqformula "28"))
                                                               (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "28"))
                                                               (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                                (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "45") (term "1,0,0,0,0,0"))
                                                               (rule "replace_known_left" (formula "45") (term "1,0,1,0,0,0") (ifseqformula "36"))
                                                                (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "44")) (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "16")))
                                                               (rule "true_left" (formula "45"))
                                                                (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "15") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "45") (term "1,0,0,0,0,0"))
                                                               (rule "replace_known_left" (formula "45") (term "1,0,1,0,0,0") (ifseqformula "36"))
                                                                (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "44")) (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                                               (rule "disjointDefinition" (formula "45") (term "0,0"))
                                                               (rule "measuredByCheckEmpty" (formula "45") (term "1,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "disjointWithSingleton2" (formula "45") (term "0"))
                                                               (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "14"))
                                                               (rule "eqSymm" (formula "45") (term "1"))
                                                               (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "15"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "true_left" (formula "45"))
                                                                (builtin "Use Dependency Contract" (formula "49") (ifInst ""  (formula "36")) (contract "Tree[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "45") (term "1,1,0,0,0,0"))
                                                               (rule "replace_known_left" (formula "45") (term "1,1") (ifseqformula "36"))
                                                                (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "44")) (ifInst ""  (formula "36")) (ifInst ""  (formula "50")))
                                                               (rule "notLeft" (formula "45"))
                                                               (rule "disjointDefinition" (formula "45") (term "0"))
                                                               (rule "measuredByCheckEmpty" (formula "45") (term "1") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "disjointWithSingleton2" (formula "45"))
                                                               (rule "notRight" (formula "45"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                               (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "36"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,1") (ifseqformula "28"))
                                                               (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "49")))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "28"))
                                                               (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                                (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "43") (term "1,0,0,0,0,0"))
                                                               (rule "replace_known_right" (formula "43") (term "0,0,1,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "42")) (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "49")) (ifInst ""  (formula "34")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "16")))
                                                               (rule "true_left" (formula "43"))
                                                                (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "15") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "43") (term "1,0,0,0,0,0"))
                                                               (rule "replace_known_left" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "28")) (ifInst ""  (formula "42")) (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "49")) (ifInst ""  (formula "34")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                                               (rule "disjointDefinition" (formula "43") (term "0,0"))
                                                               (rule "measuredByCheckEmpty" (formula "43") (term "1,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "disjointWithSingleton2" (formula "43") (term "0"))
                                                               (rule "applyEq" (formula "43") (term "0,1") (ifseqformula "14"))
                                                               (rule "eqSymm" (formula "43") (term "1"))
                                                               (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "15"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "true_left" (formula "43"))
                                                                (builtin "Use Dependency Contract" (formula "49") (ifInst ""  (formula "34")) (contract "Tree[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "43") (term "1,1,0,0,0,0"))
                                                               (rule "replace_known_right" (formula "43") (term "0,0,0,0,0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "1")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "42")) (ifInst ""  (formula "34")) (ifInst ""  (formula "50")) (ifInst ""  (formula "34")))
                                                               (rule "notLeft" (formula "43"))
                                                               (rule "disjointDefinition" (formula "43") (term "0"))
                                                               (rule "measuredByCheckEmpty" (formula "43") (term "1") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "disjointWithSingleton2" (formula "43"))
                                                               (rule "notRight" (formula "43"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                               (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: self.left = null FALSE"
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "replace_known_right" (formula "46") (term "0,0,0,0,0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "notLeft" (formula "33"))
                                                         (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                                         (rule "applyEq" (formula "10") (term "1") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                         (rule "ifthenelse_split" (formula "47") (term "0"))
                                                         (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                                            (rule "hideAuxiliaryEq" (formula "48"))
                                                            (rule "inEqSimp_homoInEq1" (formula "48"))
                                                            (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                            (rule "mul_literals" (formula "48") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                            (rule "ifthenelse_split" (formula "45") (term "0"))
                                                            (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                                               (rule "hideAuxiliaryEq" (formula "46"))
                                                               (rule "inEqSimp_homoInEq1" (formula "46"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                                                               (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                               (rule "mul_literals" (formula "46") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                               (rule "cut_direct" (formula "47") (term "0"))
                                                               (branch "CUT: self.right = self TRUE"
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "true_left" (formula "48"))
                                                                  (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "53") (term "1") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "47"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "48"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                                  (rule "add_literals" (formula "48") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "48") (term "1,0"))
                                                                  (rule "add_literals" (formula "48") (term "0"))
                                                                  (rule "qeq_literals" (formula "48"))
                                                                  (rule "closeFalse" (formula "48"))
                                                               )
                                                               (branch "CUT: self.right = self FALSE"
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "notLeft" (formula "47"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "50") (ifseqformula "56"))
                                                                  (rule "close" (formula "50") (ifseqformula "29"))
                                                               )
                                                            )
                                                            (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                                               (rule "orRight" (formula "51"))
                                                               (rule "notRight" (formula "52"))
                                                               (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "46"))
                                                               (rule "hideAuxiliaryEq" (formula "46"))
                                                               (rule "cut_direct" (formula "47") (term "0"))
                                                               (branch "CUT: self.right = self TRUE"
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "true_left" (formula "48"))
                                                                  (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "37") (term "1") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "47"))
                                                                  (rule "eqSymm" (formula "8"))
                                                                  (rule "applyEq" (formula "57") (term "1") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "39") (term "1") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "56") (term "0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "54") (term "1") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "52") (term "0") (ifseqformula "47"))
                                                                  (rule "eqSymm" (formula "52"))
                                                                  (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "47"))
                                                                  (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "47"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "48"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                                  (rule "add_literals" (formula "48") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "48") (term "1,0"))
                                                                  (rule "add_literals" (formula "48") (term "0"))
                                                                  (rule "qeq_literals" (formula "48"))
                                                                  (rule "closeFalse" (formula "48"))
                                                               )
                                                               (branch "CUT: self.right = self FALSE"
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "notLeft" (formula "47"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "50") (ifseqformula "57"))
                                                                  (rule "close" (formula "50") (ifseqformula "30"))
                                                               )
                                                            )
                                                         )
                                                         (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                                            (rule "orRight" (formula "51"))
                                                            (rule "notRight" (formula "52"))
                                                            (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                                            (rule "hideAuxiliaryEq" (formula "48"))
                                                            (rule "ifthenelse_split" (formula "46") (term "0"))
                                                            (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "47"))
                                                               (rule "hideAuxiliaryEq" (formula "47"))
                                                               (rule "inEqSimp_homoInEq1" (formula "47"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                               (rule "mul_literals" (formula "47") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                               (rule "cut_direct" (formula "46") (term "0"))
                                                               (branch "CUT: self.left = self TRUE"
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "true_left" (formula "47"))
                                                                  (rule "applyEq" (formula "34") (term "1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "46"))
                                                                  (rule "eqSymm" (formula "12"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "46"))
                                                                  (rule "eqSymm" (formula "18"))
                                                                  (rule "applyEq" (formula "52") (term "1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "36") (term "1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "52") (term "0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "46"))
                                                                  (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "46"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "47"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                                  (rule "add_literals" (formula "47") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "47") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "47") (term "0"))
                                                                  (rule "qeq_literals" (formula "47"))
                                                                  (rule "closeFalse" (formula "47"))
                                                               )
                                                               (branch "CUT: self.left = self FALSE"
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "notLeft" (formula "46"))
                                                                  (rule "referencedObjectIsCreatedRight" (formula "50") (ifseqformula "54"))
                                                                  (rule "close" (formula "50") (ifseqformula "30"))
                                                               )
                                                            )
                                                            (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                                               (rule "orRight" (formula "51"))
                                                               (rule "notRight" (formula "52"))
                                                               (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "47"))
                                                               (rule "hideAuxiliaryEq" (formula "47"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,1") (ifseqformula "31"))
                                                               (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,0") (ifseqformula "31"))
                                                               (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "55"))
                                                                (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
                                                               (rule "true_left" (formula "12"))
                                                                (builtin "Use Dependency Contract" (formula "20") (term "0") (ifInst ""  (formula "20") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "51") (term "1,0,0,0,0,0"))
                                                               (rule "replace_known_right" (formula "51") (term "0,1,1,0,0,0") (ifseqformula "55"))
                                                                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "55")) (ifInst ""  (formula "1")) (ifInst ""  (formula "55")) (ifInst ""  (formula "37")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "20")))
                                                               (rule "true_left" (formula "51"))
                                                                (builtin "Use Dependency Contract" (formula "18") (term "0") (ifInst ""  (formula "19") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "51") (term "1,0,0,0,0,0"))
                                                               (rule "replace_known_right" (formula "51") (term "0,1,0,0,0,0") (ifseqformula "55"))
                                                                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "1")) (ifInst ""  (formula "55")) (ifInst ""  (formula "37")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                                               (rule "disjointDefinition" (formula "51") (term "0,0"))
                                                               (rule "measuredByCheckEmpty" (formula "51") (term "1,0") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "disjointWithSingleton2" (formula "51") (term "0"))
                                                               (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "18"))
                                                               (rule "eqSymm" (formula "51") (term "1"))
                                                               (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "19"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "true_left" (formula "51"))
                                                                (builtin "Use Dependency Contract" (formula "17") (term "0") (ifInst ""  (formula "17") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "51") (term "1,0,0,0,0,0"))
                                                               (rule "replace_known_right" (formula "51") (term "0,1,1,0,0,0") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "58")) (ifInst ""  (formula "2")) (ifInst ""  (formula "58")) (ifInst ""  (formula "40")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "17")))
                                                               (rule "true_left" (formula "51"))
                                                                (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "16") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "51") (term "1,0,0,0,0,0"))
                                                               (rule "replace_known_right" (formula "51") (term "0,1,0,0,0,0") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "2")) (ifInst ""  (formula "58")) (ifInst ""  (formula "40")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                                               (rule "disjointDefinition" (formula "51") (term "0,0"))
                                                               (rule "measuredByCheckEmpty" (formula "51") (term "1,0") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "disjointWithSingleton2" (formula "51") (term "0"))
                                                               (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "15"))
                                                               (rule "eqSymm" (formula "51") (term "1"))
                                                               (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "16"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "true_left" (formula "51"))
                                                                (builtin "Use Dependency Contract" (formula "58") (ifInst ""  (formula "40")) (contract "Tree[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                               (rule "wellFormedAnon" (formula "51") (term "1,1,0,0,0,0"))
                                                               (rule "replace_known_left" (formula "51") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "58")) (ifInst ""  (formula "31")) (ifInst ""  (formula "31")) (ifInst ""  (formula "50")) (ifInst ""  (formula "40")) (ifInst ""  (formula "59")) (ifInst ""  (formula "40")))
                                                               (rule "notLeft" (formula "51"))
                                                               (rule "disjointDefinition" (formula "51") (term "0"))
                                                               (rule "measuredByCheckEmpty" (formula "51") (term "1") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "disjointWithSingleton2" (formula "51"))
                                                               (rule "notRight" (formula "51"))
                                                               (rule "elementOfSetMinus" (formula "1"))
                                                               (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "40"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "53") (term "0,0") (ifseqformula "52"))
                                                (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "40") (term "0,0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "1,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "1,1,0,1,1,0"))
                                                (rule "allRight" (formula "53") (inst "sk=k_0"))
                                                (rule "impRight" (formula "53"))
                                                (rule "orRight" (formula "54"))
                                                (rule "notRight" (formula "55"))
                                                (rule "replace_known_right" (formula "42") (term "0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "replace_known_right" (formula "50") (term "0,0,0,0,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "replace_known_right" (formula "46") (term "1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_gtToGeq" (formula "49") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1"))
                                                (rule "inEqSimp_gtToGeq" (formula "47"))
                                                (rule "mul_literals" (formula "47") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "51"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                (rule "applyEq" (formula "1") (term "1") (ifseqformula "23"))
                                                (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                                (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                                (rule "mul_literals" (formula "49") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                                (rule "mul_literals" (formula "47") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                (rule "mul_literals" (formula "51") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_key_0"))
                                                (rule "simplifySelectOfAnon" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")) (ifInst ""  (formula "33")))
                                                (rule "elementOfSingleton" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "nnf_imp2or" (formula "42") (term "0"))
                                                (rule "inEqSimp_notLeq" (formula "42") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "42") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,0,0"))
                                                (rule "commute_or" (formula "42") (term "0"))
                                                (rule "cut_direct" (formula "37") (term "0"))
                                                (branch "CUT: self.left = null TRUE"
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "replace_known_left" (formula "48") (term "0,0,0,0,0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "true_left" (formula "45"))
                                                   (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "42") (term "0,0,0,0") (ifseqformula "33"))
                                                   (rule "eqSymm" (formula "42") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "hideAuxiliaryEq" (formula "42"))
                                                   (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "33"))
                                                   (rule "eqSymm" (formula "18"))
                                                   (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "33"))
                                                   (rule "eqSymm" (formula "18"))
                                                   (rule "limit_java_lang_Object__inv_" (formula "32") (term "1"))
                                                   (rule "limit_Tree_blackBalanced" (formula "13") (term "1"))
                                                   (rule "limit_Tree_treeSet" (formula "23") (term "1"))
                                                   (rule "limit_Tree_footprint" (formula "27") (term "1"))
                                                   (rule "limit_Tree_footprint" (formula "39") (term "1"))
                                                   (rule "limit_Tree_blackBalanced" (formula "12") (term "1"))
                                                   (rule "limit_Tree_blackHeight_static_Tree" (formula "19") (term "0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "18") (term "1") (ifseqformula "19"))
                                                   (rule "limit_Tree_treeSet" (formula "24") (term "1"))
                                                   (rule "limit_Tree_blackHeight_static_Tree" (formula "19") (term "1"))
                                                   (rule "ifthenelse_split" (formula "42") (term "0"))
                                                   (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "43"))
                                                      (rule "hideAuxiliaryEq" (formula "43"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43"))
                                                      (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                      (rule "mul_literals" (formula "43") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                      (rule "allLeft" (formula "37") (inst "t=k_0"))
                                                      (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_commuteGeq" (formula "37"))
                                                      (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "37"))
                                                      (rule "inEqSimp_homoInEq1" (formula "37"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0"))
                                                      (rule "leq_literals" (formula "37"))
                                                      (rule "closeFalse" (formula "37"))
                                                   )
                                                   (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                                      (rule "orRight" (formula "46"))
                                                      (rule "notRight" (formula "47"))
                                                      (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "43"))
                                                      (rule "hideAuxiliaryEq" (formula "43"))
                                                      (rule "allLeft" (formula "38") (inst "t=k_0"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_commuteGeq" (formula "38"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0"))
                                                      (rule "leq_literals" (formula "38"))
                                                      (rule "closeFalse" (formula "38"))
                                                   )
                                                )
                                                (branch "CUT: self.left = null FALSE"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "replace_known_right" (formula "48") (term "0,0,0,0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notLeft" (formula "35"))
                                                   (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "37"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "applyEq" (formula "12") (term "1") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                                                   (rule "ifthenelse_split" (formula "49") (term "0"))
                                                   (branch "self.right = self ∨ ¬self.right.<created> = TRUE TRUE"
                                                      (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                      (rule "hideAuxiliaryEq" (formula "50"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50"))
                                                      (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "50"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                      (rule "mul_literals" (formula "50") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                      (rule "allLeft" (formula "41") (inst "t=k_0"))
                                                      (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_commuteGeq" (formula "41"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "41"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0"))
                                                      (rule "leq_literals" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                   (branch "self.right = self ∨ ¬self.right.<created> = TRUE FALSE"
                                                      (rule "orRight" (formula "53"))
                                                      (rule "notRight" (formula "54"))
                                                      (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                                      (rule "hideAuxiliaryEq" (formula "50"))
                                                      (rule "allLeft" (formula "42") (inst "t=k_0"))
                                                      (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_commuteGeq" (formula "42"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "42"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_literals" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "53") (term "0,0") (ifseqformula "52"))
                                             (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "41") (term "0,0") (ifseqformula "52"))
                                              (builtin "One Step Simplification" (formula "41"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "1,1,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "1,1,0,1,1,0"))
                                             (rule "allRight" (formula "53") (inst "sk=k_0"))
                                             (rule "impRight" (formula "53"))
                                             (rule "orRight" (formula "54"))
                                             (rule "notRight" (formula "55"))
                                             (rule "replace_known_right" (formula "43") (term "0,1,0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "replace_known_right" (formula "48") (term "0,0,0,0,0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "notLeft" (formula "35"))
                                             (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "37"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_gtToGeq" (formula "50") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1"))
                                             (rule "inEqSimp_gtToGeq" (formula "46"))
                                             (rule "mul_literals" (formula "46") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "46") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "42") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                             (rule "applyEq" (formula "1") (term "1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "12") (term "1") (ifseqformula "14"))
                                             (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                             (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "50") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1"))
                                             (rule "mul_literals" (formula "50") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "50") (term "1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                             (rule "mul_literals" (formula "46") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                             (rule "mul_literals" (formula "48") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                             (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=Tree_key_0"))
                                             (rule "simplifySelectOfAnon" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")) (ifInst ""  (formula "33")))
                                             (rule "elementOfSingleton" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "nnf_imp2or" (formula "42") (term "0"))
                                             (rule "inEqSimp_notGeq" (formula "42") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,0,0"))
                                             (rule "commute_or" (formula "42") (term "0"))
                                             (rule "cut_direct" (formula "28") (term "0"))
                                             (branch "CUT: self.right = null TRUE"
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "replace_known_left" (formula "49") (term "0,0,0,0,0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "true_left" (formula "50"))
                                                (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "true_left" (formula "45"))
                                                (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "true_left" (formula "37"))
                                                (rule "applyEq" (formula "44") (term "1,2,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "44") (term "1,0,0,1,1,0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "47") (term "0") (ifseqformula "26"))
                                                (rule "eqSymm" (formula "47"))
                                                (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "44") (term "0,0,0,0") (ifseqformula "26"))
                                                (rule "eqSymm" (formula "44") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "44") (term "0,0,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "44"))
                                                (rule "hideAuxiliaryEq" (formula "44"))
                                                (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "26"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "26"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "limit_Tree_treeSet" (formula "20") (term "1"))
                                                (rule "limit_Tree_blackHeight_static_Tree" (formula "15") (term "1"))
                                                (rule "limit_Tree_blackBalanced" (formula "10") (term "1"))
                                                (rule "limit_Tree_treeSet" (formula "21") (term "1"))
                                                (rule "limit_Tree_footprint" (formula "40") (term "1"))
                                                (rule "limit_Tree_footprint" (formula "25") (term "1"))
                                                (rule "limit_Tree_blackHeight_static_Tree" (formula "16") (term "0"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                                                (rule "limit_java_lang_Object__inv_" (formula "36") (term "1"))
                                                (rule "limit_Tree_blackBalanced" (formula "9") (term "1"))
                                                (rule "ifthenelse_split" (formula "42") (term "0"))
                                                (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "43"))
                                                   (rule "hideAuxiliaryEq" (formula "43"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43"))
                                                   (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                   (rule "mul_literals" (formula "43") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                   (rule "allLeft" (formula "38") (inst "t=k_0"))
                                                   (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_commuteLeq" (formula "38"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "38"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "46"))
                                                   (rule "notRight" (formula "47"))
                                                   (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "43"))
                                                   (rule "hideAuxiliaryEq" (formula "43"))
                                                   (rule "allLeft" (formula "39") (inst "t=k_0"))
                                                   (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_commuteLeq" (formula "39"))
                                                   (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "39"))
                                                   (rule "inEqSimp_homoInEq1" (formula "39"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                   (rule "add_literals" (formula "39") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0"))
                                                   (rule "leq_literals" (formula "39"))
                                                   (rule "closeFalse" (formula "39"))
                                                )
                                             )
                                             (branch "CUT: self.right = null FALSE"
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "replace_known_right" (formula "49") (term "0,0,0,0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                                (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                                (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                (rule "ifthenelse_split" (formula "47") (term "0"))
                                                (branch "self.left = self ∨ ¬self.left.<created> = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "48"))
                                                   (rule "inEqSimp_homoInEq1" (formula "48"))
                                                   (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                   (rule "mul_literals" (formula "48") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                   (rule "allLeft" (formula "42") (inst "t=k_0"))
                                                   (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42"))
                                                   (rule "inEqSimp_contradInEq0" (formula "42") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "42"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0"))
                                                   (rule "leq_literals" (formula "42"))
                                                   (rule "closeFalse" (formula "42"))
                                                )
                                                (branch "self.left = self ∨ ¬self.left.<created> = TRUE FALSE"
                                                   (rule "orRight" (formula "53"))
                                                   (rule "notRight" (formula "54"))
                                                   (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                                   (rule "hideAuxiliaryEq" (formula "48"))
                                                   (rule "allLeft" (formula "43") (inst "t=k_0"))
                                                   (rule "replace_known_left" (formula "43") (term "0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_commuteLeq" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "43"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_literals" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "orRight" (formula "53"))
                                          (rule "orRight" (formula "53"))
                                           (builtin "One Step Simplification" (formula "55"))
                                           (builtin "One Step Simplification" (formula "54"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "replaceKnownSelect_taclet2_5" (formula "54") (term "0"))
                                          (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "54") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "0"))
                                          (rule "replaceKnownSelect_taclet2_3" (formula "55") (term "1,0"))
                                          (rule "replaceKnownSelect_taclet2_5" (formula "55") (term "1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "55") (term "1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "55") (term "1,1"))
                                          (rule "replace_known_right" (formula "48") (term "0,0,0,0,0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "replace_known_right" (formula "46") (term "0,0,0,0,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "notLeft" (formula "33"))
                                          (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "replace_known_right" (formula "43") (term "0,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "54")))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "disjointDefinition" (formula "55"))
                                          (rule "inEqSimp_gtToGeq" (formula "44"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "48"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "46"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                          (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                                          (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                          (rule "applyEq" (formula "19") (term "1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "28"))
                                          (rule "close" (formula "55") (ifseqformula "43"))
                                       )
                                    )
                                    (branch "Usage"
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "1,1,1,1,0"))
                                       (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "1,0,1,1,0"))
                                       (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "0,1,0,1,0"))
                                       (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "0,0,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "1,1,1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "1,0,1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "0,1,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "0,0,0,1,0"))
                                       (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "0,0,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "0,0,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "0,0,1,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "1,1,1,1,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "0,1,0,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "1,1,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "1,1,0,1,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "0,0,1,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "1,1,1,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "0,1,0,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "1,1,0,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet2_3" (formula "53") (term "0,0,0,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownSelect_taclet2_5" (formula "53") (term "1,0,0,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "1,1,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "1,1,0,1,1,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "1,1,0,1,1,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "53") (term "0,0,0,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "53") (term "1,0,0,0,0,0,0,0,0,0"))
                                       (rule "impRight" (formula "53"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "disjointDefinition" (formula "6") (term "1"))
                                       (rule "disjointDefinition" (formula "3") (term "0,1"))
                                       (rule "disjointDefinition" (formula "2") (term "0,1"))
                                       (rule "emptyStatement" (formula "59") (term "1"))
                                       (rule "commute_or" (formula "1") (term "0"))
                                       (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "limit_java_lang_Object__inv_" (formula "2") (term "1,1"))
                                       (rule "limit_java_lang_Object__inv_" (formula "1") (term "1,1"))
                                       (rule "cnf_rightDist" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "commute_or" (formula "5"))
                                       (rule "cnf_rightDist" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "commute_or" (formula "3"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "1,1") (ifseqformula "38"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0,0") (ifseqformula "38"))
                                        (builtin "JML assert" (formula "64"))
                                       (branch "Validity"
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "Definition_axiom_for_footprint_in_Tree" (formula "64") (term "0") (ifseqformula "63"))
                                          (rule "Definition_axiom_for_footprint_in_Tree" (formula "64") (term "1") (ifseqformula "63"))
                                          (rule "replaceKnownSelect_taclet2_3" (formula "64") (term "0,0,0,1,0"))
                                          (rule "replaceKnownSelect_taclet2_3" (formula "64") (term "1,2,0,1,0"))
                                          (rule "replaceKnownSelect_taclet2_5" (formula "64") (term "0,0,1,1,0"))
                                          (rule "replaceKnownSelect_taclet2_5" (formula "64") (term "1,2,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "64") (term "0,0,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "64") (term "1,2,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "64") (term "0,0,1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "64") (term "1,2,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "58") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "60") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "56"))
                                          (rule "mul_literals" (formula "56") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0"))
                                          (rule "applyEq" (formula "64") (term "2,1,1,1") (ifseqformula "54"))
                                          (rule "applyEq" (formula "64") (term "2,1,1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "64") (term "2,0,1,1") (ifseqformula "53"))
                                          (rule "applyEq" (formula "64") (term "2,0,1,0") (ifseqformula "36"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                          (rule "mul_literals" (formula "58") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "60") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1"))
                                          (rule "mul_literals" (formula "60") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "60") (term "1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                          (rule "mul_literals" (formula "56") (term "1"))
                                          (rule "associativeLawUnion" (formula "64") (term "1"))
                                          (rule "associativeLawUnion" (formula "64") (term "0"))
                                          (rule "ifthenelse_split" (formula "64") (term "1,0,1"))
                                          (branch "self.left = null TRUE"
                                              (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "1")))
                                             (rule "replace_known_left" (formula "58") (term "0,0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "true_left" (formula "47"))
                                             (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "applyEq" (formula "47") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "47") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "52"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "18"))
                                             (rule "limit_java_lang_Object__inv_" (formula "37") (term "1"))
                                             (rule "limit_Tree_footprint" (formula "32") (term "1"))
                                             (rule "limit_java_lang_Object__inv_" (formula "2") (term "1"))
                                             (rule "limit_Tree_blackHeight_static_Tree" (formula "24") (term "0"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "24"))
                                             (rule "limit_Tree_blackHeight_static_Tree" (formula "24") (term "1"))
                                             (rule "limit_Tree_treeSet" (formula "28") (term "1"))
                                             (rule "limit_Tree_treeSet" (formula "29") (term "1"))
                                             (rule "limit_Tree_footprint" (formula "44") (term "1"))
                                             (rule "limit_Tree_blackBalanced" (formula "17") (term "1"))
                                             (rule "limit_Tree_blackBalanced" (formula "18") (term "1"))
                                             (rule "ifthenelse_split" (formula "52") (term "1,0"))
                                             (branch "self.right = null TRUE"
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "1")))
                                                (rule "closeTrue" (formula "53"))
                                             )
                                             (branch "self.right = null FALSE"
                                                (rule "eqSymm" (formula "53"))
                                                (rule "replace_known_right" (formula "47") (term "0,0,0,0,0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "eqSymm" (formula "53"))
                                                (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "47") (term "0,1,0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                                                (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "closeTrue" (formula "52"))
                                             )
                                          )
                                          (branch "self.left = null FALSE"
                                             (rule "replace_known_right" (formula "57") (term "0,0,0,0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "replace_known_right" (formula "65") (term "0,1,0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "notLeft" (formula "42"))
                                             (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "replace_known_left" (formula "56") (term "0,1,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "45"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "64") (term "1,0,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "30") (term "1") (ifseqformula "32"))
                                             (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                             (rule "applyEq" (formula "18") (term "1") (ifseqformula "20"))
                                             (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "36"))
                                             (rule "ifthenelse_split" (formula "64") (term "1,1"))
                                             (branch "self.right = null TRUE"
                                                 (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "1")))
                                                (rule "closeTrue" (formula "65"))
                                             )
                                             (branch "self.right = null FALSE"
                                                (rule "replace_known_right" (formula "57") (term "0,0,0,0,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "replace_known_right" (formula "65") (term "0,1,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "replace_known_left" (formula "57") (term "0,1,0,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "15"))
                                                (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "closeTrue" (formula "63"))
                                             )
                                          )
                                       )
                                       (branch "Usage"
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "impRight" (formula "64"))
                                          (rule "emptyStatement" (formula "65") (term "1"))
                                          (rule "limit_Tree_footprint" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                          (rule "limit_Tree_footprint" (formula "2") (term "1"))
                                           (builtin "JML assert" (formula "67"))
                                          (branch "Validity"
                                              (builtin "One Step Simplification" (formula "67"))
                                              (builtin "Use Dependency Contract" (formula "67") (term "0") (ifInst ""  (formula "67") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                             (rule "Definition_axiom_for_treeSet_in_Tree" (formula "68") (term "0") (ifseqformula "67"))
                                             (rule "Definition_axiom_for_treeSet_in_Tree" (formula "68") (term "1") (ifseqformula "67"))
                                             (rule "replaceKnownSelect_taclet2_3" (formula "68") (term "0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet2_3" (formula "68") (term "1,2,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "68") (term "0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "68") (term "1,2,0,0"))
                                             (rule "replaceKnownSelect_taclet2_5" (formula "68") (term "0,0,1,1,0"))
                                             (rule "replaceKnownSelect_taclet2_5" (formula "68") (term "1,2,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "68") (term "0,0,1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "68") (term "1,2,1,1,0"))
                                             (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                             (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "67")) (ifInst ""  (formula "42")) (ifInst ""  (formula "41")) (ifInst ""  (formula "65")))
                                             (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                             (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "59"))
                                             (rule "mul_literals" (formula "59") (term "1,0,0"))
                                             (rule "add_literals" (formula "59") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "63") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1"))
                                             (rule "inEqSimp_gtToGeq" (formula "61") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1"))
                                             (rule "applyEq" (formula "68") (term "2,1,1,0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "68") (term "2,0,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "68") (term "2,0,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "68") (term "2,1,1,1") (ifseqformula "32"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "59"))
                                             (rule "mul_literals" (formula "59") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,1"))
                                             (rule "mul_literals" (formula "63") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "61") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "61") (term "1,1"))
                                             (rule "mul_literals" (formula "61") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "61") (term "1,1,1"))
                                             (rule "elementOfSetMinus" (formula "66") (term "0,1,0"))
                                             (rule "elementOfUnion" (formula "66") (term "0,1,0,1,0"))
                                             (rule "elementOfSingleton" (formula "66") (term "1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "pullOutSelect" (formula "68") (term "0,0,1,0") (inst "selectSK=Tree_key_0"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "43")))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "69") (term "0,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "limit_Tree_treeSet" (formula "66") (term "1,1"))
                                             (rule "limit_Tree_treeSet" (formula "67") (term "0,1"))
                                             (rule "limit_java_lang_Object__inv_" (formula "68") (term "0"))
                                             (rule "ifthenelse_split" (formula "71") (term "0,0"))
                                             (branch "self.left = null TRUE"
                                                (rule "replace_known_left" (formula "61") (term "0,0,0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "replace_known_left" (formula "72") (term "0,0,1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "72"))
                                                (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "true_left" (formula "48"))
                                                (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "true_left" (formula "45"))
                                                (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "true_left" (formula "45"))
                                                (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "true_left" (formula "56"))
                                                (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "50") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "50") (term "0,0,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "50") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "50") (term "0,0,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "hideAuxiliaryEq" (formula "50"))
                                                (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "26"))
                                                (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "21"))
                                                (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "26"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "21"))
                                                (rule "limit_Tree_treeSet" (formula "31") (term "1"))
                                                (rule "limit_Tree_blackBalanced" (formula "20") (term "1"))
                                                (rule "limit_Tree_treeSet" (formula "32") (term "1"))
                                                (rule "limit_java_lang_Object__inv_" (formula "40") (term "1"))
                                                (rule "limit_Tree_footprint" (formula "35") (term "1"))
                                                (rule "limit_Tree_blackHeight_static_Tree" (formula "27") (term "1"))
                                                (rule "limit_Tree_footprint" (formula "47") (term "1"))
                                                (rule "limit_java_lang_Object__inv_" (formula "5") (term "1"))
                                                (rule "limit_Tree_blackHeight_static_Tree" (formula "27") (term "0"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "26") (term "1") (ifseqformula "27"))
                                                (rule "limit_Tree_blackBalanced" (formula "21") (term "1"))
                                                (rule "ifthenelse_split" (formula "59") (term "1,1,0"))
                                                (branch "self.right = null TRUE"
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "replace_known_left" (formula "51") (term "0,0,0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "60") (term "0,1,1,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "closeTrue" (formula "60"))
                                                )
                                                (branch "self.right = null FALSE"
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "replace_known_right" (formula "50") (term "0,0,0,0,0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "60") (term "0,1,1,0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "replace_known_left" (formula "50") (term "0,1,0,0") (ifseqformula "43"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "44"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "32") (term "1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "27") (term "1") (ifseqformula "29"))
                                                   (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "29"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "closeTrue" (formula "59"))
                                                )
                                             )
                                             (branch "self.left = null FALSE"
                                                (rule "replace_known_right" (formula "60") (term "0,0,0,0,0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "replace_known_right" (formula "72") (term "0,0,1") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "72"))
                                                (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "replace_known_left" (formula "59") (term "0,1,0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "40"))
                                                (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "39") (term "1") (ifseqformula "40"))
                                                (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "40"))
                                                (rule "applyEq" (formula "33") (term "1") (ifseqformula "35"))
                                                (rule "applyEq" (formula "21") (term "1") (ifseqformula "23"))
                                                (rule "ifthenelse_split" (formula "71") (term "1,1,1"))
                                                (branch "self.right = null TRUE"
                                                   (rule "replace_known_left" (formula "61") (term "0,0,0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "replace_known_left" (formula "72") (term "0,1,1,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "closeTrue" (formula "72"))
                                                )
                                                (branch "self.right = null FALSE"
                                                   (rule "replace_known_right" (formula "72") (term "0,1,1,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "72"))
                                                   (rule "replace_known_right" (formula "60") (term "0,0,0,0,0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "60") (term "0,1,0,0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "71"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEq" (formula "19") (term "1") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "37"))
                                                   (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "36"))
                                                   (rule "applyEq" (formula "34") (term "1") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "28") (term "1") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "70") (term "1,1,0") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "70"))
                                                   (rule "closeTrue" (formula "70"))
                                                )
                                             )
                                          )
                                          (branch "Usage"
                                              (builtin "One Step Simplification" (formula "67"))
                                             (rule "impRight" (formula "67"))
                                             (rule "emptyStatement" (formula "68") (term "1"))
                                             (rule "limit_Tree_treeSet" (formula "1") (term "1"))
                                             (rule "limit_Tree_treeSet" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                              (builtin "JML assert" (formula "70"))
                                             (branch "Validity"
                                                 (builtin "One Step Simplification" (formula "70"))
                                                (rule "inEqSimp_gtToGeq" (formula "64") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                                (rule "inEqSimp_gtToGeq" (formula "66") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1"))
                                                (rule "inEqSimp_gtToGeq" (formula "62"))
                                                (rule "mul_literals" (formula "62") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "62") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1"))
                                                (rule "mul_literals" (formula "64") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "64") (term "1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "66") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "66") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1"))
                                                (rule "mul_literals" (formula "66") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "66") (term "1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                                (rule "mul_literals" (formula "62") (term "1"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "33") (term "0"))
                                                (rule "castDel" (formula "33") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "33") (term "0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "0,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "0,0,1,2,0"))
                                                (rule "pullOutSelect" (formula "33") (term "0,0,0,2,0") (inst "selectSK=Tree_isRed_0"))
                                                (rule "simplifySelectOfAnon" (formula "33"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "pullOutSelect" (formula "34") (term "1,1,1,2,0") (inst "selectSK=Tree_left_1"))
                                                (rule "applyEq" (formula "35") (term "1,1,1,0,1,2,0") (ifseqformula "34"))
                                                (rule "simplifySelectOfAnon" (formula "34"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "34"))
                                                (rule "pullOutSelect" (formula "35") (term "1,2,1,2,0") (inst "selectSK=Tree_right_1"))
                                                (rule "applyEq" (formula "36") (term "1,0,0,1,2,0") (ifseqformula "35"))
                                                (rule "simplifySelectOfAnon" (formula "35"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "32") (term "1"))
                                                (rule "castDel" (formula "32") (term "1"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "inEqSimp_gtToGeq" (formula "32") (term "0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "0,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "0,0,1,2,0"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "30") (term "0"))
                                                (rule "castDel" (formula "30") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "30") (term "0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,0,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "0,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "0,0,1,2,0"))
                                                (rule "pullOutSelect" (formula "30") (term "1,1,1,2,0") (inst "selectSK=Tree_left_2"))
                                                (rule "applyEq" (formula "31") (term "1,1,1,0,1,2,0") (ifseqformula "30"))
                                                (rule "simplifySelectOfAnon" (formula "30"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "pullOutSelect" (formula "31") (term "1,2,1,2,0") (inst "selectSK=Tree_right_2"))
                                                (rule "applyEq" (formula "32") (term "1,0,0,1,2,0") (ifseqformula "31"))
                                                (rule "simplifySelectOfAnon" (formula "31"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "pullOutSelect" (formula "32") (term "0,0,0,2,0") (inst "selectSK=Tree_isRed_1"))
                                                (rule "simplifySelectOfAnon" (formula "32"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "33") (term "1"))
                                                (rule "castDel" (formula "33") (term "1"))
                                                (rule "inEqSimp_gtToGeq" (formula "33") (term "0,1,2,1"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1,2,1"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,1,2,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "0,1,2,1"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1,2,1"))
                                                (rule "polySimp_elimOne" (formula "33") (term "0,0,1,2,1"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "28") (term "1"))
                                                (rule "castDel" (formula "28") (term "1"))
                                                (rule "eqSymm" (formula "28"))
                                                (rule "inEqSimp_gtToGeq" (formula "28") (term "0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "0,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0,0,1,2,0"))
                                                (rule "applyEq" (formula "33") (term "1") (ifseqformula "28"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "34") (term "1"))
                                                (rule "castDel" (formula "34") (term "1"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "inEqSimp_gtToGeq" (formula "34") (term "0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "0,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0,0,1,2,0"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                                                (rule "eqSymm" (formula "34"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "29") (term "1"))
                                                (rule "castDel" (formula "29") (term "1"))
                                                (rule "eqSymm" (formula "29"))
                                                (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "29") (term "0,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0,0,1,2,0"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "28") (term "1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "33") (term "1") (ifseqformula "29"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "39") (term "1"))
                                                (rule "castDel" (formula "39") (term "1"))
                                                (rule "inEqSimp_gtToGeq" (formula "39") (term "0,1,2,1"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,2,1"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0,0,1,2,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "0,1,2,1"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,2,1"))
                                                (rule "polySimp_elimOne" (formula "39") (term "0,0,1,2,1"))
                                                (rule "applyEq" (formula "39") (term "1") (ifseqformula "35"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "76") (term "1"))
                                                (rule "castDel" (formula "76") (term "1"))
                                                (rule "eqSymm" (formula "76"))
                                                (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "75"))
                                                 (builtin "One Step Simplification" (formula "76"))
                                                (rule "polySimp_homoEq" (formula "76"))
                                                (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "76") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                (rule "inEqSimp_gtToGeq" (formula "76") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "76") (term "0,0,0,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "76"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                                                (rule "polySimp_elimOne" (formula "76") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "76") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "76") (term "0,0,0"))
                                                (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "14") (term "0,0") (ifseqformula "75"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "replaceKnownSelect_taclet2_3" (formula "14") (term "0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "14") (term "0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet2_3" (formula "14") (term "1,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "14") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "14") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                (rule "pullOutSelect" (formula "14") (term "1,1,0,0") (inst "selectSK=Tree_key_0"))
                                                (rule "simplifySelectOfAnon" (formula "14"))
                                                 (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "76")) (ifInst ""  (formula "52")))
                                                (rule "elementOfSingleton" (formula "14") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "applyEqReverse" (formula "15") (term "1,1,0,0") (ifseqformula "14"))
                                                (rule "hideAuxiliaryEq" (formula "14"))
                                                (rule "nnf_imp2or" (formula "14") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "14") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                                (rule "Definition_axiom_for_treeSet_in_Tree" (formula "3") (term "0") (ifseqformula "75"))
                                                (rule "replaceKnownSelect_taclet0111111111111112_14" (formula "3") (term "0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet2_3" (formula "3") (term "1,2,0,0"))
                                                (rule "replaceKnownSelect_taclet2_3" (formula "3") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0111111111111112_15" (formula "3") (term "0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "3") (term "1,2,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "3") (term "0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet2_5" (formula "3") (term "1,2,1,1,0"))
                                                (rule "replaceKnownSelect_taclet2_5" (formula "3") (term "0,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "3") (term "1,2,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "3") (term "0,0,1,1,0"))
                                                (rule "applyEq" (formula "3") (term "2,0,0") (ifseqformula "43"))
                                                (rule "applyEq" (formula "3") (term "2,1,1,0") (ifseqformula "40"))
                                                (rule "Definition_axiom_for_treeSet_in_Tree" (formula "3") (term "1") (ifseqformula "75"))
                                                (rule "applyEq" (formula "3") (term "2,0,1") (ifseqformula "44"))
                                                (rule "applyEq" (formula "3") (term "2,1,1,1") (ifseqformula "41"))
                                                (rule "Definition_axiom_for_footprint_in_Tree" (formula "6") (term "1") (ifseqformula "75"))
                                                (rule "eqSymm" (formula "6"))
                                                (rule "applyEq" (formula "6") (term "2,1,1,0") (ifseqformula "66"))
                                                (rule "applyEq" (formula "6") (term "2,0,1,0") (ifseqformula "65"))
                                                (rule "Definition_axiom_for_footprint_in_Tree" (formula "4") (term "1") (ifseqformula "75"))
                                                (rule "eqSymm" (formula "4"))
                                                (rule "applyEq" (formula "4") (term "2,1,1,0") (ifseqformula "66"))
                                                (rule "applyEq" (formula "4") (term "2,0,1,0") (ifseqformula "65"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "4") (term "1") (ifseqformula "6"))
                                                (rule "Definition_axiom_for_invGreaterNotInLeft_in_Tree" (formula "64") (term "0,0") (ifseqformula "75"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "inEqSimp_gtToGeq" (formula "64") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "64") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "64") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "64") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "64") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "64") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "64") (term "1,0,0"))
                                                (rule "Definition_axiom_for_footprint_in_Tree" (formula "5") (term "1") (ifseqformula "75"))
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEq" (formula "5") (term "2,0,1,0") (ifseqformula "65"))
                                                (rule "applyEq" (formula "5") (term "2,1,1,0") (ifseqformula "66"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                                (rule "eqSymm" (formula "4"))
                                                (rule "applyEq" (formula "6") (term "1") (ifseqformula "4"))
                                                (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "63") (term "0,0") (ifseqformula "75"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "63") (term "0"))
                                                (rule "inEqSimp_notLeq" (formula "63") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "63") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "63") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "63") (term "1,0,0"))
                                                (rule "Definition_axiom_for_invLessNotInRight_in_Tree" (formula "13") (term "0,0") (ifseqformula "75"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "replaceKnownSelect_taclet0111111111111112_14" (formula "13") (term "1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0111111111111112_15" (formula "13") (term "1,0,0"))
                                                (rule "replaceKnownSelect_taclet2_5" (formula "13") (term "0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "13") (term "0,0,1,0"))
                                                (rule "replaceKnownSelect_taclet2_5" (formula "13") (term "1,1,0,1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "13") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                (rule "Definition_axiom_for_treeSet_in_Tree" (formula "2") (term "1") (ifseqformula "75"))
                                                (rule "eqSymm" (formula "2"))
                                                (rule "applyEq" (formula "2") (term "2,0,0") (ifseqformula "44"))
                                                (rule "applyEq" (formula "2") (term "2,1,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                                (rule "Definition_axiom_for_treeSet_in_Tree" (formula "1") (term "1") (ifseqformula "75"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "1") (term "2,0,0") (ifseqformula "44"))
                                                (rule "applyEq" (formula "1") (term "2,1,1,0") (ifseqformula "41"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                (rule "nnf_imp2or" (formula "13") (term "0"))
                                                (rule "inEqSimp_notLeq" (formula "13") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                                                (rule "Definition_axiom_for_blackHeight_in_Tree" (formula "76") (term "0,1"))
                                                (rule "replaceKnownSelect_taclet2_5" (formula "76") (term "1,2,1,2,0,0,1"))
                                                (rule "replaceKnownSelect_taclet2_3" (formula "76") (term "1,1,1,2,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "76") (term "1,2,1,2,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "76") (term "1,1,1,2,0,0,1"))
                                                (rule "replaceKnownSelect_taclet2_5" (formula "76") (term "1,1,0,1,2,0,0,1"))
                                                (rule "replaceKnownSelect_taclet2_3" (formula "76") (term "1,0,0,1,2,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "76") (term "1,1,0,1,2,0,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "76") (term "1,0,0,1,2,0,0,1"))
                                                (rule "castDel" (formula "76") (term "0,1"))
                                                (rule "replace_known_right" (formula "76") (term "0,0,1") (ifseqformula "75"))
                                                 (builtin "One Step Simplification" (formula "76"))
                                                (rule "polySimp_addComm1" (formula "76") (term "1"))
                                                (rule "polySimp_addComm0" (formula "76") (term "0,1"))
                                                (rule "inEqSimp_gtToGeq" (formula "76") (term "0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "76") (term "0,0,1,1"))
                                                (rule "applyEq" (formula "76") (term "2,1,1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "76") (term "0,1,0,0,1,1") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "76") (term "0,0,1,1"))
                                                (rule "applyEq" (formula "76") (term "1,1,1") (ifseqformula "34"))
                                                (rule "applyEq" (formula "76") (term "1,0,0,1,1") (ifseqformula "34"))
                                                (rule "polySimp_addComm1" (formula "76") (term "0,0,1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "76") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "76") (term "0,0,1,1"))
                                                (rule "polySimp_homoEq" (formula "76"))
                                                (rule "polySimp_pullOutFactor1b" (formula "76") (term "0"))
                                                (rule "add_literals" (formula "76") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "76") (term "1,0"))
                                                (rule "add_zero_right" (formula "76") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "76"))
                                                (rule "polySimp_mulLiterals" (formula "76") (term "1"))
                                                (rule "polySimp_elimOne" (formula "76") (term "1"))
                                                (rule "pullOutSelect" (formula "76") (term "0,0,0") (inst "selectSK=Tree_isRed_2"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "52")))
                                                (rule "eqSymm" (formula "77"))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "77") (term "0,0,1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "77"))
                                                (rule "closeTrue" (formula "77"))
                                             )
                                             (branch "Usage"
                                                 (builtin "One Step Simplification" (formula "70"))
                                                (rule "impRight" (formula "70"))
                                                (rule "emptyStatement" (formula "71") (term "1"))
                                                (rule "limit_Tree_blackHeight_static_Tree" (formula "1") (term "0"))
                                                (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                                (rule "limit_Tree_blackHeight_static_Tree" (formula "2") (term "1"))
                                                 (builtin "JML assert" (formula "73"))
                                                (branch "Validity"
                                                    (builtin "One Step Simplification" (formula "73"))
                                                   (rule "Definition_axiom_for_blackBalanced_in_Tree" (formula "73") (term "0") (ifseqformula "72"))
                                                   (rule "Definition_axiom_for_blackBalanced_in_Tree" (formula "73") (term "1") (ifseqformula "72"))
                                                    (builtin "One Step Simplification" (formula "73"))
                                                   (rule "replaceKnownSelect_taclet2_5" (formula "73") (term "0,0,0,1,0"))
                                                   (rule "replaceKnownSelect_taclet2_3" (formula "73") (term "1,0,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet2_5" (formula "73") (term "1,1,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet2_5" (formula "73") (term "1,0,1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "73") (term "0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "73") (term "1,0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "73") (term "1,1,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "73") (term "1,0,1,1,0"))
                                                   (rule "replaceKnownSelect_taclet2_3" (formula "73") (term "0,0,0,1,0,0"))
                                                   (rule "replaceKnownSelect_taclet2_3" (formula "73") (term "1,0,1,1,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "73") (term "0,0,0,1,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "73") (term "1,0,1,1,0,0"))
                                                   (rule "eqSymm" (formula "73") (term "0,0,1"))
                                                   (rule "eqSymm" (formula "73") (term "0,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "67") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1"))
                                                   (rule "inEqSimp_gtToGeq" (formula "69") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1"))
                                                   (rule "inEqSimp_gtToGeq" (formula "65"))
                                                   (rule "mul_literals" (formula "65") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "65") (term "0,0"))
                                                   (rule "applyEq" (formula "73") (term "0,1,1,0,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "73") (term "0,1,1,0,1") (ifseqformula "29"))
                                                   (rule "applyEq" (formula "73") (term "0,0,0,0") (ifseqformula "33"))
                                                   (rule "eqSymm" (formula "73") (term "0,0,0"))
                                                   (rule "applyEq" (formula "73") (term "0,1,1,1") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "73") (term "0,1,1,0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "73") (term "0,0,0,0") (ifseqformula "36"))
                                                   (rule "eqSymm" (formula "73") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "67") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "67") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "67") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "67") (term "1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "69") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "69") (term "1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "65"))
                                                   (rule "mul_literals" (formula "65") (term "1"))
                                                   (rule "equiv_right" (formula "73"))
                                                   (branch "Case '->'"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "replace_known_left" (formula "76") (term "0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "76"))
                                                      (rule "applyEq" (formula "36") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "35") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "34") (term "1") (ifseqformula "1"))
                                                      (rule "cut_direct" (formula "54") (term "0"))
                                                      (branch "CUT: self.left = null TRUE"
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "replace_known_left" (formula "69") (term "0,0,0,0,0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "replace_known_left" (formula "73") (term "0,0,0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "73"))
                                                         (rule "impRight" (formula "73"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "true_left" (formula "54"))
                                                         (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "true_left" (formula "54"))
                                                         (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "true_left" (formula "61"))
                                                         (rule "replace_known_right" (formula "61") (term "0,0,0,0,0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "61") (term "0,1,0,0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "65")))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "replace_known_right" (formula "57") (term "1,0") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "47")))
                                                         (rule "true_left" (formula "57"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "15"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "applyEq" (formula "58") (term "1,0,0,1,1,0,0") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "58") (term "0,0,1,0,0") (ifseqformula "47"))
                                                         (rule "eqSymm" (formula "58") (term "0,1,0,0"))
                                                         (rule "replace_known_right" (formula "58") (term "0,1,0,0") (ifseqformula "64"))
                                                          (builtin "One Step Simplification" (formula "58"))
                                                         (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "25") (term "1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "40") (term "1") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "47"))
                                                         (rule "apply_eq_boolean" (formula "24") (term "1") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "34") (term "1") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "46"))
                                                         (rule "apply_eq_boolean" (formula "25") (term "1") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "2")))
                                                         (rule "closeFalse" (formula "25"))
                                                      )
                                                      (branch "CUT: self.left = null FALSE"
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "notLeft" (formula "54"))
                                                         (rule "replace_known_right" (formula "68") (term "0,0,0,0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "68") (term "0,1,0,0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "77"))
                                                         (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "57"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "15"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "replace_known_right" (formula "66") (term "0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "applyEq" (formula "43") (term "1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "48") (term "1") (ifseqformula "49"))
                                                         (rule "applyEq" (formula "31") (term "1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "33") (term "0") (ifseqformula "2"))
                                                         (rule "eqSymm" (formula "33"))
                                                         (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "33"))
                                                          (builtin "One Step Simplification" (formula "77"))
                                                         (rule "impRight" (formula "77"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_right" (formula "70") (term "0,0,0,0,0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "70"))
                                                         (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "replace_known_left" (formula "70") (term "0,1,0,0") (ifseqformula "60"))
                                                          (builtin "One Step Simplification" (formula "70"))
                                                         (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "replace_known_right" (formula "71") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "71"))
                                                         (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "74"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "61"))
                                                          (builtin "One Step Simplification" (formula "58"))
                                                         (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "49"))
                                                         (rule "apply_eq_boolean" (formula "29") (term "1") (ifseqformula "77"))
                                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "3")))
                                                         (rule "closeFalse" (formula "29"))
                                                      )
                                                   )
                                                   (branch "Case '<-'"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "replace_known_left" (formula "76") (term "0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "76"))
                                                      (rule "applyEq" (formula "35") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "36") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "34") (term "1") (ifseqformula "1"))
                                                      (rule "cut_direct" (formula "54") (term "0"))
                                                      (branch "CUT: self.left = null TRUE"
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "replace_known_left" (formula "69") (term "0,0,0,0,0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "replace_known_left" (formula "76") (term "0,0,0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "76"))
                                                         (rule "impRight" (formula "76"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_right" (formula "71") (term "0,0,0,0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "71"))
                                                         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "true_left" (formula "55"))
                                                         (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "true_left" (formula "53"))
                                                         (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "true_left" (formula "53"))
                                                         (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "true_left" (formula "63"))
                                                         (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "38"))
                                                         (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "65"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "65")))
                                                         (rule "true_left" (formula "58"))
                                                         (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "64")))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "replace_known_left" (formula "59") (term "0,1,0,0") (ifseqformula "51"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "15"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "applyEq" (formula "65") (term "0") (ifseqformula "26"))
                                                         (rule "close" (formula "65") (ifseqformula "2"))
                                                      )
                                                      (branch "CUT: self.left = null FALSE"
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "notLeft" (formula "54"))
                                                         (rule "replace_known_right" (formula "68") (term "0,0,0,0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "replace_known_right" (formula "77") (term "0,0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "77"))
                                                         (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "68") (term "0,1,0,0") (ifseqformula "55"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "57"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "15"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "replace_known_right" (formula "66") (term "0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                         (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "75"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "applyEq" (formula "32") (term "1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "48") (term "1") (ifseqformula "49"))
                                                         (rule "applyEq" (formula "43") (term "1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "31") (term "1") (ifseqformula "33"))
                                                         (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "49"))
                                                         (rule "applyEq" (formula "20") (term "0,0,1") (ifseqformula "48"))
                                                         (rule "applyEq" (formula "32") (term "1") (ifseqformula "2"))
                                                         (rule "replace_known_left" (formula "76") (term "0") (ifseqformula "32"))
                                                          (builtin "One Step Simplification" (formula "76"))
                                                         (rule "impRight" (formula "76"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_right" (formula "69") (term "0,0,0,0,0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "65"))
                                                         (rule "replace_known_right" (formula "70") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "70"))
                                                         (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "58"))
                                                         (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "replace_known_left" (formula "69") (term "0,1,0,0") (ifseqformula "59"))
                                                          (builtin "One Step Simplification" (formula "69"))
                                                         (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "73"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "17"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "60"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "applyEq" (formula "30") (term "1") (ifseqformula "2"))
                                                         (rule "apply_eq_boolean" (formula "28") (term "1") (ifseqformula "77"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "applyEq" (formula "44") (term "1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "28") (term "1") (ifseqformula "3"))
                                                         (rule "close" (formula "77") (ifseqformula "28"))
                                                      )
                                                   )
                                                )
                                                (branch "Usage"
                                                    (builtin "One Step Simplification" (formula "73"))
                                                   (rule "impRight" (formula "73"))
                                                   (rule "emptyStatement" (formula "74") (term "1"))
                                                   (rule "limit_Tree_blackBalanced" (formula "1") (term "1"))
                                                   (rule "limit_Tree_blackBalanced" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                                    (builtin "JML assert" (formula "76"))
                                                   (branch "Validity"
                                                       (builtin "One Step Simplification" (formula "76") (userinteraction))
                                                      (rule "Definition_axiom_for_noDoubleRed_in_Tree" (formula "76") (term "0") (ifseqformula "75") (userinteraction))
                                                      (rule "Definition_axiom_for_noDoubleRed_in_Tree" (formula "76") (term "1") (ifseqformula "75") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "76"))
                                                      (rule "replaceKnownSelect_taclet2_5" (formula "76") (term "0,0,0,1,0"))
                                                      (rule "replaceKnownSelect_taclet2_3" (formula "76") (term "0,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "76") (term "0,0,0,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "76") (term "0,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet2_3" (formula "76") (term "1,0,1,1,0,0"))
                                                      (rule "replaceKnownSelect_taclet2_5" (formula "76") (term "1,0,1,1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "76") (term "1,0,1,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "76") (term "1,0,1,1,1,0"))
                                                      (rule "replaceKnownSelect_taclet2_5" (formula "76") (term "1,0,0,1,0,1,1,0"))
                                                      (rule "replaceKnownSelect_taclet2_3" (formula "76") (term "1,0,0,1,0,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "76") (term "1,0,0,1,0,1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "76") (term "1,0,0,1,0,1,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "68"))
                                                      (rule "mul_literals" (formula "68") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "68") (term "0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "70") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1"))
                                                      (rule "inEqSimp_gtToGeq" (formula "72") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1"))
                                                      (rule "applyEq" (formula "76") (term "0,1,1,1,1") (ifseqformula "23"))
                                                      (rule "applyEq" (formula "76") (term "0,1,1,0,1") (ifseqformula "26"))
                                                      (rule "applyEq" (formula "76") (term "0,1,1,1,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "76") (term "0,1,1,0,0") (ifseqformula "25"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                      (rule "mul_literals" (formula "68") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "70") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "70") (term "1,1"))
                                                      (rule "mul_literals" (formula "70") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "70") (term "1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,1"))
                                                      (rule "mul_literals" (formula "72") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "1,1,1"))
                                                      (rule "pullOutSelect" (formula "76") (term "0,0,0,1,1,0") (inst "selectSK=Tree_isRed_0"))
                                                      (rule "applyEq" (formula "77") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "52")))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "77") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "77") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "76") (term "0,0,1,0,1,1,0") (inst "selectSK=Tree_isRed_1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "pullOutSelect" (formula "77") (term "0,0,1,0,1,0,0") (inst "selectSK=Tree_isRed_2"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "equiv_right" (formula "78"))
                                                      (branch "Case '->'"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "cut_direct" (formula "53") (term "0"))
                                                         (branch "CUT: self.left = null TRUE"
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "true_left" (formula "54"))
                                                            (rule "replace_known_left" (formula "73") (term "0,0,0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "73"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,1,0,1") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "true_left" (formula "58"))
                                                            (rule "replace_known_left" (formula "71") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "71"))
                                                            (rule "true_left" (formula "71"))
                                                            (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "true_left" (formula "59"))
                                                            (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "true_left" (formula "55"))
                                                            (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "true_left" (formula "56"))
                                                            (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "29"))
                                                            (rule "true_left" (formula "29"))
                                                            (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "48"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "true_left" (formula "60"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "66"))
                                                            (rule "impRight" (formula "66"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "replace_known_right" (formula "61") (term "0,0,0,0,0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "61") (term "0,1,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,1,0,1") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "42"))
                                                            (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "17"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "replace_known_left" (formula "67") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "67"))
                                                            (rule "applyEq" (formula "60") (term "1,0,0,1,1,0,0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "45"))
                                                            (rule "eqSymm" (formula "60") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "60") (term "0,0,0") (ifseqformula "66"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "hideAuxiliaryEq" (formula "60"))
                                                            (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "42") (term "1") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "45"))
                                                            (rule "eqSymm" (formula "30"))
                                                            (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "45"))
                                                            (rule "eqSymm" (formula "25"))
                                                            (rule "applyEq" (formula "23") (term "0") (ifseqformula "2"))
                                                            (rule "eqSymm" (formula "23"))
                                                            (rule "close" (formula "66") (ifseqformula "23"))
                                                         )
                                                         (branch "CUT: self.left = null FALSE"
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "73") (term "0,0,0,0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "73"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "replace_known_right" (formula "74") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "notLeft" (formula "58"))
                                                            (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "59"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "1") (term "0,0,1,0,1") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "71") (term "0,1,0,0") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "71"))
                                                            (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "69"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "replace_known_right" (formula "81") (term "0,0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "1")))
                                                            (rule "applyEq" (formula "31") (term "0") (ifseqformula "2"))
                                                            (rule "eqSymm" (formula "31"))
                                                            (rule "replace_known_left" (formula "81") (term "0") (ifseqformula "31"))
                                                             (builtin "One Step Simplification" (formula "81"))
                                                            (rule "impRight" (formula "81"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "replace_known_right" (formula "74") (term "0,0,0,0,0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "replace_known_left" (formula "74") (term "0,1,0,0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "3") (term "0,0,1,0,1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_right" (formula "74") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "69"))
                                                            (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "27"))
                                                            (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "replace_known_left" (formula "82") (term "0") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "82"))
                                                            (rule "applyEq" (formula "29") (term "1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "47") (term "1") (ifseqformula "49"))
                                                            (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "53"))
                                                            (rule "applyEq" (formula "34") (term "1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "51") (term "1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                                                            (rule "applyEq" (formula "32") (term "1") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "49") (term "1") (ifseqformula "50"))
                                                            (rule "apply_eq_boolean" (formula "26") (term "1") (ifseqformula "81"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "notLeft" (formula "26"))
                                                            (rule "applyEq" (formula "42") (term "1") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "28") (term "1") (ifseqformula "29"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "26"))
                                                            (rule "close" (formula "81") (ifseqformula "4"))
                                                         )
                                                      )
                                                      (branch "Case '<-'"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "cut_direct" (formula "53") (term "0"))
                                                         (branch "CUT: self.left = null TRUE"
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "true_left" (formula "54"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "80") (term "0,0,1,0,1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "72") (term "0,0,0,0,0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "72"))
                                                            (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "52"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "true_left" (formula "35"))
                                                            (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "true_left" (formula "58"))
                                                            (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "replace_known_left" (formula "69") (term "0") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "69"))
                                                            (rule "true_left" (formula "69"))
                                                            (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "true_left" (formula "54"))
                                                            (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "true_left" (formula "55"))
                                                            (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "48"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "true_left" (formula "54"))
                                                            (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "48"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "true_left" (formula "28"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "true_left" (formula "60"))
                                                            (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "46"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "replace_known_left" (formula "66") (term "0,0,0") (ifseqformula "45"))
                                                             (builtin "One Step Simplification" (formula "66"))
                                                            (rule "impRight" (formula "66"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "61") (term "0,0,0,0,0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "39"))
                                                            (rule "replace_known_left" (formula "61") (term "0,1,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "67") (term "0,0,1,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "17"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "replace_known_left" (formula "67") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "67"))
                                                            (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "44"))
                                                            (rule "eqSymm" (formula "59") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "65"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "hideAuxiliaryEq" (formula "59"))
                                                            (rule "applyEq" (formula "22") (term "1") (ifseqformula "2"))
                                                            (rule "close" (formula "65") (ifseqformula "22"))
                                                         )
                                                         (branch "CUT: self.left = null FALSE"
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replace_known_right" (formula "73") (term "0,0,0,0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "73"))
                                                            (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "37"))
                                                            (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "notLeft" (formula "58"))
                                                            (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "replace_known_right" (formula "73") (term "0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "73"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "59"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "81") (term "0,0,1,0,1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "71") (term "0,1,0,0") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "71"))
                                                            (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "69"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "replace_known_right" (formula "81") (term "0,0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "1")))
                                                            (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "31"))
                                                            (rule "replace_known_left" (formula "81") (term "0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "81"))
                                                            (rule "impRight" (formula "81"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "replace_known_right" (formula "74") (term "0,0,0,0,0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "78"))
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "82") (term "0,0,1,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "73") (term "0,1,0,0") (ifseqformula "63"))
                                                             (builtin "One Step Simplification" (formula "73"))
                                                            (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "replace_known_right" (formula "74") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "69"))
                                                            (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "64"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "21"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "77"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "replace_known_left" (formula "82") (term "0") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "82"))
                                                            (rule "applyEq" (formula "29") (term "1") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "31") (term "1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "53"))
                                                            (rule "applyEq" (formula "34") (term "1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "29") (term "1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "51") (term "1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "46") (term "1") (ifseqformula "48"))
                                                            (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                                                            (rule "applyEq" (formula "49") (term "1") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "32") (term "1") (ifseqformula "33"))
                                                            (rule "applyEq" (formula "26") (term "1") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "43") (term "1") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "26") (term "1") (ifseqformula "4"))
                                                            (rule "close" (formula "80") (ifseqformula "26"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Usage"
                                                       (builtin "One Step Simplification" (formula "76"))
                                                      (rule "impRight" (formula "76"))
                                                      (rule "emptyStatement" (formula "77") (term "1"))
                                                      (rule "limit_Tree_noDoubleRed" (formula "1") (term "1"))
                                                      (rule "limit_Tree_noDoubleRed" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                                       (builtin "JML assert" (formula "79"))
                                                      (branch "Validity"
                                                          (builtin "One Step Simplification" (formula "79") (userinteraction))
                                                         (rule "Definition_axiom_for_doubleRedTop_in_Tree" (formula "79") (term "0") (ifseqformula "78") (userinteraction))
                                                         (rule "Definition_axiom_for_doubleRedTop_in_Tree" (formula "79") (term "1") (ifseqformula "78") (userinteraction))
                                                         (rule "Definition_axiom_for_doubleRedRight_in_Tree" (formula "79") (term "0,0,0,0") (ifseqformula "78") (userinteraction))
                                                         (rule "Definition_axiom_for_doubleRedLeft_in_Tree" (formula "79") (term "0,1,0,0") (ifseqformula "78") (userinteraction))
                                                         (rule "Definition_axiom_for_doubleRedRight_in_Tree" (formula "79") (term "0,0,0,1") (ifseqformula "78") (userinteraction))
                                                         (rule "Definition_axiom_for_doubleRedLeft_in_Tree" (formula "79") (term "0,1,0,1") (ifseqformula "78") (userinteraction))
                                                          (builtin "One Step Simplification" (formula "79"))
                                                         (rule "replaceKnownSelect_taclet2_5" (formula "79") (term "1,0,1,0,0,0"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "79") (term "1,0,1,0,1,0"))
                                                         (rule "replaceKnownSelect_taclet2_5" (formula "79") (term "0,0,0,1,1,0"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "79") (term "0,0,0,1,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "79") (term "1,0,1,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "79") (term "1,0,1,0,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "79") (term "0,0,0,1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "79") (term "0,0,0,1,0,0"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "79") (term "1,0,1,1,1,0,0"))
                                                         (rule "replaceKnownSelect_taclet2_5" (formula "79") (term "1,0,1,1,1,1,0"))
                                                         (rule "replaceKnownSelect_taclet2_5" (formula "79") (term "1,0,1,0,0,0,0"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "79") (term "1,0,1,0,0,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "79") (term "1,0,1,1,1,0,0"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "79") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "replaceKnownSelect_taclet2_5" (formula "79") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "replaceKnownSelect_taclet2_3" (formula "79") (term "1,0,0,0,1,1,0,0"))
                                                         (rule "replaceKnownSelect_taclet2_5" (formula "79") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "79") (term "1,0,1,1,1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "79") (term "1,0,1,0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "79") (term "1,0,1,0,0,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "79") (term "0,0,1,0,0,0,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "79") (term "1,0,0,0,1,1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "79") (term "1,0,0,0,1,1,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "79") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "75") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1"))
                                                         (rule "inEqSimp_gtToGeq" (formula "73") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1"))
                                                         (rule "inEqSimp_gtToGeq" (formula "71"))
                                                         (rule "mul_literals" (formula "71") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "71") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "75") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "75") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "75") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "75") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "75") (term "1,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "73") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "73") (term "1,1"))
                                                         (rule "mul_literals" (formula "73") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "73") (term "1,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "71"))
                                                         (rule "mul_literals" (formula "71") (term "1"))
                                                         (rule "pullOutSelect" (formula "79") (term "0,0,0,0,0,0,0") (inst "selectSK=Tree_isRed_0"))
                                                         (rule "applyEq" (formula "80") (term "0,0,0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")) (ifInst ""  (formula "55")))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "80") (term "0,0,0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "80") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "pullOutSelect" (formula "79") (term "0,1,0,0,0,0") (inst "selectSK=Tree_isRed_1"))
                                                         (rule "applyEq" (formula "80") (term "0,0,0,1,1,1,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "pullOutSelect" (formula "80") (term "0,1,0,0,1,0") (inst "selectSK=Tree_isRed_2"))
                                                         (rule "applyEq" (formula "81") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_and_2" (formula "81") (term "0,1,1"))
                                                         (rule "commute_and_2" (formula "81") (term "0,0,1"))
                                                         (rule "commute_and" (formula "81") (term "1,1,0,1"))
                                                         (rule "commute_and" (formula "81") (term "1,1,1,1"))
                                                         (rule "commute_and_2" (formula "81") (term "0,0,0,0"))
                                                         (rule "commute_and_2" (formula "81") (term "0,0,1,0"))
                                                         (rule "cut_direct" (formula "20") (term "0"))
                                                         (branch "CUT: self.left = null TRUE"
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "replace_known_left" (formula "74") (term "0,0,0,0,0") (ifseqformula "20"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "81") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "81") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "19"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "19"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "19"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "replace_known_left" (formula "71") (term "0") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "71"))
                                                            (rule "true_left" (formula "71"))
                                                            (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "true_left" (formula "57"))
                                                            (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "true_left" (formula "57"))
                                                            (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "true_left" (formula "56"))
                                                            (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "true_left" (formula "54"))
                                                            (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "true_left" (formula "49"))
                                                            (rule "replace_known_left" (formula "62") (term "0,0") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "true_left" (formula "62"))
                                                            (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "true_left" (formula "24"))
                                                            (rule "replace_known_left" (formula "68") (term "0,1,0,0,0,1,1") (ifseqformula "18"))
                                                             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                                                            (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "18"))
                                                            (rule "eqSymm" (formula "62") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "67"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "hideAuxiliaryEq" (formula "62"))
                                                            (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "18"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "18"))
                                                            (rule "eqSymm" (formula "33"))
                                                            (rule "limit_Tree_noDoubleRed" (formula "28") (term "1"))
                                                            (rule "limit_Tree_treeSet" (formula "44") (term "1"))
                                                            (rule "limit_Tree_footprint" (formula "47") (term "1"))
                                                            (rule "limit_Tree_blackHeight_static_Tree" (formula "37") (term "1"))
                                                            (rule "limit_Tree_footprint" (formula "59") (term "1"))
                                                            (rule "limit_java_lang_Object__inv_" (formula "17") (term "1"))
                                                            (rule "limit_Tree_blackBalanced" (formula "32") (term "1"))
                                                            (rule "limit_java_lang_Object__inv_" (formula "52") (term "1"))
                                                            (rule "limit_Tree_treeSet" (formula "43") (term "1"))
                                                            (rule "limit_Tree_noDoubleRed" (formula "27") (term "1"))
                                                            (rule "limit_Tree_blackHeight_static_Tree" (formula "39") (term "0"))
                                                            (rule "applyEq" (formula "39") (term "0") (ifseqformula "37"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "limit_Tree_blackBalanced" (formula "33") (term "1"))
                                                            (rule "cut_direct" (formula "31") (term "0"))
                                                            (branch "CUT: self.right = null TRUE"
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "67") (term "0,1,0,0,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_left" (formula "61") (term "0,0,0,0,0") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "61"))
                                                               (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "true_left" (formula "62"))
                                                               (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "30"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "29"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "true_left" (formula "43"))
                                                               (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "true_left" (formula "49"))
                                                               (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "28"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "replace_known_left" (formula "57") (term "0,1,0,0,1") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "27")))
                                                               (rule "closeTrue" (formula "57"))
                                                            )
                                                            (branch "CUT: self.right = null FALSE"
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "66"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replace_known_right" (formula "62") (term "0,0,0,0,0") (ifseqformula "66"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "66"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "66"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "55"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "68") (term "0,1,0,0,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_left" (formula "61") (term "0,1,0,0") (ifseqformula "54"))
                                                                (builtin "One Step Simplification" (formula "61"))
                                                               (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "53"))
                                                               (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "20"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "55"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_right" (formula "67") (term "0,1,0,0,1") (ifseqformula "65"))
                                                                (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "65")))
                                                               (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "45"))
                                                               (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "24"))
                                                               (rule "applyEq" (formula "43") (term "1") (ifseqformula "44"))
                                                               (rule "applyEq" (formula "28") (term "1") (ifseqformula "29"))
                                                               (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                                                               (rule "applyEq" (formula "38") (term "1") (ifseqformula "40"))
                                                               (rule "commute_and_2" (formula "66") (term "0"))
                                                                (builtin "One Step Simplification" (formula "66"))
                                                               (rule "closeTrue" (formula "66"))
                                                            )
                                                         )
                                                         (branch "CUT: self.left = null FALSE"
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "replace_known_right" (formula "74") (term "0,0,0,0,0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "notLeft" (formula "59"))
                                                            (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "61"))
                                                            (rule "replace_known_right" (formula "74") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "74"))
                                                            (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "20"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "80"))
                                                             (builtin "One Step Simplification" (formula "38"))
                                                            (rule "replace_known_left" (formula "73") (term "0,1,0,0") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "73"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "82") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "82") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "61"))
                                                             (builtin "One Step Simplification" (formula "58"))
                                                            (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "replace_known_right" (formula "70") (term "0,0") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "70"))
                                                            (rule "replace_known_right" (formula "81") (term "0,1,0,0,0,1,1") (ifseqformula "79"))
                                                             (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "79")) (ifInst ""  (formula "79")) (ifInst ""  (formula "79")))
                                                            (rule "applyEq" (formula "81") (term "0,1,1,0,0") (ifseqformula "31"))
                                                            (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "53"))
                                                            (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "53"))
                                                            (rule "applyEq" (formula "51") (term "1") (ifseqformula "52"))
                                                            (rule "applyEq" (formula "80") (term "0,1,0,1,0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "28") (term "1") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "34") (term "1") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "46") (term "1") (ifseqformula "48"))
                                                            (rule "commute_and_2" (formula "80") (term "0,1"))
                                                            (rule "commute_and_2" (formula "80") (term "0,0"))
                                                            (rule "cut_direct" (formula "45") (term "0"))
                                                            (branch "CUT: self.right = null TRUE"
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "true_left" (formula "46"))
                                                               (rule "replace_known_left" (formula "73") (term "0,0,0,0,0") (ifseqformula "45"))
                                                                (builtin "One Step Simplification" (formula "73"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "45"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "80") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "80") (term "0,0,0,1,1,1,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_left" (formula "73") (term "0") (ifseqformula "44"))
                                                                (builtin "One Step Simplification" (formula "73"))
                                                               (rule "true_left" (formula "73"))
                                                               (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "44"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "43"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "42"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "true_left" (formula "60"))
                                                               (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "42"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "true_left" (formula "65"))
                                                               (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "42"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "41"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "true_left" (formula "46"))
                                                               (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "41"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "40"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "true_left" (formula "57"))
                                                               (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "40"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "true_left" (formula "56"))
                                                               (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "40"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "replace_known_left" (formula "68") (term "0,1,0,0,0,0") (ifseqformula "39"))
                                                                (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                                               (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "39"))
                                                               (rule "eqSymm" (formula "62") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "62") (term "0,0,0") (ifseqformula "67"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "hideAuxiliaryEq" (formula "62"))
                                                               (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "39"))
                                                               (rule "eqSymm" (formula "26"))
                                                               (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "39"))
                                                               (rule "eqSymm" (formula "22"))
                                                               (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "64") (term "0") (ifseqformula "39"))
                                                               (rule "eqSymm" (formula "64"))
                                                               (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "39"))
                                                               (rule "eqSymm" (formula "26"))
                                                               (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "39"))
                                                               (rule "eqSymm" (formula "22"))
                                                               (rule "limit_Tree_blackBalanced" (formula "27") (term "1"))
                                                               (rule "commute_and_2" (formula "66") (term "0"))
                                                                (builtin "One Step Simplification" (formula "66"))
                                                               (rule "closeTrue" (formula "66"))
                                                            )
                                                            (branch "CUT: self.right = null FALSE"
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "77"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replace_known_right" (formula "73") (term "0,0,0,0,0") (ifseqformula "77"))
                                                                (builtin "One Step Simplification" (formula "73"))
                                                               (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "77"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "77"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "77"))
                                                                (builtin "One Step Simplification" (formula "69"))
                                                               (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "77"))
                                                                (builtin "One Step Simplification" (formula "63"))
                                                               (rule "replace_known_left" (formula "73") (term "0,1,0,0") (ifseqformula "63"))
                                                                (builtin "One Step Simplification" (formula "73"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "63"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "81") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "81") (term "0,0,0,1,1,1,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "73") (term "0") (ifseqformula "76"))
                                                                (builtin "One Step Simplification" (formula "73"))
                                                               (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "76"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "76"))
                                                                (builtin "One Step Simplification" (formula "63"))
                                                               (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "76"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "76"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "76"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "76"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "20"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "63"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "replace_known_right" (formula "80") (term "0,0,1,1,0") (ifseqformula "76"))
                                                                (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "76")) (ifInst ""  (formula "76")) (ifInst ""  (formula "76")))
                                                               (rule "applyEq" (formula "42") (term "1") (ifseqformula "44"))
                                                               (rule "applyEq" (formula "48") (term "1") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "31") (term "1") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "24") (term "1") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "48"))
                                                               (rule "applyEq" (formula "78") (term "0,1,0,0") (ifseqformula "24"))
                                                               (rule "applyEq" (formula "78") (term "0,1,1,1,0") (ifseqformula "24"))
                                                               (rule "commute_and_2" (formula "78") (term "0,0,1"))
                                                               (rule "commute_and_2" (formula "78") (term "0,1,0"))
                                                               (rule "commute_and_2" (formula "78") (term "0,0,0"))
                                                               (rule "commute_and" (formula "78") (term "1,1,0"))
                                                               (rule "shift_paren_and" (formula "78") (term "1,1"))
                                                               (rule "shift_paren_and" (formula "78") (term "1,0"))
                                                               (rule "commute_and" (formula "78") (term "1,0,0,0,0"))
                                                               (rule "equiv_right" (formula "78"))
                                                               (branch "Case '->'"
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "80"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "3"))
                                                                  (rule "replace_known_left" (formula "84") (term "1,0,0,0") (ifseqformula "2"))
                                                                   (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "1")) (ifInst ""  (formula "78")) (ifInst ""  (formula "4")) (ifInst ""  (formula "3")))
                                                                  (rule "false_right" (formula "84"))
                                                                  (rule "replace_known_left" (formula "83") (term "1,0") (ifseqformula "4"))
                                                                   (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "78")) (ifInst ""  (formula "3")))
                                                                  (rule "closeTrue" (formula "83"))
                                                               )
                                                               (branch "Case '<-'"
                                                                  (rule "orRight" (formula "79"))
                                                                  (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "80"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "3"))
                                                                  (rule "replace_known_left" (formula "83") (term "1") (ifseqformula "3"))
                                                                   (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "78")) (ifInst ""  (formula "4")))
                                                                  (rule "closeTrue" (formula "83"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Usage"
                                                          (builtin "One Step Simplification" (formula "79"))
                                                         (rule "impRight" (formula "79"))
                                                         (rule "emptyStatement" (formula "80") (term "1"))
                                                          (builtin "JML assert" (formula "80"))
                                                         (branch "Validity"
                                                             (builtin "One Step Simplification" (formula "80") (userinteraction))
                                                            (rule "Definition_axiom_for_validRBSubtreeExceptRedTop_in_Tree" (formula "80") (term "0") (ifseqformula "79") (userinteraction))
                                                            (rule "Definition_axiom_for_validRBSubtreeExceptRedTop_in_Tree" (formula "80") (term "1") (ifseqformula "79") (userinteraction))
                                                             (builtin "One Step Simplification" (formula "80"))
                                                            (rule "inEqSimp_gtToGeq" (formula "72"))
                                                            (rule "mul_literals" (formula "72") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "72") (term "0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "74") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1"))
                                                            (rule "inEqSimp_gtToGeq" (formula "76") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1"))
                                                            (rule "applyEq" (formula "80") (term "0,0,1,0") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "80") (term "0,1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "80") (term "0,0,0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "80"))
                                                            (rule "closeTrue" (formula "80"))
                                                         )
                                                         (branch "Usage"
                                                             (builtin "One Step Simplification" (formula "80"))
                                                            (rule "impRight" (formula "80"))
                                                            (rule "emptyStatement" (formula "81") (term "1"))
                                                             (builtin "JML assert" (formula "81"))
                                                            (branch "Validity"
                                                                (builtin "One Step Simplification" (formula "81") (userinteraction))
                                                               (rule "Definition_axiom_for_validRBSubtree_in_Tree" (formula "81") (term "0") (ifseqformula "80") (userinteraction))
                                                               (rule "Definition_axiom_for_validRBSubtree_in_Tree" (formula "81") (term "1") (ifseqformula "80") (userinteraction))
                                                                (builtin "One Step Simplification" (formula "81"))
                                                               (rule "inEqSimp_gtToGeq" (formula "77") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1"))
                                                               (rule "inEqSimp_gtToGeq" (formula "73"))
                                                               (rule "mul_literals" (formula "73") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "73") (term "0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "75") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "75") (term "1,0,0,1"))
                                                               (rule "applyEq" (formula "81") (term "0,1,0") (ifseqformula "5"))
                                                               (rule "applyEq" (formula "81") (term "0,0,0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "81"))
                                                               (rule "closeTrue" (formula "81"))
                                                            )
                                                            (branch "Usage"
                                                                (builtin "One Step Simplification" (formula "81"))
                                                               (rule "impRight" (formula "81"))
                                                               (rule "emptyStatement" (formula "82") (term "1"))
                                                                (builtin "JML assert" (formula "82"))
                                                               (branch "Validity"
                                                                   (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "replaceKnownSelect_taclet2_3" (formula "82") (term "0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "82") (term "0,0"))
                                                                  (rule "replaceKnownSelect_taclet2_3" (formula "82") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "82") (term "1,0,1"))
                                                                  (rule "orRight" (formula "82"))
                                                                  (rule "replace_known_right" (formula "75") (term "0,0,0,0,0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "notLeft" (formula "60"))
                                                                  (rule "replace_known_right" (formula "75") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "75"))
                                                                  (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "replace_known_left" (formula "74") (term "0,1,0,0") (ifseqformula "61"))
                                                                   (builtin "One Step Simplification" (formula "74"))
                                                                  (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "21"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "63"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "82"))
                                                                   (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "77") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "73"))
                                                                  (rule "mul_literals" (formula "73") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "73") (term "0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "75"))
                                                                  (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                                  (rule "applyEq" (formula "49") (term "1") (ifseqformula "51"))
                                                                  (rule "applyEq" (formula "37") (term "1") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "54") (term "1") (ifseqformula "55"))
                                                                  (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "55"))
                                                                  (rule "applyEq" (formula "30") (term "1") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "54"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "76") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "76") (term "1,1"))
                                                                  (rule "mul_literals" (formula "76") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "76") (term "1,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "72"))
                                                                  (rule "mul_literals" (formula "72") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "74"))
                                                                  (rule "polySimp_mulComm0" (formula "74") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "74") (term "1"))
                                                                  (rule "mul_literals" (formula "74") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "74") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "74") (term "1,1"))
                                                                  (rule "cut_direct" (formula "52") (term "0"))
                                                                  (branch "CUT: self.right = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "true_left" (formula "53"))
                                                                     (rule "replace_known_left" (formula "75") (term "0,0,0,0,0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "75"))
                                                                     (rule "replace_known_left" (formula "76") (term "0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "76"))
                                                                     (rule "true_left" (formula "76"))
                                                                     (rule "replace_known_left" (formula "64") (term "0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "true_left" (formula "64"))
                                                                     (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "51"))
                                                                      (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "true_left" (formula "28"))
                                                                     (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "50"))
                                                                      (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "49"))
                                                                      (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "true_left" (formula "62"))
                                                                     (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "49"))
                                                                      (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "true_left" (formula "33"))
                                                                     (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "48"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "true_left" (formula "60"))
                                                                     (rule "replace_known_left" (formula "64") (term "0") (ifseqformula "48"))
                                                                      (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "true_left" (formula "64"))
                                                                     (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "48"))
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "true_left" (formula "23"))
                                                                     (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "47"))
                                                                      (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "true_left" (formula "22"))
                                                                     (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "35"))
                                                                     (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "65") (term "0,0,1,0,0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "65") (term "0,1,0,0"))
                                                                     (rule "replace_known_right" (formula "65") (term "0,1,0,0") (ifseqformula "69"))
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "68") (term "0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "68"))
                                                                     (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "25"))
                                                                     (rule "applyEq" (formula "57") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "61") (term "1,1") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "46"))
                                                                     (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "65") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "65") (term "0,0,0") (ifseqformula "68"))
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "hideAuxiliaryEq" (formula "65"))
                                                                     (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "25"))
                                                                     (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "46"))
                                                                     (rule "eqSymm" (formula "35"))
                                                                     (rule "limit_Tree_footprint" (formula "45") (term "1"))
                                                                     (rule "limit_Tree_blackBalanced" (formula "30") (term "1"))
                                                                     (rule "limit_Tree_blackHeight_static_Tree" (formula "34") (term "1"))
                                                                     (rule "limit_Tree_blackBalanced" (formula "29") (term "1"))
                                                                     (rule "limit_Tree_blackHeight_static_Tree" (formula "36") (term "0"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "36"))
                                                                     (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                                                                     (rule "limit_Tree_treeSet" (formula "40") (term "1"))
                                                                     (rule "limit_Tree_treeSet" (formula "41") (term "1"))
                                                                     (rule "limit_java_lang_Object__inv_" (formula "21") (term "1"))
                                                                     (rule "limit_java_lang_Object__inv_" (formula "57") (term "1"))
                                                                     (rule "limit_Tree_noDoubleRed" (formula "24") (term "1"))
                                                                     (rule "limit_Tree_footprint" (formula "61") (term "1"))
                                                                     (rule "limit_Tree_noDoubleRed" (formula "25") (term "1"))
                                                                     (rule "ifthenelse_split" (formula "63") (term "0"))
                                                                     (branch "self.left = self TRUE"
                                                                        (rule "applyEqReverse" (formula "65") (term "1,1") (ifseqformula "64"))
                                                                        (rule "hideAuxiliaryEq" (formula "64"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "64"))
                                                                        (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                        (rule "applyEq" (formula "64") (term "1,1,0") (ifseqformula "63"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "64") (term "0"))
                                                                        (rule "add_literals" (formula "64") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "64") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "64") (term "0"))
                                                                        (rule "leq_literals" (formula "64"))
                                                                        (rule "closeFalse" (formula "64"))
                                                                     )
                                                                     (branch "self.left = self FALSE"
                                                                        (rule "applyEqReverse" (formula "64") (term "1,1") (ifseqformula "63"))
                                                                        (rule "hideAuxiliaryEq" (formula "63"))
                                                                        (rule "equiv_left" (formula "21"))
                                                                        (branch "Case 1"
                                                                           (rule "equiv_left" (formula "58"))
                                                                           (branch "Case 1"
                                                                               (builtin "Use Dependency Contract" (formula "40") (term "0") (ifInst ""  (formula "40") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "0,0,0,0,0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "71")) (ifInst ""  (formula "57")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "40")))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "38") (term "0") (ifInst ""  (formula "39") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "0,0,0,0,0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "71")) (ifInst ""  (formula "57")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                              (rule "disjointDefinition" (formula "68") (term "0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "disjointWithSingleton2" (formula "68") (term "0"))
                                                                              (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "38"))
                                                                              (rule "eqSymm" (formula "68") (term "1"))
                                                                              (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "39"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "18") (term "0") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "0,1,0,1,1,1,0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")) (ifInst ""  (formula "18")))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "17") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "0,1,0,1,1,1,0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")))
                                                                              (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "disjointWithSingleton2" (formula "68") (term "1,0"))
                                                                              (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "16"))
                                                                              (rule "eqSymm" (formula "68") (term "1"))
                                                                              (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "17"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "15") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "0,1,0,1,1,1,0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")) (ifInst ""  (formula "15")))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "13") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "0,1,0,1,1,1,0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")))
                                                                              (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "disjointWithSingleton2" (formula "68") (term "1,0"))
                                                                              (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "14"))
                                                                              (rule "eqSymm" (formula "68") (term "1"))
                                                                              (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "13"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "12") (term "0") (ifInst ""  (formula "12") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "12"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "11") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "68") (term "0,1,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "51")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                              (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "10"))
                                                                              (rule "eqSymm" (formula "68") (term "1"))
                                                                              (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "11"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "9") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "9")))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "7") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")))
                                                                              (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "disjointWithSingleton2" (formula "68") (term "1,0"))
                                                                              (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "8"))
                                                                              (rule "eqSymm" (formula "68") (term "1"))
                                                                              (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "6") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "68") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "6")))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "4") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "1,0,0,0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")))
                                                                              (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "5"))
                                                                              (rule "eqSymm" (formula "68") (term "1"))
                                                                              (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "4"))
                                                                               (builtin "One Step Simplification" (formula "68"))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "3")))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "2")))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "1") (term "0") (ifInst ""  (formula "1") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "1")))
                                                                              (rule "true_left" (formula "68"))
                                                                               (builtin "Use Dependency Contract" (formula "71") (term "0") (ifInst ""  (formula "71") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "68") (term "0,1,0,0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "57")) (ifInst ""  (formula "72")))
                                                                              (rule "notLeft" (formula "68"))
                                                                              (rule "disjointDefinition" (formula "68"))
                                                                              (rule "disjointWithSingleton2" (formula "68"))
                                                                              (rule "notRight" (formula "68"))
                                                                              (rule "elementOfSetMinus" (formula "1"))
                                                                              (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch "Case 2"
                                                                               (builtin "Use Dependency Contract" (formula "40") (term "0") (ifInst ""  (formula "40") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "40"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "71")) (ifInst ""  (formula "57")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "38") (term "0") (ifInst ""  (formula "39") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,0,1,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "57")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                              (rule "disjointDefinition" (formula "66") (term "0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66") (term "0"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "38"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "39"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "18") (term "0") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "47")) (ifInst ""  (formula "18")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "17") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "47")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "16"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "17"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "15") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "0,1,0,1,1,1,0,0") (ifseqformula "47"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "15")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "13") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "47")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "14"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "13"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "12") (term "0") (ifInst ""  (formula "12") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "51")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "12")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "11") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "51")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "10"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "11"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "9") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "9"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "7") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "8"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "6") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "6"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "4") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "4"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "5"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "3")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "2")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "1") (term "0") (ifInst ""  (formula "1") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "0,1,0,0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "1")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "71") (term "0") (ifInst ""  (formula "71") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1,0,0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "72")))
                                                                              (rule "notLeft" (formula "66"))
                                                                              (rule "disjointDefinition" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66"))
                                                                              (rule "notRight" (formula "66"))
                                                                              (rule "elementOfSetMinus" (formula "1"))
                                                                              (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "equiv_left" (formula "56"))
                                                                           (branch "Case 1"
                                                                               (builtin "Use Dependency Contract" (formula "38") (term "0") (ifInst ""  (formula "38") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "38"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "53")) (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "36") (term "0") (ifInst ""  (formula "37") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,0,1,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "53")) (ifInst ""  (formula "55")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                              (rule "disjointDefinition" (formula "66") (term "0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66") (term "0"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "36"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "37"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "18") (term "0") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "45")) (ifInst ""  (formula "18")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "17") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "45")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "16"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "17"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "15") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "0,1,0,1,1,1,0,0") (ifseqformula "45"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "15")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "13") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "45")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "14"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "13"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "12") (term "0") (ifInst ""  (formula "12") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "49")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "12")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "11") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "49")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "10"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "11"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "9") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "9"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "7") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "8"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "6") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "6"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "4") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "48"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")))
                                                                              (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "5"))
                                                                              (rule "eqSymm" (formula "66") (term "1"))
                                                                              (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "4"))
                                                                               (builtin "One Step Simplification" (formula "66"))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1,0,0,0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "3")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "1,0,0,0,0") (ifseqformula "49"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "2")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "1") (term "0") (ifInst ""  (formula "1") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "66") (term "0,1,0,0,0") (ifseqformula "48"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "1")))
                                                                              (rule "true_left" (formula "66"))
                                                                               (builtin "Use Dependency Contract" (formula "71") (term "0") (ifInst ""  (formula "71") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "53")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "55")) (ifInst ""  (formula "72")))
                                                                              (rule "notLeft" (formula "66"))
                                                                              (rule "disjointDefinition" (formula "66"))
                                                                              (rule "disjointWithSingleton2" (formula "66"))
                                                                              (rule "notRight" (formula "66"))
                                                                              (rule "elementOfSetMinus" (formula "1"))
                                                                              (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch "Case 2"
                                                                               (builtin "Use Dependency Contract" (formula "38") (term "0") (ifInst ""  (formula "38") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "64") (term "0,0,1,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "71")) (ifInst ""  (formula "53")) (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "38")))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "36") (term "0") (ifInst ""  (formula "37") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "64") (term "0,1,1,0,0,0") (ifseqformula "71"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "71")) (ifInst ""  (formula "53")) (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                              (rule "disjointDefinition" (formula "64") (term "0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "disjointWithSingleton2" (formula "64") (term "0"))
                                                                              (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "36"))
                                                                              (rule "eqSymm" (formula "64") (term "1"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "37"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "18") (term "0") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "64") (term "0,1,0,1,1,1,0,0") (ifseqformula "45"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "71")) (ifInst ""  (formula "18")))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "17") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "64") (term "0,1,0,1,1,1,0,0") (ifseqformula "45"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "71")))
                                                                              (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "disjointWithSingleton2" (formula "64") (term "1,0"))
                                                                              (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "17"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "16"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "15") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "64") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "71")) (ifInst ""  (formula "45")) (ifInst ""  (formula "15")))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "13") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "64") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "71")) (ifInst ""  (formula "45")))
                                                                              (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "disjointWithSingleton2" (formula "64") (term "1,0"))
                                                                              (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "14"))
                                                                              (rule "eqSymm" (formula "64") (term "1"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "13"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "12") (term "0") (ifInst ""  (formula "12") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "64") (term "0,0,1,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "12")))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "11") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "64") (term "0,1,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "49")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                              (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "10"))
                                                                              (rule "eqSymm" (formula "64") (term "1"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "11"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "9") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "64") (term "1,1,1,0,0,0,0") (ifseqformula "63"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "9")))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "7") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "64") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")))
                                                                              (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "disjointWithSingleton2" (formula "64") (term "1,0"))
                                                                              (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "8"))
                                                                              (rule "eqSymm" (formula "64") (term "1"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "7"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "6") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "6"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "4") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "64") (term "0,1,0,0,0,0") (ifseqformula "48"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")))
                                                                              (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "4"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "5"))
                                                                               (builtin "One Step Simplification" (formula "64"))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "3"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "2"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "1") (term "0") (ifInst ""  (formula "1") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "1"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")))
                                                                              (rule "true_left" (formula "64"))
                                                                               (builtin "Use Dependency Contract" (formula "71") (term "0") (ifInst ""  (formula "71") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "64") (term "0,1,0,0,0") (ifseqformula "48"))
                                                                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "71")) (ifInst ""  (formula "53")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "55")) (ifInst ""  (formula "72")))
                                                                              (rule "notLeft" (formula "64"))
                                                                              (rule "disjointDefinition" (formula "64"))
                                                                              (rule "disjointWithSingleton2" (formula "64"))
                                                                              (rule "notRight" (formula "64"))
                                                                              (rule "elementOfSetMinus" (formula "1"))
                                                                              (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "CUT: self.right = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "replace_known_right" (formula "75") (term "0,0,0,0,0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "75"))
                                                                     (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "66"))
                                                                     (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "replace_known_right" (formula "71") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "71"))
                                                                     (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "replace_known_right" (formula "76") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "76"))
                                                                     (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "79"))
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "replace_known_left" (formula "75") (term "0,1,0,0") (ifseqformula "65"))
                                                                      (builtin "One Step Simplification" (formula "75"))
                                                                     (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "23"))
                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "66"))
                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "52"))
                                                                     (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                                                                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "28"))
                                                                     (rule "applyEq" (formula "50") (term "1") (ifseqformula "51"))
                                                                     (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "51"))
                                                                     (rule "applyEq" (formula "43") (term "1") (ifseqformula "45"))
                                                                     (rule "ifthenelse_split" (formula "71") (term "0"))
                                                                     (branch "self.left = self TRUE"
                                                                        (rule "applyEqReverse" (formula "73") (term "1,1") (ifseqformula "72"))
                                                                        (rule "hideAuxiliaryEq" (formula "72"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "72"))
                                                                        (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                                        (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "71"))
                                                                        (rule "applyEq" (formula "19") (term "1") (ifseqformula "71"))
                                                                        (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "71"))
                                                                        (rule "applyEq" (formula "72") (term "1,1,0") (ifseqformula "71"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "72") (term "0"))
                                                                        (rule "add_literals" (formula "72") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "72") (term "1,0"))
                                                                        (rule "add_literals" (formula "72") (term "0"))
                                                                        (rule "leq_literals" (formula "72"))
                                                                        (rule "closeFalse" (formula "72"))
                                                                     )
                                                                     (branch "self.left = self FALSE"
                                                                        (rule "applyEqReverse" (formula "72") (term "1,1") (ifseqformula "71"))
                                                                        (rule "hideAuxiliaryEq" (formula "71"))
                                                                        (rule "ifthenelse_split" (formula "72") (term "0"))
                                                                        (branch "self.right = self TRUE"
                                                                           (rule "applyEqReverse" (formula "74") (term "1,1") (ifseqformula "73"))
                                                                           (rule "hideAuxiliaryEq" (formula "73"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "73"))
                                                                           (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                                           (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "72"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "73") (term "0"))
                                                                           (rule "add_literals" (formula "73") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "73") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "73") (term "0"))
                                                                           (rule "leq_literals" (formula "73"))
                                                                           (rule "closeFalse" (formula "73"))
                                                                        )
                                                                        (branch "self.right = self FALSE"
                                                                           (rule "applyEqReverse" (formula "73") (term "1,1") (ifseqformula "72"))
                                                                           (rule "hideAuxiliaryEq" (formula "72"))
                                                                            (builtin "Use Dependency Contract" (formula "42") (term "0") (ifInst ""  (formula "42") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,0,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "75") (term "0,1,1,0,0") (ifseqformula "81"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "81")) (ifInst ""  (formula "58")) (ifInst ""  (formula "81")) (ifInst ""  (formula "60")) (ifInst ""  (formula "81")) (ifInst ""  (formula "81")) (ifInst ""  (formula "42")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "40") (term "0") (ifInst ""  (formula "41") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,0,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "75") (term "0,1,1,0,0") (ifseqformula "81"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "81")) (ifInst ""  (formula "58")) (ifInst ""  (formula "81")) (ifInst ""  (formula "60")) (ifInst ""  (formula "81")) (ifInst ""  (formula "81")))
                                                                           (rule "disjointDefinition" (formula "75") (term "0,0"))
                                                                           (rule "measuredByCheckEmpty" (formula "75") (term "1,0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "disjointWithSingleton2" (formula "75") (term "0"))
                                                                           (rule "applyEq" (formula "75") (term "0,1") (ifseqformula "40"))
                                                                           (rule "eqSymm" (formula "75") (term "1"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "41"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "39") (term "0") (ifInst ""  (formula "39") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,0,0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "39"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "78")) (ifInst ""  (formula "63")) (ifInst ""  (formula "78")) (ifInst ""  (formula "64")) (ifInst ""  (formula "78")) (ifInst ""  (formula "78")) (ifInst ""  (formula "78")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "37") (term "0") (ifInst ""  (formula "38") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,0,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "75") (term "0,1,1,0,0") (ifseqformula "78"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "78")) (ifInst ""  (formula "63")) (ifInst ""  (formula "78")) (ifInst ""  (formula "64")) (ifInst ""  (formula "78")) (ifInst ""  (formula "78")))
                                                                           (rule "disjointDefinition" (formula "75") (term "0,0"))
                                                                           (rule "measuredByCheckEmpty" (formula "75") (term "1,0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "disjointWithSingleton2" (formula "75") (term "0"))
                                                                           (rule "applyEq" (formula "75") (term "0,1") (ifseqformula "37"))
                                                                           (rule "eqSymm" (formula "75") (term "1"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "38"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "18") (term "0") (ifInst ""  (formula "18") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "0,1,0,0,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "81")) (ifInst ""  (formula "78")) (ifInst ""  (formula "18")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "17") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "75") (term "0,1,0,1,1,1,0,0") (ifseqformula "78"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "81")))
                                                                           (rule "disjointDefinition" (formula "75") (term "1,0,0"))
                                                                           (rule "measuredByCheckEmpty" (formula "75") (term "1,0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "disjointWithSingleton2" (formula "75") (term "1,0"))
                                                                           (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "17"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "16"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "15") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "75") (term "0,1,0,1,1,1,0,0") (ifseqformula "78"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "81")) (ifInst ""  (formula "15")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "14") (term "0") (ifInst ""  (formula "13") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0,0"))
                                                                           (rule "replace_known_right" (formula "75") (term "0,0,0,0,0,0,0") (ifseqformula "80"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "81")) (ifInst ""  (formula "78")))
                                                                           (rule "disjointDefinition" (formula "75") (term "1,0,0"))
                                                                           (rule "measuredByCheckEmpty" (formula "75") (term "1,0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "disjointWithSingleton2" (formula "75") (term "1,0"))
                                                                           (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "13"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "14"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "12") (term "0") (ifInst ""  (formula "12") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,0,0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "12"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "11") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,0,0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "0,0,0,0,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")))
                                                                           (rule "disjointDefinition" (formula "75") (term "1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "measuredByCheckEmpty" (formula "75") (term "1,0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "applyEq" (formula "75") (term "0,1") (ifseqformula "10"))
                                                                           (rule "eqSymm" (formula "75") (term "1"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "11"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "9") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "1,0,0,0,0,0") (ifseqformula "54"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "9")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "8") (term "0") (ifInst ""  (formula "7") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "0,1,1,0,0,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")))
                                                                           (rule "disjointDefinition" (formula "75") (term "1,0,0"))
                                                                           (rule "measuredByCheckEmpty" (formula "75") (term "1,0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "disjointWithSingleton2" (formula "75") (term "1,0"))
                                                                           (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "7"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "8"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "6") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "0,1,0,0,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "6")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "5") (term "0") (ifInst ""  (formula "4") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "1,0,0,0,0,0") (ifseqformula "54"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")))
                                                                           (rule "disjointDefinition" (formula "75") (term "1,0,0"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "measuredByCheckEmpty" (formula "75") (term "1,0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "applyEq" (formula "75") (term "1,1") (ifseqformula "4"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "5"))
                                                                            (builtin "One Step Simplification" (formula "75"))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "3"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "2"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "1") (term "0") (ifInst ""  (formula "1") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "1") (ifseqformula "1"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "80")) (ifInst ""  (formula "54")) (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")))
                                                                           (rule "true_left" (formula "75"))
                                                                            (builtin "Use Dependency Contract" (formula "81") (term "0") (ifInst ""  (formula "81") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                           (rule "wellFormedAnon" (formula "75") (term "1,1,0,0,0"))
                                                                           (rule "replace_known_left" (formula "75") (term "0,1,0,0,0") (ifseqformula "53"))
                                                                            (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "81")) (ifInst ""  (formula "58")) (ifInst ""  (formula "53")) (ifInst ""  (formula "74")) (ifInst ""  (formula "60")) (ifInst ""  (formula "82")))
                                                                           (rule "notLeft" (formula "75"))
                                                                           (rule "disjointDefinition" (formula "75"))
                                                                           (rule "disjointWithSingleton2" (formula "75"))
                                                                           (rule "notRight" (formula "75"))
                                                                           (rule "elementOfSetMinus" (formula "1"))
                                                                           (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "60"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "Usage"
                                                                   (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "replaceKnownSelect_taclet2_3" (formula "82") (term "0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "82") (term "0,0,0"))
                                                                  (rule "replaceKnownSelect_taclet2_3" (formula "82") (term "1,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "82") (term "1,0,1,0"))
                                                                  (rule "impRight" (formula "82"))
                                                                  (rule "emptyStatement" (formula "83") (term "1"))
                                                                   (builtin "JML assert" (formula "83"))
                                                                  (branch "Validity"
                                                                     (rule "orRight" (formula "83"))
                                                                      (builtin "One Step Simplification" (formula "84"))
                                                                      (builtin "One Step Simplification" (formula "83"))
                                                                     (rule "replaceKnownSelect_taclet2_5" (formula "83") (term "0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "83") (term "0"))
                                                                     (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "1,0"))
                                                                     (rule "replace_known_right" (formula "78") (term "0,0,0,0,0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "69"))
                                                                     (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "68"))
                                                                     (rule "replace_known_left" (formula "78") (term "0,1,0,0") (ifseqformula "68"))
                                                                      (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "67"))
                                                                     (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "49"))
                                                                     (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "79"))
                                                                     (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "69"))
                                                                      (builtin "One Step Simplification" (formula "66"))
                                                                     (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "25"))
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "replace_known_right" (formula "74") (term "1,0") (ifseqformula "83"))
                                                                      (builtin "One Step Simplification" (formula "74"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "77") (term "1"))
                                                                     (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "75"))
                                                                     (rule "mul_literals" (formula "75") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "75") (term "0,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "79"))
                                                                     (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                                     (rule "applyEq" (formula "28") (term "1,0,1") (ifseqformula "54"))
                                                                     (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
                                                                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "31"))
                                                                     (rule "applyEq" (formula "47") (term "1") (ifseqformula "49"))
                                                                     (rule "applyEq" (formula "53") (term "1") (ifseqformula "54"))
                                                                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "54"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "1"))
                                                                     (rule "polySimp_mulComm0" (formula "76") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "76") (term "1,1"))
                                                                     (rule "mul_literals" (formula "76") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "76") (term "1,1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "74"))
                                                                     (rule "mul_literals" (formula "74") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "78"))
                                                                     (rule "polySimp_mulComm0" (formula "78") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "78") (term "1"))
                                                                     (rule "mul_literals" (formula "78") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "78") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "78") (term "1,1"))
                                                                     (rule "commuteIntersection" (formula "27") (term "0,1"))
                                                                     (rule "cut_direct" (formula "1") (term "0"))
                                                                     (branch "CUT: self.left = null TRUE"
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "replace_known_left" (formula "75") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "75"))
                                                                        (rule "replace_known_left" (formula "76") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "76"))
                                                                        (rule "true_left" (formula "76"))
                                                                        (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "true_left" (formula "33"))
                                                                        (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "61"))
                                                                        (rule "true_left" (formula "61"))
                                                                        (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "62"))
                                                                        (rule "true_left" (formula "62"))
                                                                        (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "true_left" (formula "22"))
                                                                        (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "58"))
                                                                        (rule "true_left" (formula "58"))
                                                                        (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "59"))
                                                                        (rule "true_left" (formula "59"))
                                                                        (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "true_left" (formula "37"))
                                                                        (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "true_left" (formula "21"))
                                                                        (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "true_left" (formula "25"))
                                                                        (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "46"))
                                                                        (rule "true_left" (formula "46"))
                                                                        (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "true_left" (formula "63"))
                                                                        (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "49"))
                                                                        (rule "true_left" (formula "49"))
                                                                        (rule "applyEq" (formula "63") (term "0,0,1,0,0") (ifseqformula "1"))
                                                                        (rule "eqSymm" (formula "63") (term "0,1,0,0"))
                                                                        (rule "replace_known_right" (formula "63") (term "0,1,0,0") (ifseqformula "68"))
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "63") (term "1,2,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "63") (term "0,0,0,0") (ifseqformula "1"))
                                                                        (rule "eqSymm" (formula "63") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "63") (term "0,0,0") (ifseqformula "68"))
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "hideAuxiliaryEq" (formula "63"))
                                                                        (rule "limit_Tree_blackHeight_static_Tree" (formula "39") (term "1"))
                                                                        (rule "limit_Tree_blackBalanced" (formula "33") (term "1"))
                                                                        (rule "limit_Tree_treeSet" (formula "45") (term "1"))
                                                                        (rule "limit_Tree_footprint" (formula "48") (term "1"))
                                                                        (rule "limit_Tree_blackBalanced" (formula "34") (term "1"))
                                                                        (rule "limit_Tree_treeSet" (formula "44") (term "1"))
                                                                        (rule "limit_java_lang_Object__inv_" (formula "20") (term "1"))
                                                                        (rule "limit_java_lang_Object__inv_" (formula "53") (term "1"))
                                                                        (rule "limit_Tree_noDoubleRed" (formula "29") (term "1"))
                                                                        (rule "limit_Tree_noDoubleRed" (formula "28") (term "1"))
                                                                        (rule "limit_Tree_footprint" (formula "60") (term "1"))
                                                                        (rule "limit_Tree_blackHeight_static_Tree" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "38") (term "0") (ifseqformula "40"))
                                                                        (rule "applyEq" (formula "39") (term "1") (ifseqformula "40"))
                                                                        (rule "ifthenelse_split" (formula "63") (term "0"))
                                                                        (branch "self.right = self TRUE"
                                                                           (rule "applyEqReverse" (formula "65") (term "1,1") (ifseqformula "64"))
                                                                           (rule "hideAuxiliaryEq" (formula "64"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "64"))
                                                                           (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                           (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "63"))
                                                                           (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "63"))
                                                                           (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "62"))
                                                                           (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "62"))
                                                                           (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "62"))
                                                                           (rule "eqSymm" (formula "26"))
                                                                           (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "62"))
                                                                           (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "62"))
                                                                           (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "62"))
                                                                           (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "62"))
                                                                           (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "62"))
                                                                           (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "62"))
                                                                           (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "62"))
                                                                           (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "61"))
                                                                           (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "61"))
                                                                           (rule "applyEq" (formula "55") (term "1") (ifseqformula "61"))
                                                                           (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "61"))
                                                                           (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "61"))
                                                                           (rule "applyEq" (formula "52") (term "1") (ifseqformula "60"))
                                                                           (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "60"))
                                                                           (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "59"))
                                                                           (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "58"))
                                                                           (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "57"))
                                                                           (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "56"))
                                                                           (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "56"))
                                                                           (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "56"))
                                                                           (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "56"))
                                                                           (rule "applyEq" (formula "21") (term "1") (ifseqformula "55"))
                                                                           (rule "applyEq" (formula "60") (term "0") (ifseqformula "55"))
                                                                           (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "55"))
                                                                           (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "54"))
                                                                           (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "53"))
                                                                           (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "52"))
                                                                           (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "52"))
                                                                           (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "51"))
                                                                           (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "50"))
                                                                           (rule "close" (formula "55") (ifseqformula "3"))
                                                                        )
                                                                        (branch "self.right = self FALSE"
                                                                           (rule "applyEqReverse" (formula "64") (term "1,1") (ifseqformula "63"))
                                                                           (rule "hideAuxiliaryEq" (formula "63"))
                                                                           (rule "equiv_left" (formula "20"))
                                                                           (branch "Case 1"
                                                                              (rule "equiv_left" (formula "54"))
                                                                              (branch "Case 1"
                                                                                  (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "0,1,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "2")))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "38") (term "0") (ifInst ""  (formula "38") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "0,0,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")) (ifInst ""  (formula "58")) (ifInst ""  (formula "71")) (ifInst ""  (formula "59")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "38")))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "36") (term "0") (ifInst ""  (formula "37") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "0,0,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")) (ifInst ""  (formula "58")) (ifInst ""  (formula "71")) (ifInst ""  (formula "59")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "68") (term "0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "disjointWithSingleton2" (formula "68") (term "0"))
                                                                                 (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "36"))
                                                                                 (rule "eqSymm" (formula "68") (term "1"))
                                                                                 (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "37"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "19") (term "0") (ifInst ""  (formula "19") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "19"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "1")) (ifInst ""  (formula "71")))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "17") (term "0") (ifInst ""  (formula "18") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "disjointWithSingleton2" (formula "68") (term "1,0"))
                                                                                 (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "18"))
                                                                                 (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "17"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "16"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "1")) (ifInst ""  (formula "71")))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "14") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "disjointWithSingleton2" (formula "68") (term "1,0"))
                                                                                 (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "14"))
                                                                                 (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "15"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "13") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "68") (term "0,0,1,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "13")))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "11") (term "0") (ifInst ""  (formula "12") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "68") (term "0,0,1,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                                 (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "11"))
                                                                                 (rule "eqSymm" (formula "68") (term "1"))
                                                                                 (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "12"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "68") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "10")))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "8") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")))
                                                                                 (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "disjointWithSingleton2" (formula "68") (term "1,0"))
                                                                                 (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "8"))
                                                                                 (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "9"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "7") (term "0") (ifInst ""  (formula "7") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "68") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "7")))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "5") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")))
                                                                                 (rule "disjointDefinition" (formula "68") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "measuredByCheckEmpty" (formula "68") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "6"))
                                                                                 (rule "eqSymm" (formula "68") (term "1"))
                                                                                 (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "5"))
                                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "4") (term "0") (ifInst ""  (formula "4") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "0,1,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "4")))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "68") (term "0,1,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "3")))
                                                                                 (rule "true_left" (formula "68"))
                                                                                  (builtin "Use Dependency Contract" (formula "71") (term "0") (ifInst ""  (formula "71") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "68") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "68") (term "0,0,0,0,0,0") (ifseqformula "71"))
                                                                                  (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "58")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "67")) (ifInst ""  (formula "59")) (ifInst ""  (formula "72")))
                                                                                 (rule "notLeft" (formula "68"))
                                                                                 (rule "disjointDefinition" (formula "68"))
                                                                                 (rule "disjointWithSingleton2" (formula "68"))
                                                                                 (rule "notRight" (formula "68"))
                                                                                 (rule "elementOfSetMinus" (formula "1"))
                                                                                 (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "58"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "Case 2"
                                                                                  (builtin "Use Dependency Contract" (formula "38") (term "0") (ifInst ""  (formula "38") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,0,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "56")) (ifInst ""  (formula "71")) (ifInst ""  (formula "57")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "38")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "36") (term "0") (ifInst ""  (formula "37") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,0,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "56")) (ifInst ""  (formula "71")) (ifInst ""  (formula "57")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66") (term "0"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "36"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "37"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "2")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "19") (term "0") (ifInst ""  (formula "19") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "1")) (ifInst ""  (formula "71")) (ifInst ""  (formula "19")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "17") (term "0") (ifInst ""  (formula "18") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "17"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "18"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "1")) (ifInst ""  (formula "71")) (ifInst ""  (formula "16")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "14") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "15"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "14"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "13") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "13"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "11") (term "0") (ifInst ""  (formula "12") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "66") (term "0,1,1,0,0,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "11"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "12"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "10")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "8") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "9"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "8"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "7") (term "0") (ifInst ""  (formula "7") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "5") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "53"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "6"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "5"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "4") (term "0") (ifInst ""  (formula "4") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "4")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1,0,0,0,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "3")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "71") (term "0") (ifInst ""  (formula "71") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0") (ifseqformula "50"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "71")) (ifInst ""  (formula "56")) (ifInst ""  (formula "50")) (ifInst ""  (formula "65")) (ifInst ""  (formula "57")) (ifInst ""  (formula "72")))
                                                                                 (rule "notLeft" (formula "66"))
                                                                                 (rule "disjointDefinition" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66"))
                                                                                 (rule "notRight" (formula "66"))
                                                                                 (rule "elementOfSetMinus" (formula "1"))
                                                                                 (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "56"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                           )
                                                                           (branch "Case 2"
                                                                              (rule "equiv_left" (formula "52"))
                                                                              (branch "Case 1"
                                                                                  (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "2")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "36") (term "0") (ifInst ""  (formula "36") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,0,0,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "56")) (ifInst ""  (formula "71")) (ifInst ""  (formula "57")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "36")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "34") (term "0") (ifInst ""  (formula "35") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,0,0,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")) (ifInst ""  (formula "56")) (ifInst ""  (formula "71")) (ifInst ""  (formula "57")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66") (term "0"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "34"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "35"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "19") (term "0") (ifInst ""  (formula "19") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "1")) (ifInst ""  (formula "71")) (ifInst ""  (formula "19")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "17") (term "0") (ifInst ""  (formula "18") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "17"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "18"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "1")) (ifInst ""  (formula "71")) (ifInst ""  (formula "16")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "14") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "15"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "14"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "13") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "13"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "11") (term "0") (ifInst ""  (formula "12") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "66") (term "0,1,1,0,0,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "11"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "12"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1,0,0,0,0,0") (ifseqformula "49"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "10")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "8") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66") (term "1,0"))
                                                                                 (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "8"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "9"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "7") (term "0") (ifInst ""  (formula "7") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "5") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")))
                                                                                 (rule "disjointDefinition" (formula "66") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "measuredByCheckEmpty" (formula "66") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "6"))
                                                                                 (rule "eqSymm" (formula "66") (term "1"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "5"))
                                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "4") (term "0") (ifInst ""  (formula "4") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1,0,0,0,0") (ifseqformula "49"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "4")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "1,0,0,0,0") (ifseqformula "49"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "3")))
                                                                                 (rule "true_left" (formula "66"))
                                                                                  (builtin "Use Dependency Contract" (formula "71") (term "0") (ifInst ""  (formula "71") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "66") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "66") (term "0,1,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "71")) (ifInst ""  (formula "56")) (ifInst ""  (formula "48")) (ifInst ""  (formula "65")) (ifInst ""  (formula "57")) (ifInst ""  (formula "72")))
                                                                                 (rule "notLeft" (formula "66"))
                                                                                 (rule "disjointDefinition" (formula "66"))
                                                                                 (rule "disjointWithSingleton2" (formula "66"))
                                                                                 (rule "notRight" (formula "66"))
                                                                                 (rule "elementOfSetMinus" (formula "1"))
                                                                                 (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "56"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "Case 2"
                                                                                  (builtin "Use Dependency Contract" (formula "36") (term "0") (ifInst ""  (formula "36") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "64") (term "0,0,1,0") (ifseqformula "71"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "71")) (ifInst ""  (formula "54")) (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "36")))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "34") (term "0") (ifInst ""  (formula "35") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "0,0,0,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "71")) (ifInst ""  (formula "54")) (ifInst ""  (formula "71")) (ifInst ""  (formula "55")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "64") (term "0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "disjointWithSingleton2" (formula "64") (term "0"))
                                                                                 (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "34"))
                                                                                 (rule "eqSymm" (formula "64") (term "1"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "35"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1,0,0,0,0") (ifseqformula "49"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "2")))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "19") (term "0") (ifInst ""  (formula "19") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "64") (term "0,1,0,1,1,1,0,0") (ifseqformula "71"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "1")) (ifInst ""  (formula "19")))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "17") (term "0") (ifInst ""  (formula "18") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "0,1,0,0,1,1,1,0,0") (ifseqformula "1"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "disjointWithSingleton2" (formula "64") (term "1,0"))
                                                                                 (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "18"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "17"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "16"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "1")) (ifInst ""  (formula "71")))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "14") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "0,1,0,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "1")) (ifInst ""  (formula "71")))
                                                                                 (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "disjointWithSingleton2" (formula "64") (term "1,0"))
                                                                                 (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "15"))
                                                                                 (rule "eqSymm" (formula "64") (term "1"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "14"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "13") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "64") (term "0,0,1,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "13")))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "11") (term "0") (ifInst ""  (formula "12") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,0,0,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "64") (term "0,1,0,0,0,0") (ifseqformula "70"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "49")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                                                                 (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "11"))
                                                                                 (rule "eqSymm" (formula "64") (term "1"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "12"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "0,1,0,0,0,0") (ifseqformula "48"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "10")))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "8") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1,0,0,0,0,0") (ifseqformula "49"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")))
                                                                                 (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                                 (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "disjointWithSingleton2" (formula "64") (term "1,0"))
                                                                                 (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "9"))
                                                                                 (rule "eqSymm" (formula "64") (term "1"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "8"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "7") (term "0") (ifInst ""  (formula "7") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1,0,0,0,0,0") (ifseqformula "49"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "7")))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "5") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1,1,1,0,0,0,0") (ifseqformula "63"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                                                                 (rule "disjointDefinition" (formula "64") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "measuredByCheckEmpty" (formula "64") (term "1,0") (ifseqformula "51"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "5"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "6"))
                                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "4") (term "0") (ifInst ""  (formula "4") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1,0,0,0,0") (ifseqformula "49"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "4")))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_left" (formula "64") (term "1,0,0,0,0") (ifseqformula "49"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "70")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "3")))
                                                                                 (rule "true_left" (formula "64"))
                                                                                  (builtin "Use Dependency Contract" (formula "71") (term "0") (ifInst ""  (formula "71") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                                 (rule "wellFormedAnon" (formula "64") (term "1,1,0,0,0"))
                                                                                 (rule "replace_known_right" (formula "64") (term "0,0,0,0,0,0") (ifseqformula "71"))
                                                                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "54")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "63")) (ifInst ""  (formula "55")) (ifInst ""  (formula "72")))
                                                                                 (rule "notLeft" (formula "64"))
                                                                                 (rule "disjointDefinition" (formula "64"))
                                                                                 (rule "disjointWithSingleton2" (formula "64"))
                                                                                 (rule "notRight" (formula "64"))
                                                                                 (rule "elementOfSetMinus" (formula "1"))
                                                                                 (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "54"))
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "CUT: self.left = null FALSE"
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "replace_known_right" (formula "75") (term "0,0,0,0,0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "75"))
                                                                        (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "39"))
                                                                        (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "55"))
                                                                        (rule "replace_known_right" (formula "76") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "76"))
                                                                        (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "27"))
                                                                        (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "60"))
                                                                        (rule "notLeft" (formula "60"))
                                                                        (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "replace_known_right" (formula "63") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "replace_known_right" (formula "72") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "72"))
                                                                        (rule "replace_known_right" (formula "61") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "61"))
                                                                        (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "81"))
                                                                         (builtin "One Step Simplification" (formula "51"))
                                                                        (rule "replace_known_left" (formula "74") (term "0,1,0,0") (ifseqformula "61"))
                                                                         (builtin "One Step Simplification" (formula "74"))
                                                                        (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "63"))
                                                                         (builtin "One Step Simplification" (formula "60"))
                                                                        (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "22"))
                                                                         (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "55"))
                                                                        (rule "applyEq" (formula "31") (term "1") (ifseqformula "33"))
                                                                        (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "55"))
                                                                        (rule "applyEq" (formula "53") (term "1") (ifseqformula "54"))
                                                                        (rule "applyEq" (formula "48") (term "1") (ifseqformula "50"))
                                                                        (rule "applyEq" (formula "36") (term "1") (ifseqformula "38"))
                                                                        (rule "commuteIntersection" (formula "26") (term "0"))
                                                                        (rule "ifthenelse_split" (formula "74") (term "0"))
                                                                        (branch "self.right = self TRUE"
                                                                           (rule "applyEqReverse" (formula "76") (term "1,1") (ifseqformula "75"))
                                                                           (rule "hideAuxiliaryEq" (formula "75"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "75"))
                                                                           (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                                           (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "65") (term "1") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "23") (term "1") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "74"))
                                                                           (rule "applyEq" (formula "78") (term "0") (ifseqformula "74"))
                                                                           (rule "eqSymm" (formula "78"))
                                                                           (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "78"))
                                                                            (builtin "One Step Simplification" (formula "72"))
                                                                           (rule "applyEqReverse" (formula "73") (term "1,1") (ifseqformula "72"))
                                                                           (rule "hideAuxiliaryEq" (formula "72"))
                                                                           (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "73"))
                                                                           (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "72"))
                                                                           (rule "applyEq" (formula "80") (term "1,0") (ifseqformula "72"))
                                                                           (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "72"))
                                                                           (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "71"))
                                                                           (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "71"))
                                                                           (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "70"))
                                                                           (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "69"))
                                                                           (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "68"))
                                                                           (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "68"))
                                                                           (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "67"))
                                                                           (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "67"))
                                                                           (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "66"))
                                                                           (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "66"))
                                                                           (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "66"))
                                                                           (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "65"))
                                                                           (rule "applyEq" (formula "72") (term "1,1") (ifseqformula "64"))
                                                                           (rule "close" (formula "72") (ifseqformula "3"))
                                                                        )
                                                                        (branch "self.right = self FALSE"
                                                                           (rule "applyEqReverse" (formula "75") (term "1,1") (ifseqformula "74"))
                                                                           (rule "hideAuxiliaryEq" (formula "74"))
                                                                           (rule "ifthenelse_split" (formula "72") (term "0"))
                                                                           (branch "self.left = self TRUE"
                                                                              (rule "applyEqReverse" (formula "74") (term "1,1") (ifseqformula "73"))
                                                                              (rule "hideAuxiliaryEq" (formula "73"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "73"))
                                                                              (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                                              (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "72"))
                                                                              (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "72"))
                                                                              (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "72"))
                                                                              (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "72"))
                                                                              (rule "applyEq" (formula "58") (term "1") (ifseqformula "72"))
                                                                              (rule "applyEq" (formula "73") (term "1,1,0") (ifseqformula "72"))
                                                                              (rule "polySimp_pullOutFactor2b" (formula "73") (term "0"))
                                                                              (rule "add_literals" (formula "73") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "73") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "73") (term "0"))
                                                                              (rule "leq_literals" (formula "73"))
                                                                              (rule "closeFalse" (formula "73"))
                                                                           )
                                                                           (branch "self.left = self FALSE"
                                                                              (rule "applyEqReverse" (formula "73") (term "1,1") (ifseqformula "72"))
                                                                              (rule "hideAuxiliaryEq" (formula "72"))
                                                                               (builtin "Use Dependency Contract" (formula "2") (term "0") (ifInst ""  (formula "2") (term "1")) (contract "Tree[Tree::validRBSubtree()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "0,1,0,0,0") (ifseqformula "54"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "55")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "2")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "43") (term "0") (ifInst ""  (formula "43") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,0,1,0,0,0") (ifseqformula "61"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "80")) (ifInst ""  (formula "59")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "43")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "41") (term "0") (ifInst ""  (formula "42") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "76") (term "0,1,0,0,0,0") (ifseqformula "80"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "59")) (ifInst ""  (formula "80")) (ifInst ""  (formula "61")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "80")))
                                                                              (rule "disjointDefinition" (formula "76") (term "0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "76") (term "1,0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "disjointWithSingleton2" (formula "76") (term "0"))
                                                                              (rule "applyEq" (formula "76") (term "0,1") (ifseqformula "41"))
                                                                              (rule "eqSymm" (formula "76") (term "1"))
                                                                              (rule "replace_known_left" (formula "76") (term "1") (ifseqformula "42"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "40") (term "0") (ifInst ""  (formula "40") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,0,1,0,0,0") (ifseqformula "65"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "82")) (ifInst ""  (formula "64")) (ifInst ""  (formula "82")) (ifInst ""  (formula "82")) (ifInst ""  (formula "82")) (ifInst ""  (formula "82")) (ifInst ""  (formula "40")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "38") (term "0") (ifInst ""  (formula "39") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "76") (term "0,1,0,0,0,0") (ifseqformula "82"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "64")) (ifInst ""  (formula "82")) (ifInst ""  (formula "65")) (ifInst ""  (formula "82")) (ifInst ""  (formula "82")) (ifInst ""  (formula "82")))
                                                                              (rule "disjointDefinition" (formula "76") (term "0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "76") (term "1,0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "disjointWithSingleton2" (formula "76") (term "0"))
                                                                              (rule "applyEq" (formula "76") (term "0,1") (ifseqformula "38"))
                                                                              (rule "eqSymm" (formula "76") (term "1"))
                                                                              (rule "replace_known_left" (formula "76") (term "1") (ifseqformula "39"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "19") (term "0") (ifInst ""  (formula "19") (term "1")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "0,1,0,0,0,0") (ifseqformula "54"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "55")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "80")) (ifInst ""  (formula "82")) (ifInst ""  (formula "19")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "17") (term "0") (ifInst ""  (formula "18") (term "0")) (contract "Tree[Tree::footprint()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,0,0,0,0,0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "80")) (ifInst ""  (formula "82")))
                                                                              (rule "disjointDefinition" (formula "76") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "76") (term "1,0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "disjointWithSingleton2" (formula "76") (term "1,0"))
                                                                              (rule "applyEq" (formula "76") (term "1,1") (ifseqformula "18"))
                                                                              (rule "replace_known_left" (formula "76") (term "1") (ifseqformula "17"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "16") (term "0") (ifInst ""  (formula "16") (term "1")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,0,0,0,0,0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "80")) (ifInst ""  (formula "82")) (ifInst ""  (formula "16")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "15") (term "0") (ifInst ""  (formula "14") (term "0")) (contract "Tree[Tree::treeSet()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,0,0,0,0,0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "80")) (ifInst ""  (formula "82")))
                                                                              (rule "disjointDefinition" (formula "76") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "76") (term "1,0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "disjointWithSingleton2" (formula "76") (term "1,0"))
                                                                              (rule "applyEq" (formula "76") (term "0,1") (ifseqformula "15"))
                                                                              (rule "eqSymm" (formula "76") (term "1"))
                                                                              (rule "replace_known_left" (formula "76") (term "1") (ifseqformula "14"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "13") (term "0") (ifInst ""  (formula "13") (term "1")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "76") (term "0,0,1,0,0,0") (ifseqformula "81"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "81")) (ifInst ""  (formula "55")) (ifInst ""  (formula "81")) (ifInst ""  (formula "81")) (ifInst ""  (formula "81")) (ifInst ""  (formula "13")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "11") (term "0") (ifInst ""  (formula "12") (term "0")) (contract "Tree[Tree::blackHeight(Tree)].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,0,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "0,0,0,0,0,0") (ifseqformula "54"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "81")) (ifInst ""  (formula "55")) (ifInst ""  (formula "81")) (ifInst ""  (formula "81")) (ifInst ""  (formula "81")) (ifInst ""  (formula "81")))
                                                                              (rule "disjointDefinition" (formula "76") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "measuredByCheckEmpty" (formula "76") (term "1,0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "applyEq" (formula "76") (term "0,1") (ifseqformula "11"))
                                                                              (rule "eqSymm" (formula "76") (term "1"))
                                                                              (rule "replace_known_left" (formula "76") (term "1") (ifseqformula "12"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "10") (term "0") (ifInst ""  (formula "10") (term "1")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,0,0,0,0,0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "10")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "9") (term "0") (ifInst ""  (formula "8") (term "0")) (contract "Tree[Tree::blackBalanced()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_right" (formula "76") (term "0,0,0,0,0,0,0") (ifseqformula "81"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")))
                                                                              (rule "disjointDefinition" (formula "76") (term "1,0,0"))
                                                                              (rule "measuredByCheckEmpty" (formula "76") (term "1,0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "disjointWithSingleton2" (formula "76") (term "1,0"))
                                                                              (rule "applyEq" (formula "76") (term "1,1") (ifseqformula "8"))
                                                                              (rule "replace_known_left" (formula "76") (term "1") (ifseqformula "9"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "7") (term "0") (ifInst ""  (formula "7") (term "1")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "0,1,1,0,0,0,0") (ifseqformula "54"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "55")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "7")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "6") (term "0") (ifInst ""  (formula "5") (term "0")) (contract "Tree[Tree::noDoubleRed()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,1,1,0,0,0,0") (ifseqformula "75"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "55")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                                                              (rule "disjointDefinition" (formula "76") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "measuredByCheckEmpty" (formula "76") (term "1,0") (ifseqformula "57"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "applyEq" (formula "76") (term "0,1") (ifseqformula "6"))
                                                                              (rule "eqSymm" (formula "76") (term "1"))
                                                                              (rule "replace_known_left" (formula "76") (term "1") (ifseqformula "5"))
                                                                               (builtin "One Step Simplification" (formula "76"))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "4") (term "0") (ifInst ""  (formula "4") (term "1")) (contract "Tree[Tree::doubleRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,1,1,0,0,0") (ifseqformula "75"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "55")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "4")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "3") (term "0") (ifInst ""  (formula "3") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,0,0,0,0") (ifseqformula "55"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "81")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "3")))
                                                                              (rule "true_left" (formula "76"))
                                                                               (builtin "Use Dependency Contract" (formula "82") (term "0") (ifInst ""  (formula "82") (term "1")) (contract "Tree[Tree::validRBSubtreeExceptRedTop()].JML accessible clause.0"))
                                                                              (rule "wellFormedAnon" (formula "76") (term "1,1,0,0,0"))
                                                                              (rule "replace_known_left" (formula "76") (term "1,0,0,0,0") (ifseqformula "64"))
                                                                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "82")) (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "75")) (ifInst ""  (formula "65")) (ifInst ""  (formula "83")))
                                                                              (rule "notLeft" (formula "76"))
                                                                              (rule "disjointDefinition" (formula "76"))
                                                                              (rule "disjointWithSingleton2" (formula "76"))
                                                                              (rule "notRight" (formula "76"))
                                                                              (rule "elementOfSetMinus" (formula "1"))
                                                                              (rule "disjointAllFields" (formula "1") (term "0") (ifseqformula "64"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "Usage"
                                                                      (builtin "One Step Simplification" (formula "83"))
                                                                     (rule "replaceKnownSelect_taclet2_5" (formula "83") (term "0,0,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "83") (term "0,0,0"))
                                                                     (rule "replaceKnownSelect_taclet2_5" (formula "83") (term "1,0,1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "83") (term "1,0,1,0"))
                                                                     (rule "impRight" (formula "83"))
                                                                     (rule "emptyStatement" (formula "84") (term "1"))
                                                                     (rule "methodCallEmpty" (formula "84") (term "1"))
                                                                     (rule "tryEmpty" (formula "84") (term "1"))
                                                                     (rule "emptyModality" (formula "84") (term "1"))
                                                                     (rule "andRight" (formula "84"))
                                                                     (branch "Case 1"
                                                                        (rule "andRight" (formula "84"))
                                                                        (branch "Case 1"
                                                                           (rule "andRight" (formula "84"))
                                                                           (branch "Case 1"
                                                                               (builtin "One Step Simplification" (formula "84"))
                                                                              (rule "replaceKnownSelect_taclet2_0" (formula "84") (term "0"))
                                                                              (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "84") (term "0"))
                                                                              (rule "close" (formula "84") (ifseqformula "76"))
                                                                           )
                                                                           (branch "Case 2"
                                                                              (rule "andRight" (formula "84"))
                                                                              (branch "Case 1"
                                                                                 (rule "orRight" (formula "84"))
                                                                                  (builtin "One Step Simplification" (formula "85"))
                                                                                  (builtin "One Step Simplification" (formula "84"))
                                                                                 (rule "replaceKnownSelect_taclet2_0" (formula "85") (term "0"))
                                                                                 (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "85") (term "0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "0"))
                                                                                 (rule "replaceKnownSelect_taclet2_3" (formula "85") (term "1,1"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "85") (term "1,1"))
                                                                                 (rule "replaceKnownSelect_taclet2_7" (formula "85") (term "1"))
                                                                                 (rule "replace_known_right" (formula "77") (term "0,0,0,0,0") (ifseqformula "84"))
                                                                                  (builtin "One Step Simplification" (formula "77"))
                                                                                 (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "84"))
                                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                                 (rule "replace_known_right" (formula "78") (term "1") (ifseqformula "85"))
                                                                                  (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "84")))
                                                                                 (rule "closeFalse" (formula "78"))
                                                                              )
                                                                              (branch "Case 2"
                                                                                 (rule "andRight" (formula "84"))
                                                                                 (branch "Case 1"
                                                                                    (rule "orRight" (formula "84"))
                                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                                     (builtin "One Step Simplification" (formula "84"))
                                                                                    (rule "replaceKnownSelect_taclet2_0" (formula "85") (term "0"))
                                                                                    (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "0"))
                                                                                    (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "85") (term "0"))
                                                                                    (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "0"))
                                                                                    (rule "replaceKnownSelect_taclet2_5" (formula "85") (term "1,1"))
                                                                                    (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "85") (term "1,1"))
                                                                                    (rule "replace_known_right" (formula "79") (term "0,0,0,0,0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "79"))
                                                                                    (rule "replace_known_right" (formula "80") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "80"))
                                                                                    (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                                    (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "50"))
                                                                                    (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "replace_known_right" (formula "70") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                                    (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                                    (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                                    (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "69"))
                                                                                    (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                                    (rule "replace_known_left" (formula "79") (term "0,1,0,0") (ifseqformula "69"))
                                                                                     (builtin "One Step Simplification" (formula "79"))
                                                                                    (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "26"))
                                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                                    (rule "replace_known_left" (formula "67") (term "1") (ifseqformula "70"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "replace_known_right" (formula "75") (term "1,0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "75"))
                                                                                    (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "84"))
                                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "inEqSimp_gtRight" (formula "85"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "77"))
                                                                                    (rule "mul_literals" (formula "77") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "77") (term "0,0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "79") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "81"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                                                                                    (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "56"))
                                                                                    (rule "applyEq" (formula "29") (term "1,0,1") (ifseqformula "55"))
                                                                                    (rule "applyEq" (formula "48") (term "1") (ifseqformula "50"))
                                                                                    (rule "applyEq" (formula "54") (term "1") (ifseqformula "55"))
                                                                                    (rule "applyEq" (formula "30") (term "1") (ifseqformula "32"))
                                                                                    (rule "applyEq" (formula "37") (term "1") (ifseqformula "38"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                                                                    (rule "mul_literals" (formula "76") (term "1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "78") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "78") (term "1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1"))
                                                                                    (rule "mul_literals" (formula "78") (term "0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "78") (term "1,1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "80"))
                                                                                    (rule "polySimp_mulComm0" (formula "80") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "80") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "80") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "80") (term "1,1"))
                                                                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=Tree_heightVariant_3"))
                                                                                    (rule "simplifySelectOfAnon" (formula "1"))
                                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")) (ifInst ""  (formula "70")))
                                                                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "2"))
                                                                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "80"))
                                                                                    (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
                                                                                    (rule "hideAuxiliaryEq" (formula "1"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "80"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0"))
                                                                                    (rule "leq_literals" (formula "1"))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                                 (branch "Case 2"
                                                                                    (rule "andRight" (formula "84"))
                                                                                    (branch "Case 1"
                                                                                        (builtin "One Step Simplification" (formula "84") (userinteraction))
                                                                                       (rule "Class_invariant_axiom_for_Tree" (formula "84") (inst "k=k") (inst "k_0=k_0") (ifseqformula "83") (userinteraction))
                                                                                        (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                                                                                       (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "0,0,0,1"))
                                                                                       (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "0,1,0,1"))
                                                                                       (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "1,0,1,1"))
                                                                                       (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "1,1,1,1"))
                                                                                       (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "0,0,1,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "0,0,0,1"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "0,1,0,1"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "1,0,1,1"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "1,1,1,1"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "0,0,1,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_0" (formula "84") (term "1,1,0,0,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "0,0,1,0,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "1,1,1,1,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_2" (formula "84") (term "0,0,0,1,1,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "0,1,0,0,0,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "1,1,1,1,0,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_0" (formula "84") (term "1,0,0,1,1,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "84") (term "1,1,0,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "0,0,1,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "1,1,1,1,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "1,1,1,0,1,1,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "0,1,0,0,0,0,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_0" (formula "84") (term "1,0,0,1,1,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "0,1,0,0,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "1,1,1,1,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "84") (term "1,0,0,1,1,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "1,0,0,0,1,1,0,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "0,0,0,0,0,0,0,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "1,1,1,0,1,1,0,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "1,1,1,0,1,1,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "0,1,0,0,0,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "84") (term "1,0,0,1,1,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "1,0,0,0,1,1,0,0"))
                                                                                       (rule "replaceKnownSelect_taclet2_7" (formula "84") (term "0,0,0,1,1,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "0,0,0,0,0,0,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "1,1,1,0,1,1,0,0"))
                                                                                       (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "eqSymm" (formula "84") (term "0,0,0,0,0,0,0"))
                                                                                       (rule "disjointDefinition" (formula "84") (term "1,1"))
                                                                                       (rule "replace_known_left" (formula "84") (term "1") (ifseqformula "29"))
                                                                                        (builtin "One Step Simplification" (formula "84"))
                                                                                       (rule "inEqSimp_gtToGeq" (formula "78") (term "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1"))
                                                                                       (rule "inEqSimp_gtToGeq" (formula "80") (term "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1"))
                                                                                       (rule "inEqSimp_gtToGeq" (formula "76"))
                                                                                       (rule "mul_literals" (formula "76") (term "1,0,0"))
                                                                                       (rule "add_zero_right" (formula "76") (term "0,0"))
                                                                                       (rule "disjointDefinition" (formula "84") (term "1,0,1,1,0"))
                                                                                       (rule "disjointDefinition" (formula "84") (term "1,0,1,1"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,1,1"))
                                                                                       (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,1,1"))
                                                                                       (rule "polySimp_addComm1" (formula "84") (term "0,0,0,1,1"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "84") (term "1,0,0"))
                                                                                       (rule "add_zero_right" (formula "84") (term "0,1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "84") (term "1,0,1,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "84") (term "0,0,1,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "84") (term "1,0,0,0,0,1,1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "84") (term "0,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "78") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "78") (term "1,1"))
                                                                                       (rule "mul_literals" (formula "78") (term "0,1,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "78") (term "1,1,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "80") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "80") (term "1,1"))
                                                                                       (rule "mul_literals" (formula "80") (term "0,1,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "80") (term "1,1,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                                                                       (rule "mul_literals" (formula "76") (term "1"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "84") (term "0,0,1,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0,1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "84") (term "0,0,0,1,1"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "84") (term "1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "84") (term "0,1,0,0"))
                                                                                       (rule "replace_known_left" (formula "84") (term "1,0,0") (ifseqformula "76"))
                                                                                        (builtin "One Step Simplification" (formula "84"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "84") (term "0,0,1,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0,1,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "84") (term "0,0,0,1,1,0"))
                                                                                       (rule "commute_or" (formula "84") (term "0,0,0"))
                                                                                       (rule "replace_known_left" (formula "84") (term "0,0,0") (ifseqformula "62"))
                                                                                        (builtin "One Step Simplification" (formula "84"))
                                                                                       (rule "cnf_rightDist" (formula "84") (term "1"))
                                                                                       (rule "commute_or" (formula "84") (term "1,1"))
                                                                                       (rule "cnf_rightDist" (formula "84") (term "0"))
                                                                                       (rule "commute_or" (formula "84") (term "1,0"))
                                                                                       (rule "cnf_rightDist" (formula "84") (term "0,1"))
                                                                                       (rule "replace_known_left" (formula "84") (term "0,0,1") (ifseqformula "80"))
                                                                                        (builtin "One Step Simplification" (formula "84"))
                                                                                       (rule "commute_or" (formula "84") (term "0,1"))
                                                                                       (rule "replace_known_left" (formula "84") (term "0,1") (ifseqformula "25"))
                                                                                        (builtin "One Step Simplification" (formula "84"))
                                                                                       (rule "cnf_rightDist" (formula "84") (term "0,0"))
                                                                                       (rule "replace_known_left" (formula "84") (term "0,0,0") (ifseqformula "78"))
                                                                                        (builtin "One Step Simplification" (formula "84"))
                                                                                       (rule "commute_or" (formula "84") (term "0,0"))
                                                                                       (rule "replace_known_left" (formula "84") (term "0,0") (ifseqformula "22"))
                                                                                        (builtin "One Step Simplification" (formula "84"))
                                                                                       (rule "cut_direct" (formula "23") (term "0"))
                                                                                       (branch "CUT: self.left = null TRUE"
                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                          (rule "true_left" (formula "24"))
                                                                                          (rule "replace_known_left" (formula "77") (term "0,0,0,0,0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "77"))
                                                                                          (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "41"))
                                                                                          (rule "true_left" (formula "41"))
                                                                                          (rule "replace_known_left" (formula "83") (term "0,0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "83"))
                                                                                          (rule "orRight" (formula "83"))
                                                                                          (rule "replace_known_right" (formula "78") (term "0,0,0,0,0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "78"))
                                                                                          (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "63"))
                                                                                          (rule "true_left" (formula "63"))
                                                                                          (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "61"))
                                                                                          (rule "true_left" (formula "61"))
                                                                                          (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "63"))
                                                                                          (rule "true_left" (formula "63"))
                                                                                          (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "52"))
                                                                                          (rule "true_left" (formula "52"))
                                                                                          (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "61"))
                                                                                          (rule "true_left" (formula "61"))
                                                                                          (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "true_left" (formula "35"))
                                                                                          (rule "replace_known_left" (formula "71") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "71"))
                                                                                          (rule "true_left" (formula "71"))
                                                                                          (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "54"))
                                                                                          (rule "true_left" (formula "54"))
                                                                                          (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                                          (rule "true_left" (formula "2"))
                                                                                          (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
                                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                                          (rule "true_left" (formula "21"))
                                                                                          (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "69"))
                                                                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                                          (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                                          (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "30"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                                          (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                          (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "59"))
                                                                                          (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "58"))
                                                                                          (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "73"))
                                                                                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "21")))
                                                                                          (rule "true_left" (formula "27"))
                                                                                          (rule "replace_known_right" (formula "64") (term "1,0") (ifseqformula "72"))
                                                                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "21")))
                                                                                          (rule "true_left" (formula "64"))
                                                                                          (rule "replace_known_left" (formula "66") (term "0,1,0,0") (ifseqformula "58"))
                                                                                           (builtin "One Step Simplification" (formula "66"))
                                                                                          (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "59"))
                                                                                           (builtin "One Step Simplification" (formula "56"))
                                                                                          (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "24"))
                                                                                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "72")))
                                                                                          (rule "closeFalse" (formula "22"))
                                                                                       )
                                                                                       (branch "CUT: self.left = null FALSE"
                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                          (rule "replace_known_right" (formula "77") (term "0,0,0,0,0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "77"))
                                                                                          (rule "replace_known_right" (formula "78") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "78"))
                                                                                          (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "65"))
                                                                                          (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "23"))
                                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                                          (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "53"))
                                                                                          (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "41"))
                                                                                          (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "replace_known_right" (formula "66") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "66"))
                                                                                          (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "62"))
                                                                                          (rule "notLeft" (formula "62"))
                                                                                          (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "57"))
                                                                                          (rule "replace_known_right" (formula "85") (term "0,0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "21")))
                                                                                          (rule "orRight" (formula "85"))
                                                                                          (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "35"))
                                                                                          (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                                          (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                                          (rule "replace_known_left" (formula "76") (term "0,1,0,0") (ifseqformula "63"))
                                                                                           (builtin "One Step Simplification" (formula "76"))
                                                                                          (rule "replace_known_right" (formula "78") (term "0,0,0,0,0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "78"))
                                                                                          (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "69"))
                                                                                          (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "50"))
                                                                                          (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "26"))
                                                                                          (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "67"))
                                                                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "55"))
                                                                                          (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "68"))
                                                                                          (rule "replace_known_right" (formula "79") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "79"))
                                                                                          (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "38"))
                                                                                          (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "85"))
                                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "65"))
                                                                                           (builtin "One Step Simplification" (formula "62"))
                                                                                          (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "85")))
                                                                                          (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "85")))
                                                                                          (rule "replace_known_left" (formula "78") (term "0,1,0,0") (ifseqformula "68"))
                                                                                           (builtin "One Step Simplification" (formula "78"))
                                                                                          (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "69"))
                                                                                           (builtin "One Step Simplification" (formula "66"))
                                                                                          (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "26"))
                                                                                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "86")))
                                                                                          (rule "closeFalse" (formula "24"))
                                                                                       )
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                       (rule "andRight" (formula "84"))
                                                                                       (branch "Case 1"
                                                                                           (builtin "One Step Simplification" (formula "84"))
                                                                                          (rule "eqSymm" (formula "84"))
                                                                                          (rule "close" (formula "84") (ifseqformula "20"))
                                                                                       )
                                                                                       (branch "Case 2"
                                                                                          (rule "andRight" (formula "84"))
                                                                                          (branch "Case 1"
                                                                                              (builtin "One Step Simplification" (formula "84"))
                                                                                             (rule "eqSymm" (formula "84"))
                                                                                             (rule "close" (formula "84") (ifseqformula "17"))
                                                                                          )
                                                                                          (branch "Case 2"
                                                                                             (rule "andRight" (formula "84"))
                                                                                             (branch "Case 1"
                                                                                                 (builtin "One Step Simplification" (formula "84"))
                                                                                                (rule "eqSymm" (formula "84"))
                                                                                                (rule "close" (formula "84") (ifseqformula "14"))
                                                                                             )
                                                                                             (branch "Case 2"
                                                                                                (rule "andRight" (formula "84"))
                                                                                                (branch "Case 1"
                                                                                                    (builtin "One Step Simplification" (formula "84"))
                                                                                                   (rule "eqSymm" (formula "84"))
                                                                                                   (rule "close" (formula "84") (ifseqformula "11"))
                                                                                                )
                                                                                                (branch "Case 2"
                                                                                                   (rule "andRight" (formula "84"))
                                                                                                   (branch "Case 1"
                                                                                                      (rule "orRight" (formula "84"))
                                                                                                       (builtin "One Step Simplification" (formula "85"))
                                                                                                       (builtin "One Step Simplification" (formula "84"))
                                                                                                      (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "0"))
                                                                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "0"))
                                                                                                      (rule "replaceKnownSelect_taclet2_3" (formula "85") (term "1,1"))
                                                                                                      (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "85") (term "1,1"))
                                                                                                      (rule "eqSymm" (formula "85"))
                                                                                                      (rule "replace_known_right" (formula "77") (term "0,0,0,0,0") (ifseqformula "84"))
                                                                                                       (builtin "One Step Simplification" (formula "77"))
                                                                                                      (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "84"))
                                                                                                       (builtin "One Step Simplification" (formula "65"))
                                                                                                      (rule "replace_known_right" (formula "78") (term "0") (ifseqformula "84"))
                                                                                                       (builtin "One Step Simplification" (formula "78"))
                                                                                                      (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "84"))
                                                                                                       (builtin "One Step Simplification" (formula "2"))
                                                                                                      (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "84"))
                                                                                                       (builtin "One Step Simplification" (formula "53"))
                                                                                                      (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "84"))
                                                                                                       (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "85")))
                                                                                                      (rule "closeFalse" (formula "35"))
                                                                                                   )
                                                                                                   (branch "Case 2"
                                                                                                      (rule "andRight" (formula "84"))
                                                                                                      (branch "Case 1"
                                                                                                         (rule "orRight" (formula "84"))
                                                                                                          (builtin "One Step Simplification" (formula "85"))
                                                                                                          (builtin "One Step Simplification" (formula "84"))
                                                                                                         (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "0"))
                                                                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "0"))
                                                                                                         (rule "replaceKnownSelect_taclet2_5" (formula "85") (term "1,1"))
                                                                                                         (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "85") (term "1,1"))
                                                                                                         (rule "eqSymm" (formula "85"))
                                                                                                         (rule "replace_known_right" (formula "79") (term "0,0,0,0,0") (ifseqformula "84"))
                                                                                                          (builtin "One Step Simplification" (formula "79"))
                                                                                                         (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "84"))
                                                                                                          (builtin "One Step Simplification" (formula "69"))
                                                                                                         (rule "replace_known_left" (formula "79") (term "0,1,0,0") (ifseqformula "69"))
                                                                                                          (builtin "One Step Simplification" (formula "79"))
                                                                                                         (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "84"))
                                                                                                          (builtin "One Step Simplification" (formula "68"))
                                                                                                         (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "84"))
                                                                                                          (builtin "One Step Simplification" (formula "38"))
                                                                                                         (rule "replace_known_right" (formula "80") (term "0") (ifseqformula "84"))
                                                                                                          (builtin "One Step Simplification" (formula "80"))
                                                                                                         (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "84"))
                                                                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "85")))
                                                                                                         (rule "closeFalse" (formula "32"))
                                                                                                      )
                                                                                                      (branch "Case 2"
                                                                                                         (rule "andRight" (formula "84"))
                                                                                                         (branch "Case 1"
                                                                                                             (builtin "One Step Simplification" (formula "84"))
                                                                                                            (rule "eqSymm" (formula "84"))
                                                                                                            (rule "close" (formula "84") (ifseqformula "8"))
                                                                                                         )
                                                                                                         (branch "Case 2"
                                                                                                            (rule "andRight" (formula "84"))
                                                                                                            (branch "Case 1"
                                                                                                                (builtin "One Step Simplification" (formula "84"))
                                                                                                               (rule "eqSymm" (formula "84"))
                                                                                                               (rule "close" (formula "84") (ifseqformula "5"))
                                                                                                            )
                                                                                                            (branch "Case 2"
                                                                                                               (rule "andRight" (formula "84"))
                                                                                                               (branch "Case 1"
                                                                                                                  (rule "orRight" (formula "84"))
                                                                                                                   (builtin "One Step Simplification" (formula "85"))
                                                                                                                   (builtin "One Step Simplification" (formula "84"))
                                                                                                                  (rule "replaceKnownSelect_taclet2_3" (formula "84") (term "0"))
                                                                                                                  (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "84") (term "0"))
                                                                                                                  (rule "replaceKnownSelect_taclet2_3" (formula "85") (term "1,1"))
                                                                                                                  (rule "replaceKnownAuxiliaryConstant_taclet2_4" (formula "85") (term "1,1"))
                                                                                                                  (rule "eqSymm" (formula "85"))
                                                                                                                  (rule "replace_known_right" (formula "77") (term "0,0,0,0,0") (ifseqformula "84"))
                                                                                                                   (builtin "One Step Simplification" (formula "77"))
                                                                                                                  (rule "replace_known_right" (formula "65") (term "0") (ifseqformula "84"))
                                                                                                                   (builtin "One Step Simplification" (formula "65"))
                                                                                                                  (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "84"))
                                                                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                                                                  (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "84"))
                                                                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                                                                  (rule "notLeft" (formula "62"))
                                                                                                                  (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "84"))
                                                                                                                   (builtin "One Step Simplification" (formula "41"))
                                                                                                                  (rule "replace_known_right" (formula "77") (term "0") (ifseqformula "84"))
                                                                                                                   (builtin "One Step Simplification" (formula "77"))
                                                                                                                  (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "84"))
                                                                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "85")))
                                                                                                                  (rule "closeFalse" (formula "2"))
                                                                                                               )
                                                                                                               (branch "Case 2"
                                                                                                                  (rule "andRight" (formula "84"))
                                                                                                                  (branch "Case 1"
                                                                                                                     (rule "orRight" (formula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "85"))
                                                                                                                      (builtin "One Step Simplification" (formula "84"))
                                                                                                                     (rule "replaceKnownSelect_taclet2_5" (formula "84") (term "0"))
                                                                                                                     (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "84") (term "0"))
                                                                                                                     (rule "replaceKnownSelect_taclet2_5" (formula "85") (term "1,1"))
                                                                                                                     (rule "replaceKnownAuxiliaryConstant_taclet2_6" (formula "85") (term "1,1"))
                                                                                                                     (rule "eqSymm" (formula "85"))
                                                                                                                     (rule "replace_known_right" (formula "79") (term "0,0,0,0,0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "79"))
                                                                                                                     (rule "replace_known_right" (formula "69") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "69"))
                                                                                                                     (rule "replace_known_left" (formula "79") (term "0,1,0,0") (ifseqformula "69"))
                                                                                                                      (builtin "One Step Simplification" (formula "79"))
                                                                                                                     (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "55"))
                                                                                                                     (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "25"))
                                                                                                                     (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "50"))
                                                                                                                     (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "38"))
                                                                                                                     (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "68"))
                                                                                                                     (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                                                                     (rule "replace_known_right" (formula "80") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "80"))
                                                                                                                     (rule "replace_known_right" (formula "70") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "70"))
                                                                                                                     (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "84"))
                                                                                                                      (builtin "One Step Simplification" (formula "26"))
                                                                                                                     (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "85"))
                                                                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                                                                                                                     (rule "closeFalse" (formula "1"))
                                                                                                                  )
                                                                                                                  (branch "Case 2"
                                                                                                                     (rule "andRight" (formula "84"))
                                                                                                                     (branch "Case 1"
                                                                                                                         (builtin "One Step Simplification" (formula "84"))
                                                                                                                        (rule "eqSymm" (formula "84"))
                                                                                                                        (rule "close" (formula "84") (ifseqformula "4"))
                                                                                                                     )
                                                                                                                     (branch "Case 2"
                                                                                                                         (builtin "One Step Simplification" (formula "84"))
                                                                                                                        (rule "eqSymm" (formula "84"))
                                                                                                                        (rule "close" (formula "84") (ifseqformula "3"))
                                                                                                                     )
                                                                                                                  )
                                                                                                               )
                                                                                                            )
                                                                                                         )
                                                                                                      )
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "Case 2"
                                                                            (builtin "One Step Simplification" (formula "84"))
                                                                           (rule "closeTrue" (formula "84"))
                                                                        )
                                                                     )
                                                                     (branch "Case 2"
                                                                         (builtin "One Step Simplification" (formula "84"))
                                                                        (rule "allRight" (formula "84") (inst "sk=f_0"))
                                                                        (rule "allRight" (formula "84") (inst "sk=o_0"))
                                                                        (rule "orRight" (formula "84"))
                                                                        (rule "orRight" (formula "84"))
                                                                        (rule "eqSymm" (formula "86"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "80") (term "1"))
                                                                        (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "78") (term "1"))
                                                                        (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "76"))
                                                                        (rule "mul_literals" (formula "76") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "76") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "80") (term "1"))
                                                                        (rule "polySimp_mulComm0" (formula "80") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "80") (term "1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1"))
                                                                        (rule "mul_literals" (formula "80") (term "0,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "80") (term "1,1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1"))
                                                                        (rule "polySimp_mulComm0" (formula "78") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "78") (term "1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "78") (term "1,1,1"))
                                                                        (rule "mul_literals" (formula "78") (term "0,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "78") (term "1,1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                                                        (rule "mul_literals" (formula "76") (term "1"))
                                                                        (rule "pullOutSelect" (formula "86") (term "0") (inst "selectSK=f_0_0"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "86")))
                                                                        (rule "eqSymm" (formula "87"))
                                                                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "85"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "87")))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   )
)
)
}
